{"version":3,"sources":["constants/Role.js","components/Setting/Setting.js","components/CheckRole/CheckRole.js","components/Home/Home.js","locales/index.js","App.js","serviceWorker.js","index.js","static/wolf.jpg","static/predictor.jpg","static/witch.jpg","static/hunter.jpg","static/villager.jpg"],"names":["WOLF","key","isDead","isGood","src","PREDICTOR","isGod","WITCH","HUNTER","VILLAGER","Setting","props","t","useTranslation","playerNumber","setPlayerNumber","wolfNumber","setWolfNumber","isUsePredictor","setIsUsePredictor","isUseWitch","setIsUseWitch","isUseHunter","setIsUseHunter","handleStart","TextField","label","value","onChange","e","target","margin","InputLabel","htmlFor","Select","color","native","inputProps","name","Button","onClick","variant","useStyles","makeStyles","theme","root","padding","spacing","isChecked","role","textAlign","fontSize","RoleCard","sit","classes","useState","isWatch","setIsWatch","isOpen","setIsOpen","handleClose","wolf","predictor","witch","hunter","villager","Paper","className","Typography","component","index","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","width","DialogActions","CheckRole","list","map","container","paddingLeft","paddingRight","toolbar","mixins","drawer","drawerPaper","flexGrow","menuButton","marginRight","title","fullList","Home","step","setStep","setList","isOpenDrawer","setIsOpenDrawer","i18n","toggleDrawer","event","type","getRaddomIndex","Math","floor","random","Container","maxWidth","style","backgroundColor","height","AppBar","position","Toolbar","IconButton","edge","aria-label","changeLanguage","Drawer","anchor","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","len","itm","arr1","arr2","concat","createArray","i","forEach","use","initReactI18next","init","resources","translations","enUS","zhTW","lng","localStorage","getItem","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8b3ba215.chunk.js","sourcesContent":["export const WOLF = {\n  key: 'wolf',\n  isDead: false,\n  isGood: false,\n  src: 'wolf.jpg',\n};\n\nexport const PREDICTOR = {\n  key: 'predictor',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'predictor.jpg',\n};\n\nexport const WITCH = {\n  key: 'witch',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'witch.jpg',\n};\n\nexport const HUNTER = {\n  key: 'hunter',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'hunter.jpg',\n};\n\nexport const VILLAGER = {\n  key: 'villager',\n  isDead: false,\n  isGood: true,\n  isGod: false,\n  src: 'villager.jpg',\n};\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import FormControl from '@material-ui/core/FormControl';\n\nconst Setting = (props) => {\n  const { t } = useTranslation();\n  const {\n    playerNumber,\n    setPlayerNumber,\n    wolfNumber,\n    setWolfNumber,\n    isUsePredictor,\n    setIsUsePredictor,\n    isUseWitch,\n    setIsUseWitch,\n    isUseHunter,\n    setIsUseHunter,\n    handleStart,\n  } = props;\n\n  return (\n    <>\n      <div>\n        <TextField\n          label={t('player_number')}\n          // className={classes.textField}\n          value={playerNumber}\n          onChange={(e) => {setPlayerNumber(e.target.value)}}\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <TextField\n          label={t('player_number')}\n          // className={classes.textField}\n          value={wolfNumber}\n          onChange={(e) => {setWolfNumber(e.target.value)}}\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <InputLabel htmlFor=\"age-native-helper\">{t('predictor')}</InputLabel>\n        <Select\n          color=\"inherit\"\n          native\n          value={isUsePredictor}\n          onChange={(e) => setIsUsePredictor(e.target.value)}\n          inputProps={{\n            name: t('predictor'),\n          }}\n        >\n          <option value={true}>{t('yes')}</option>\n          <option value={false}>{t('no')}</option>\n        </Select>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"age-native-helper\">{t('witch')}</InputLabel>\n        <Select\n          color=\"inherit\"\n          native\n          value={isUseWitch}\n          onChange={(e) => setIsUseWitch(e.target.value)}\n          // inputProps={{\n          //   name: t('predictor'),\n          // }}\n        >\n          <option value={true}>{t('yes')}</option>\n          <option value={false}>{t('no')}</option>\n        </Select>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"age-native-helper\">{t('hunter')}</InputLabel>\n        <Select\n          color=\"inherit\"\n          native\n          value={isUseHunter}\n          onChange={(e) => setIsUseHunter(e.target.value)}\n          // inputProps={{\n          //   name: t('predictor'),\n          // }}\n        >\n          <option value={true}>{t('yes')}</option>\n          <option value={false}>{t('no')}</option>\n        </Select>\n      </div>\n      <Button onClick={handleStart} variant=\"contained\" color=\"secondary\">{t('start')}</Button>\n    </>\n  );\n};\n\nexport default Setting;\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport wolf from '../../static/wolf.jpg';\nimport predictor from '../../static/predictor.jpg';\nimport witch from '../../static/witch.jpg';\nimport hunter from '../../static/hunter.jpg';\nimport villager from '../../static/villager.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: '10px',\n  },\n  isChecked: {\n    color: 'red',\n  },\n  role: {\n    textAlign: 'center',\n    fontSize: '30px',\n  },\n}));\n\nconst RoleCard = (props) => {\n  const { sit } = props;\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [isWatch, setIsWatch] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (!isWatch) {\n      setIsOpen(true);\n    }\n  }\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsWatch(true);\n  }\n\n  let src = null;\n  switch(sit.role.key) {\n    case 'wolf':\n      src = wolf;\n      break;\n    case 'predictor':\n      src = predictor;\n      break;\n    case 'witch':\n      src = witch;\n      break;\n    case 'hunter':\n      src = hunter;\n      break;\n    case 'villager':\n      src = villager;\n      break;\n    default:\n      break;\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} onClick={handleClick}>\n        <Typography variant=\"h5\" component=\"h3\">\n          { t('sit_number', { index: sit.index }) }\n        </Typography>\n        <Typography component=\"p\">\n          { (isWatch) ? (\n            <span className={classes.isChecked}>\n              { t('is_checked') }\n            </span>\n          ) : t('check_role') }\n        </Typography>\n      </Paper>\n\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('your_role')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img src={src} width=\"100%\" />\n            <div className={classes.role}>\n              { t(sit.role.key) }\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CheckRole = (props) => {\n  const { t } = useTranslation();\n  const { list } = props;\n  const classes = useStyles();\n\n  return (\n    <> \n      {\n        list.map((sit) => {\n          return (\n            <div>\n              <RoleCard\n                sit={sit}\n              />\n            </div>\n          )\n        })\n      }\n      \n    </>\n  );\n};\n\nexport default CheckRole;\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Select from '@material-ui/core/Select';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  VILLAGER,\n} from '../../constants/Role';\nimport Setting from '../Setting/Setting';\nimport CheckRole from '../CheckRole/CheckRole';\n\nconst drawerWidth = 240;\n\nconst createArray = (len, itm) => {\n  let arr1 = [itm],\n      arr2 = [];\n  while (len > 0) {\n      if (len & 1) arr2 = arr2.concat(arr1);\n      arr1 = arr1.concat(arr1);\n      len >>>= 1;\n  }\n  return arr2;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: '0px',\n    paddingRight: '0px',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Home = (props) => {\n  const [step, setStep] = useState(0);\n  const [list, setList] = useState([]);\n  const [playerNumber, setPlayerNumber] = useState(6);\n  const [wolfNumber, setWolfNumber] = useState(2);\n  const [isUsePredictor, setIsUsePredictor] = useState(false);\n  const [isUseWitch, setIsUseWitch] = useState(false);\n  const [isUseHunter, setIsUseHunter] = useState(false);\n\n  const [isOpenDrawer, setIsOpenDrawer] = useState(false);\n  const { t, i18n } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    i18n.changeLanguage(value);\n    // console.log('value', value);\n    // setLanguage(value);\n  }\n\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpenDrawer(isOpen);\n  };\n\n  const handleRestart = () => {\n    setIsOpenDrawer(false);\n  }\n\n  const handleReSetting = () => {\n    setIsOpenDrawer(false);\n  }\n\n  const getRaddomIndex = () => {\n    return Math.floor(Math.random() * playerNumber);\n  }\n\n  const handleStart = () => {\n    const list = createArray(playerNumber, null);\n\n    // 狼人位置\n    for (let i = 0 ; i < wolfNumber ; i += 1) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WOLF,\n      };\n    }\n\n    // 預言家位置\n    if (isUsePredictor) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: PREDICTOR,\n      };\n    }\n\n    // 女巫位置\n    if (isUseWitch) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WITCH,\n      };\n    }\n\n    // 獵人位置\n    if (isUseHunter) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: HUNTER,\n      };\n    }\n\n    // 村民位置\n    list.forEach((sit, index) => {\n      if (sit === null) {\n        list[index] = {\n          index: index + 1,\n          role: VILLAGER,\n        };\n      }\n    })\n\n    setList(list);\n    setStep(1);\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100%' }}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                { t('title') }\n              </Typography>\n              <Select\n                color=\"inherit\"\n                native\n                // value={language}\n                onChange={(e) => handleChange(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"zh-TW\">繁體中文</option>\n                <option value=\"en-US\">English</option>\n              </Select>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            anchor=\"left\"\n            open={isOpenDrawer}\n            onClose={toggleDrawer(false)}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n              <ListItem button key={t('restart')} onClick={handleRestart}>\n                <ListItemIcon><CachedIcon /></ListItemIcon>\n                <ListItemText primary={t('restart')} />\n              </ListItem>\n              <ListItem button key={t('resetting')} onClick={handleReSetting}>\n                <ListItemIcon><AutorenewIcon /></ListItemIcon>\n                <ListItemText primary={t('resetting')} />\n              </ListItem>\n            </List>\n          </Drawer>\n            \n          {\n            (step === 0) && (\n              <Setting\n                playerNumber={playerNumber}\n                setPlayerNumber={setPlayerNumber}\n                wolfNumber={wolfNumber}\n                setWolfNumber={setWolfNumber}\n                isUsePredictor={isUsePredictor}\n                setIsUsePredictor={setIsUsePredictor}\n                isUseWitch={isUseWitch}\n                setIsUseWitch={setIsUseWitch}\n                isUseHunter={isUseHunter}\n                setIsUseHunter={setIsUseHunter}\n                handleStart={handleStart}\n              />\n            )\n          }\n          {\n            (step === 1) && (\n              <CheckRole\n                list={list}\n              />\n            )\n          }\n        </Typography>\n      </Container>\n    </>\n  );\n}\n\nexport default Home\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\nimport enUS from './languages/en-US.json';\nimport zhTW from './languages/zh-TW.json';\n\n// console.log('zhTW', zhTW);\n\ni18n\n.use(initReactI18next)\n.init({\n  // we init with resources\n  resources: {\n    'en-US': {\n      translations: enUS,\n    },\n    'zh-TW': {\n      translations: zhTW,\n    },\n  },\n  lng: localStorage.getItem('language') || 'zh-TW',\n  fallbackLng: 'zh-TW',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  // keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ',',\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport Home from './components/Home/Home';\n// import logo from './logo.svg';\nimport './App.css';\n// import './styles/styles.css';\n\nimport './locales/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wolf.9caa04d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/predictor.473d5f28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witch.4dc6d5d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5cf4e8f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/villager.fa735092.jpg\";"],"sourceRoot":""}