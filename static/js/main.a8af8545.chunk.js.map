{"version":3,"sources":["constants/Role.js","components/Setting/Setting.js","components/CheckRole/CheckRole.js","components/Game/Game.js","components/Home/Home.js","locales/index.js","App.js","serviceWorker.js","index.js","static/images/wolf.jpg","static/images/predictor.jpg","static/images/witch.jpg","static/images/hunter.jpg","static/images/villager.jpg","static/audio/step_1.mp3","static/audio/step_2.mp3","static/audio/step_3.mp3","static/audio/step_4.mp3","static/audio/step_5.mp3","static/audio/step_6.mp3","static/audio/step_7.mp3","static/audio/step_8.mp3","static/audio/step_9.mp3","static/audio/step_10.mp3","static/audio/step_11.mp3","static/audio/step_12.mp3","static/audio/step_13.mp3","static/audio/step_14.mp3","static/audio/step_15.mp3","static/audio/step_16.mp3","static/audio/step_17.mp3","static/audio/step_18.mp3"],"names":["WOLF","key","isDead","isGood","src","PREDICTOR","isGod","WITCH","HUNTER","VILLAGER","useStyles","makeStyles","theme","root","display","formControl","margin","spacing","group","Setting","props","classes","t","useTranslation","playerNumber","setPlayerNumber","wolfNumber","setWolfNumber","isUsePredictor","setIsUsePredictor","isUseWitch","setIsUseWitch","isUseHunter","setIsUseHunter","handleStart","FormControl","component","className","FormLabel","RadioGroup","row","value","onChange","e","target","FormControlLabel","control","Radio","label","Button","style","marginBottom","onClick","variant","color","padding","isChecked","role","textAlign","fontSize","RoleCard","sit","useState","isWatch","setIsWatch","isOpen","setIsOpen","wolf","predictor","witch","hunter","villager","Paper","Typography","index","Dialog","fullWidth","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","width","DialogActions","CheckRole","list","handleStartGame","map","DAY_TYPE","AudioSound","React","memo","url","onFinishedPlaying","playStatus","Sound","status","PLAYING","avatar","backgroundColor","pinkAvatar","pink","dead","good","bad","Game","step","setStep","isOpenWolfKill","setIsOpenWolfKill","deadNumber","setDeadNumber","witchDeadNumber","setWitchDeadNumber","isOpenWitchSave","setIsOpenWitchSave","isOpenWitchPoison","setIsOpenWitchPoison","isUse","setIsUse","isUseSave","setIsUseSave","isUsePoison","setIsUsePoison","isOpenPredictor","setIsOpenPredictor","predictorSelect","setPredictorSelect","isOpenRole","setIsOpenRols","isOpenResult","setIsOpenResult","day","setDay","dayType","setDayType","messages","setMessages","isOpenVote","setIsOpenVote","selectVote","setSelectVote","setDead","isOpenGameResult","setIsOpenGameResult","gameResultMessage","setGameResultMessage","isUseHunterSkill","hunterSelect","setHunterSelect","isOpenHunter","setIsOpenHunter","handleSongFinishedPlaying","useCallback","handleWitchSave","isSave","handleWitchPoison","isPoison","audioSrc","useMemo","returnSrc","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","step11","step12","step13","step14","step15","step16","step17","step18","generateResultMessage","returnMessage","tmp","push","sort","a","b","forEach","number","length","generateSelectPicker","selectValue","selectFunc","Grid","container","justify","alignItems","idDead","some","Avatar","handleVote","isVote","tmpDead","result","checkGameFinished","isFinished","message","checkHunter","initSelect","isHunter","deadWolf","deadPerson","handleShoot","isShoot","console","log","isNextDay","paddingTop","disabled","tmpArray","window","location","href","paddingLeft","paddingRight","height","toolbar","mixins","drawer","drawerPaper","flexGrow","menuButton","marginRight","title","fullList","Home","setList","isOpenDrawer","setIsOpenDrawer","i18n","toggleDrawer","event","type","getRaddomIndex","Math","floor","random","Container","maxWidth","AppBar","position","Toolbar","IconButton","edge","aria-label","Select","native","changeLanguage","inputProps","name","Drawer","anchor","onClose","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","len","itm","arr1","arr2","concat","createArray","i","use","initReactI18next","init","resources","translations","enUS","zhTW","lng","localStorage","getItem","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"yZAAaA,EAAO,CAClBC,IAAK,OACLC,QAAQ,EACRC,QAAQ,EACRC,IAAK,YAGMC,EAAY,CACvBJ,IAAK,YACLC,QAAQ,EACRC,QAAQ,EACRG,OAAO,EACPF,IAAK,iBAGMG,EAAQ,CACnBN,IAAK,QACLC,QAAQ,EACRC,QAAQ,EACRG,OAAO,EACPF,IAAK,aAGMI,EAAS,CACpBP,IAAK,SACLC,QAAQ,EACRC,QAAQ,EACRG,OAAO,EACPF,IAAK,cAGMK,EAAW,CACtBR,IAAK,WACLC,QAAQ,EACRC,QAAQ,EACRG,OAAO,EACPF,IAAK,gB,sDCpBDM,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,OAAQJ,EAAMK,QAAQ,IAExBC,MAAO,CACLF,OAAQJ,EAAMK,QAAQ,EAAG,OA0GdE,EAtGC,SAACC,GACf,IAAMC,EAAUX,IACRY,EAAMC,cAAND,EAENE,EAWEJ,EAXFI,aACAC,EAUEL,EAVFK,gBACAC,EASEN,EATFM,WACAC,EAQEP,EARFO,cACAC,EAOER,EAPFQ,eACAC,EAMET,EANFS,kBACAC,EAKEV,EALFU,WACAC,EAIEX,EAJFW,cACAC,EAGEZ,EAHFY,YACAC,EAEEb,EAFFa,eACAC,EACEd,EADFc,YAKF,OACE,oCACE,6BACE,kBAACC,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWhB,EAAQN,aACnD,kBAACuB,EAAA,EAAD,CAAWF,UAAU,UAAUd,EAAE,kBACjC,kBAACiB,EAAA,EAAD,CACEC,KAAG,EACHH,UAAWhB,EAAQH,MACnBuB,MAAOjB,EACPkB,SAAU,SAACC,GAAOlB,EAAiC,EAAjBkB,EAAEC,OAAOH,SAE3C,kBAACI,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,GAAIK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,OACvD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,GAAIK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,OACvD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,GAAIK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,UAI7D,6BACE,kBAACb,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWhB,EAAQN,aACnD,kBAACuB,EAAA,EAAD,CAAWF,UAAU,UAAUd,EAAE,gBACjC,kBAACiB,EAAA,EAAD,CACEC,KAAG,EACHH,UAAWhB,EAAQH,MACnBuB,MAAOf,EACPgB,SAAU,SAACC,GAAOhB,EAA+B,EAAjBgB,EAAEC,OAAOH,SAEzC,kBAACI,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACtD,kBAACH,EAAA,EAAD,CAAkBJ,MAAO,EAAGK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,SAI5D,6BACE,kBAACb,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWhB,EAAQN,aACnD,kBAACuB,EAAA,EAAD,CAAWF,UAAU,UAAUd,EAAE,cACjC,kBAACiB,EAAA,EAAD,CACEC,KAAG,EACHH,UAAWhB,EAAQH,MACnBuB,MAAOb,EACPc,SAAU,SAACC,GAAOd,EAAsC,SAAnBc,EAAEC,OAAOH,SAE9C,kBAACI,EAAA,EAAD,CAAkBJ,OAAO,EAAMK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,SAC5D,kBAACuB,EAAA,EAAD,CAAkBJ,OAAO,EAAOK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,WAInE,6BACE,kBAACa,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWhB,EAAQN,aACnD,kBAACuB,EAAA,EAAD,CAAWF,UAAU,UAAUd,EAAE,UACjC,kBAACiB,EAAA,EAAD,CACEC,KAAG,EACHH,UAAWhB,EAAQH,MACnBuB,MAAOX,EACPY,SAAU,SAACC,GAAOZ,EAAkC,SAAnBY,EAAEC,OAAOH,SAE1C,kBAACI,EAAA,EAAD,CAAkBJ,OAAO,EAAMK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,SAC5D,kBAACuB,EAAA,EAAD,CAAkBJ,OAAO,EAAOK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,WAInE,6BACE,kBAACa,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWhB,EAAQN,aACnD,kBAACuB,EAAA,EAAD,CAAWF,UAAU,UAAUd,EAAE,WACjC,kBAACiB,EAAA,EAAD,CACEC,KAAG,EACHH,UAAWhB,EAAQH,MACnBuB,MAAOT,EACPU,SAAU,SAACC,GAAOV,EAAmC,SAAnBU,EAAEC,OAAOH,SAE3C,kBAACI,EAAA,EAAD,CAAkBJ,OAAO,EAAMK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,SAC5D,kBAACuB,EAAA,EAAD,CAAkBJ,OAAO,EAAOK,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAO1B,EAAE,WAInE,kBAAC2B,EAAA,EAAD,CAAQC,MAAO,CAAEC,aAAc,QAAUC,QAASlB,EAAamB,QAAQ,YAAYC,MAAM,aAAahC,EAAE,e,2ICxGxGZ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0C,QAAS3C,EAAMK,QAAQ,EAAG,GAC1BD,OAAQ,QAEVwC,UAAW,CACTF,MAAO,OAETG,KAAM,CACJC,UAAW,SACXC,SAAU,WAIRC,GAAW,SAACxC,GAAW,IACnByC,EAAQzC,EAARyC,IACAvC,EAAMC,cAAND,EACFD,EAAUX,KAHU,EAKIoD,oBAAS,GALb,mBAKnBC,EALmB,KAKVC,EALU,OAMEF,oBAAS,GANX,mBAMnBG,EANmB,KAMXC,EANW,KAmBtB9D,EAAM,KACV,OAAOyD,EAAIJ,KAAKxD,KACd,IAAK,OACHG,EAAM+D,IACN,MACF,IAAK,YACH/D,EAAMgE,IACN,MACF,IAAK,QACHhE,EAAMiE,IACN,MACF,IAAK,SACHjE,EAAMkE,IACN,MACF,IAAK,WACHlE,EAAMmE,KAMV,OACE,oCACE,kBAACC,EAAA,EAAD,CAAOnC,UAAWhB,EAAQR,KAAMuC,QAlChB,WACbW,GACHG,GAAU,KAiCR,kBAACO,EAAA,EAAD,CAAYpB,QAAQ,KAAKjB,UAAU,MAC/Bd,EAAE,aAAc,CAAEoD,MAAOb,EAAIa,SAEjC,kBAACD,EAAA,EAAD,CAAYrC,UAAU,KACjB2B,EACD,0BAAM1B,UAAWhB,EAAQmC,WACrBlC,EAAE,eAEJA,EAAE,gBAIV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMZ,EACNa,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,cACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACpB,yBAAK7E,IAAKA,EAAKgF,MAAM,SACrB,yBAAK/C,UAAWhB,EAAQoC,MACpBnC,EAAEuC,EAAIJ,KAAKxD,QAInB,kBAACoF,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAzDI,WAClBc,GAAU,GACVF,GAAW,IAuDyBV,MAAM,UAAUD,QAAQ,aAClD/B,EAAE,gBA+BDgE,GAvBG,SAAClE,GAAW,IACpBE,EAAMC,cAAND,EACAiE,EAA0BnE,EAA1BmE,KAAMC,EAAoBpE,EAApBoE,gBAGd,OACE,oCAEID,EAAKE,IAAI,SAAC5B,GACR,OACE,6BACE,kBAAC,GAAD,CACEA,IAAKA,OAMf,kBAACZ,EAAA,EAAD,CAAQC,MAAO,CAAEC,aAAc,QAAUC,QAASoC,EAAiBnC,QAAQ,YAAYC,MAAM,aAAahC,EAAE,Y,kaC9E5GoE,GACC,MADDA,GAEG,QAGHC,GAAaC,IAAMC,KAAK,SAACzE,GAAW,IAEtC0E,EAEE1E,EAFF0E,IACAC,EACE3E,EADF2E,kBAGF,OACE,kBAAC,KAAD,CACED,IAAKA,EACLE,WAAYC,KAAMC,OAAOC,QAGzBJ,kBAAmBA,MAKnBrF,GAAYC,YAAW,CAC3ByF,OAAQ,CACNpF,OAAQ,GACRsC,MAAO,OACP+C,gBAAiB,WAEnBC,WAAY,CACVtF,OAAQ,GACRsC,MAAO,OACP+C,gBAAiBE,KAAK,MAExBC,KAAM,CACJxF,OAAQ,GACRsC,MAAO,OACP+C,gBAAiB,WAEnBI,KAAM,CACJ9C,SAAU,QAEZ+C,IAAK,CACH/C,SAAU,OACVL,MAAO,SA82BIqD,GAr2BF,SAACvF,GACZ,IAAMC,EAAUX,KAEd6E,EAMEnE,EANFmE,KACA3D,EAKER,EALFQ,eACAE,EAIEV,EAJFU,WACAE,EAGEZ,EAHFY,YAEAN,EACEN,EADFM,WAGMJ,EAAMC,cAAND,EAXc,EAYEwC,mBAAS,GAZX,mBAYf8C,EAZe,KAYTC,EAZS,OAasB/C,oBAAS,GAb/B,mBAafgD,EAbe,KAaCC,EAbD,OAccjD,mBAAS,MAdvB,mBAcfkD,EAde,KAcHC,EAdG,OAewBnD,mBAAS,MAfjC,mBAefoD,EAfe,KAeEC,EAfF,OAgBwBrD,oBAAS,GAhBjC,mBAgBfsD,EAhBe,KAgBEC,EAhBF,OAiB4BvD,oBAAS,GAjBrC,mBAiBfwD,EAjBe,KAiBIC,EAjBJ,OAkBIzD,oBAAS,GAlBb,mBAkBf0D,EAlBe,KAkBRC,EAlBQ,OAmBY3D,oBAAS,GAnBrB,mBAmBf4D,EAnBe,KAmBJC,EAnBI,QAoBgB7D,oBAAS,GApBzB,qBAoBf8D,GApBe,MAoBFC,GApBE,SAqBwB/D,oBAAS,GArBjC,qBAqBfgE,GArBe,MAqBEC,GArBF,SAsBwBjE,mBAAS,MAtBjC,qBAsBfkE,GAtBe,MAsBEC,GAtBF,SAuBcnE,oBAAS,GAvBvB,qBAuBfoE,GAvBe,MAuBHC,GAvBG,SAwBkBrE,oBAAS,GAxB3B,qBAwBfsE,GAxBe,MAwBDC,GAxBC,SAyBAvE,mBAAS,GAzBT,qBAyBfwE,GAzBe,MAyBVC,GAzBU,SA0BQzE,mBAAS4B,IA1BjB,qBA0Bf8C,GA1Be,MA0BNC,GA1BM,SA2BU3E,mBAAS,IA3BnB,qBA2Bf4E,GA3Be,MA2BLC,GA3BK,SA4Bc7E,oBAAS,GA5BvB,qBA4Bf8E,GA5Be,MA4BHC,GA5BG,SA6Bc/E,mBAAS,MA7BvB,qBA6BfgF,GA7Be,MA6BHC,GA7BG,SA8BEjF,mBAAS,IA9BX,qBA8Bf0C,GA9Be,MA8BTwC,GA9BS,SA+B0BlF,oBAAS,GA/BnC,qBA+BfmF,GA/Be,MA+BGC,GA/BH,SAgC4BpF,mBAAS,IAhCrC,qBAgCfqF,GAhCe,MAgCIC,GAhCJ,SAiC0BtF,oBAAS,GAjCnC,qBAiCfuF,GAjCe,gBAkCkBvF,mBAAS,OAlC3B,qBAkCfwF,GAlCe,MAkCDC,GAlCC,SAmCkBzF,oBAAS,GAnC3B,qBAmCf0F,GAnCe,MAmCDC,GAnCC,MAqChBC,GAA4BC,sBAAY,WAE5C,OAAO/C,GACL,KAAK,EACHC,EAAQ,GACR,MACF,KAAK,EACHA,EAAQ,GACR,MACF,KAAK,EACHA,EAAQ,GACR,MACF,KAAK,EAEHE,GAAkB,GAClB,MACF,KAAK,EAGDF,EADE/E,EACM,EAGJF,EACM,GAEJI,EAEM,GAEA,IAId,MACF,KAAK,EACH6E,EAAQ,GACR,MACF,KAAK,EACHQ,GAAmB,GACnBR,EAAQ,GACR,MACF,KAAK,EACH,MACF,KAAK,EACHU,GAAqB,GACrBV,EAAQ,IACR,MACF,KAAK,GACH,MACF,KAAK,GAGDA,EADEjF,EACM,GAEJI,EAEM,GAEA,IAIZ,MACF,KAAK,GACH6E,EAAQ,IACR,MACF,KAAK,GACHkB,IAAmB,GACnB,MACF,KAAK,GAEH,MACF,KAAK,GAGDlB,EAFE7E,EAEM,GAEA,IAEV,MACF,KAAK,GACH6E,EAAQ,IACR,MACF,KAAK,GACHA,EAAQ,IACR,MACF,KAAK,GACHwB,IAAgB,KAInB,CAACzB,IAkBEgD,GAAkB,SAACC,GACnBA,IAEFpC,GAAS,GACTE,GAAa,GACbV,EAAc,OAEhBI,GAAmB,GACnBR,EAAQ,IASJiD,GAAoB,SAACC,GACzBlC,GAAekC,GACVA,GACH5C,EAAmB,MAErBI,GAAqB,GACrBV,EAAQ,KA6BJmD,GAAWC,kBAAQ,WACvB,IAAIC,EAAY,KAEhB,OAAOtD,GACL,KAAK,EACHsD,EAAYC,KACZ,MACF,KAAK,EACHD,EAAYE,KACZ,MACF,KAAK,EACHF,EAAYG,KACZ,MACF,KAAK,EACHH,EAAYI,KACZ,MACF,KAAK,EACHJ,EAAYK,KACZ,MACF,KAAK,EACHL,EAAYM,KACZ,MACF,KAAK,EACHN,EAAYO,KACZ,MACF,KAAK,EACHP,EAAYQ,KACZ,MACF,KAAK,EACHR,EAAYS,KACZ,MACF,KAAK,GACHT,EAAYU,KACZ,MACF,KAAK,GACHV,EAAYW,KACZ,MACF,KAAK,GACHX,EAAYY,KACZ,MACF,KAAK,GACHZ,EAAYa,KACZ,MACF,KAAK,GACHb,EAAYc,KACZ,MACF,KAAK,GACHd,EAAYe,KACZ,MACF,KAAK,GACHf,EAAYgB,KACZ,MACF,KAAK,GACHhB,EAAYiB,KACZ,MACF,KAAK,GACHjB,EAAYkB,KAMhB,OAAOlB,GACN,CAACtD,IAOEyE,GAAwB,WAC5B,IAAIC,EAAgB,KACpB,GAAmB,OAAftE,GAA2C,OAApBE,EACzBoE,EAAgBhK,EAAE,qBACb,CACL,IAAIiK,EAAM,GACS,OAAfvE,GACFuE,EAAIC,KAAKxE,EAAWtC,OAEE,OAApBwC,IACiB,OAAfF,IAAuBE,EAAgBxC,MAAUsC,EAAWtC,OAC9D6G,EAAIC,KAAKtE,EAAgBxC,QAO7B6G,EAAIE,KAAK,SAACC,EAAGC,GACX,OAAOD,EAAIC,IAIbJ,EAAIK,QAAQ,SAACC,EAAQnH,GACnB4G,GAAiBO,EACE,IAAfN,EAAIO,QAAgBpH,IAAU6G,EAAIO,OAAS,IAC7CR,GAAiB,QAKvB,OAAOA,GAsEHS,GAAuB,SAACtI,GAC5B,IACIuI,EAAc,KACdC,EAAa,KAEjB,OAAOxI,GAEL,KAAKzD,EAAKC,IACR+L,EAAchF,EACdiF,EAAahF,EACb,MAEF,KAAK1G,EAAMN,IACT+L,EAAc9E,EACd+E,EAAa9E,EACb,MAEF,KAAK9G,EAAUJ,IACb+L,EAAchE,GACdiE,EAAahE,GACb,MAEF,KAAKzH,EAAOP,IACV+L,EAAc1C,GACd2C,EAAa1C,GACb,MAEF,QACEyC,EAAclD,GACdmD,EAAalD,GA0CjB,OAtCE,kBAACmD,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAExC,kBAACH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAExC9G,EAAKE,IAAI,SAAA5B,GACP,IAAIxB,EAAYhB,EAAQ+E,OAEpB4F,GACEA,EAAYtH,QAAUb,EAAIa,QAC5BrC,EAAYhB,EAAQiF,YAKxB,IAAMgG,EAAS9F,GAAK+F,KAAK,SAAAhB,GAAG,OAAIA,EAAI7G,QAAUb,EAAIa,QAElD,OACE,oCAEK4H,EACC,kBAACE,GAAA,EAAD,CAAQnK,UAAWhB,EAAQmF,MACvB3C,EAAIa,OAGR,kBAAC8H,GAAA,EAAD,CAAQnK,UAAWA,EAAWe,QAAS,WAAO6I,EAAWpI,KACrDA,EAAIa,aAsBxB+H,GAAa,SAACC,GAElB7D,IAAc,GAEd,IAAM8D,EAAO,uBACRnG,IADQ,CAEXsC,KAEE4D,GACF1D,GAAQ2D,GAERhE,GAAY,GAAD,oBACND,IADM,WAENpH,EAAE,QAAS,CAAEgH,UAFP,OAEgBQ,GAAWpE,WAGtCiE,GAAY,GAAD,oBACND,IADM,WAENpH,EAAE,QAAS,CAAEgH,UAFP,OAEgBhH,EAAE,oBAI/B,IAAMsL,EAASC,GAAkBF,GAC7BC,EAAOE,YACT5D,IAAoB,GACpBE,GAAqBwD,EAAOG,UAGXC,GAAYL,GAG3BlD,IAAgB,GAEhBwD,IAAW,IAWXD,GAAc,SAACxG,GACnB,IAAI0G,GAAW,EAOf,OAJIlL,IAAgBqH,KAClB6D,EAAW1G,EAAK+F,KAAK,SAAAhB,GAAG,OAAIA,EAAI9H,KAAKxD,MAAQO,EAAOP,OAG/CiN,GASHL,GAAoB,SAACrG,GAEzB,IAAI2G,EAAW,EAOf,GANA3G,EAAKoF,QAAQ,SAACpF,GACRA,EAAK/C,KAAKxD,MAAQD,EAAKC,MACzBkN,GAAY,KAIZA,IAAazL,EACf,MAAO,CACLoL,YAAY,EACZC,QAASzL,EAAE,aAKf,IAAI8L,EAAa,EAOjB,OANA5G,EAAKoF,QAAQ,SAACpF,GACRA,EAAK/C,KAAKxD,MAAQD,EAAKC,MACzBmN,GAAc,KAIdA,GAAc1L,EACT,CACLoL,YAAY,EACZC,QAASzL,EAAE,YAIR,CACLwL,YAAY,EACZC,QAAS,KAUPM,GAAc,SAACC,GACnB,GAAIA,EAAS,CACX,IAAMX,EAAO,uBACRnG,IADQ,CAEX8C,KAGFN,GAAQ2D,GACR,IAAMC,EAASC,GAAkBF,GAE7BC,EAAOE,YACT5D,IAAoB,GACpBE,GAAqBwD,EAAOG,UAE5BQ,QAAQC,IAAI,aAGdD,QAAQC,IAAI,SAUVP,GAAa,SAACQ,GAElBxG,EAAc,MACdE,EAAmB,MACnBc,GAAmB,MACnBc,GAAc,MACdtB,GAAS,GACT8B,GAAgB,MAEZkE,IAEFlF,GAAOD,GAAM,GAGbG,GAAW/C,IAGXmB,EAAQ,KAaZ,OACE,oCACE,yBAAK3D,MAAO,CAAEwK,WAAY,SACtBpM,EAAE,WAGN,yBAAK4B,MAAO,CAAEwK,WAAY,SACtBpM,EAAE,iBAGN,6BACE,4BAEIoH,GAASjD,IAAI,SAAAsH,GAAO,OAAI,4BAAMA,OAKpC,6BAEOvE,KAAY9C,IACX,kBAACzC,EAAA,EAAD,CAAQG,QAAS,kBAAOyF,IAAc,IAAQxF,QAAQ,YAAYC,MAAM,aAAchC,EAAE,gBAKhG,kBAACqE,GAAD,CACEG,IAAKkE,GACLjE,kBAAmB2D,KAIrB,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMiC,EAENhC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,cACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAClB8G,GAAqB/L,EAAKC,OAGhC,kBAACoF,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAzgBY,WAC1B2D,GAAkB,GAClBF,EAAQ,IAugBoCvD,MAAM,UAAUqK,SAAyB,OAAf3G,EAAqB3D,QAAQ,aACzF/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMuC,EAENtC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,eACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAEjByC,EACCpG,EAAE,aAEF,kBAAC4K,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UACxC/K,EAAE,cAAe,CAAEoD,MAAQsC,EAAcA,EAAWtC,MAAQ,UAMxE,kBAACW,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WAAOwG,IAAgB,IAAStG,MAAM,UAAUD,QAAQ,YACrE/B,EAAE,OAEN,kBAAC2B,EAAA,EAAD,CAAQG,QAAS,WAAOwG,IAAgB,IAAQtG,MAAM,UAAUD,QAAQ,YAAYsK,SAAUjG,GAC1FpG,EAAE,UAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMyC,EACNxC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,iBACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAEjB2C,GACCtG,EAAE,eAEFyK,GAAqBxL,EAAMN,OAKnC,kBAACoF,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WAAO0G,IAAkB,IAASxG,MAAM,UAAUD,QAAQ,YACvE/B,EAAE,OAEN,kBAAC2B,EAAA,EAAD,CAAQ0K,SAAWnG,GAA6B,OAApBN,GAA4BU,GAAcxE,QAAS,WAAO0G,IAAkB,IAAQxG,MAAM,UAAUD,QAAQ,aACpI/B,EAAE,UAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMiD,GACNhD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,qBACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAClB8G,GAAqB1L,EAAUJ,OAGrC,kBAACoF,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQ0K,SAA8B,OAApB3F,GAA0B5E,QAAS,WAljB3D2E,IAAmB,GACnBI,IAAc,GACdtB,EAAQ,KAgjB8EvD,MAAM,UAAUD,QAAQ,aACpG/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMqD,GACNpD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,gBACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAEjB+C,IAAgD,SAA7BA,GAAgBvE,KAAKxD,IACvC,0BAAMoC,UAAWhB,EAAQqF,KAAMpF,EAAE,YAEjC,0BAAMe,UAAWhB,EAAQoF,MAAOnF,EAAE,eAK1C,kBAAC+D,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WAlkBvB+E,IAAc,GACdtB,EAAQ,KAikB+CvD,MAAM,UAAUD,QAAQ,aACrE/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMuD,GACNtD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,mBACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAElBoG,OAIN,kBAAChG,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAjeU,WAExBqF,GAAW/C,IAGX2C,IAAgB,GAGhBM,GAAY,GAAD,oBACND,IADM,WAENpH,EAAE,UAAW,CAAEgH,UAFT,OAEkB+C,SAG7B,IAAMuC,EAAW,GAGE,OAAf5G,IACF4G,EAASpC,KAAKxE,GACdgC,GAAQ,GAAD,oBACFxC,IADE,CAELQ,MAKAlF,GAAkC,OAApBoF,GAChB0G,EAASpC,KAAKtE,GAIhB,IAAMyF,EAAO,uBACRnG,IACAoH,GAEDA,EAAS9B,OAAS,GACpB9C,GAAQ2D,GAGV,IAAMC,EAASC,GAAkBF,GAC7BC,EAAOE,YACT5D,IAAoB,GACpBE,GAAqBwD,EAAOG,UAGXC,GAAYL,GAG3BlD,IAAgB,GAEhBwD,IAAW,IAgb2B3J,MAAM,UAAUD,QAAQ,aACxD/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAM+D,GACN9D,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,eACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAClB8G,GAAqB,MAG3B,kBAAC1G,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WAAQqJ,IAAW,IAAWnJ,MAAM,UAAUD,QAAQ,YACnE/B,EAAE,YAEN,kBAAC2B,EAAA,EAAD,CAAQG,QAAS,WAAQqJ,IAAW,IAAUnJ,MAAM,UAAUD,QAAQ,aAClE/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAMoE,GACNnE,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,cACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAClBkE,KAGN,kBAAC9D,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WApOvByK,OAAOC,SAASC,KAAO,KAoO6BzK,MAAM,UAAUD,QAAQ,aAClE/B,EAAE,cAOV,kBAACqD,EAAA,EAAD,CACEC,WAAS,EACTC,KAAM2E,GACN1E,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB3D,EAAE,gBACxC,kBAAC4D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACpB8G,GAAqBvL,EAAOP,OAGhC,kBAACoF,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAQG,QAAS,WAAQiK,IAAY,IAAW/J,MAAM,UAAUD,QAAQ,YACpE/B,EAAE,OAEN,kBAAC2B,EAAA,EAAD,CAAQG,QAAS,WAAQiK,IAAY,IAAU/J,MAAM,UAAUD,QAAQ,YAAYsK,SAA2B,OAAjBrE,IACzFhI,EAAE,YCv5BVZ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuL,UAAW,CACT6B,YAAa,MACbC,aAAc,MACdC,OAAQ,SAEVC,QAASvN,EAAMwN,OAAOD,QACtBE,OAAQ,CACNjJ,MArBgB,KAuBlBkJ,YAAa,CACXlJ,MAxBgB,KA0BlBvE,KAAM,CACJ0N,SAAU,GAEZC,WAAY,CACVC,YAAa7N,EAAMK,QAAQ,IAE7ByN,MAAO,CACLH,SAAU,GAEZhJ,KAAM,CACJH,MAAO,KAETuJ,SAAU,CACRvJ,MAAO,WA2OIwJ,GAvOF,SAACxN,GAAW,IAAD,EACE0C,mBAAS,GADX,mBACf8C,EADe,KACTC,EADS,OAEE/C,mBAAS,IAFX,mBAEfyB,EAFe,KAETsJ,EAFS,OAGkB/K,mBAAS,GAH3B,mBAGftC,EAHe,KAGDC,EAHC,OAIcqC,mBAAS,GAJvB,mBAIfpC,EAJe,KAIHC,EAJG,OAKsBmC,oBAAS,GAL/B,mBAKflC,EALe,KAKCC,EALD,OAMciC,oBAAS,GANvB,mBAMfhC,EANe,KAMHC,EANG,OAOgB+B,oBAAS,GAPzB,mBAOf9B,EAPe,KAOFC,EAPE,OASkB6B,oBAAS,GAT3B,oBASfgL,GATe,MASDC,GATC,SAUFxN,cAAZD,GAVc,GAUdA,EAAG0N,GAVW,GAUXA,KACL3N,GAAUX,KAQVuO,GAAe,SAAChL,GAAD,OAAY,SAAAiL,IACZ,YAAfA,EAAMC,MAAqC,QAAdD,EAAMjP,KAA+B,UAAdiP,EAAMjP,MAG9D8O,GAAgB9K,KAYZmL,GAAiB,WACrB,OAAOC,KAAKC,MAAMD,KAAKE,SAAW/N,IAoGpC,OACE,yBAAK0B,MAAO,CAAEgL,OAAQ,UACpB,kBAACsB,EAAA,EAAD,CAAWC,SAAS,KAAKpN,UAAWhB,GAAQ8K,WAC1C,kBAAC1H,EAAA,EAAD,CAAYrC,UAAU,OACpB,kBAACsN,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQzN,UAAWhB,GAAQmN,WAAYlL,MAAM,UAAUyM,aAAW,OAAO3M,QAAS6L,IAAa,IAC9G,kBAAC,IAAD,OAEF,kBAACxK,EAAA,EAAD,CAAYpB,QAAQ,KAAKhB,UAAWhB,GAAQqN,OACxCpN,GAAE,UAEN,kBAAC0O,EAAA,EAAD,CACE1M,MAAM,UACN2M,QAAM,EAENvN,SAAU,SAACC,GAAD,OA3IFF,EA2IsBE,EAAEC,OAAOH,WA1InDuM,GAAKkB,eAAezN,GADD,IAACA,GA4IR0N,WAAY,CACVC,KAAM,MACNnL,GAAI,sBAGN,4BAAQxC,MAAM,SAAd,4BACA,4BAAQA,MAAM,SAAd,cAIN,kBAAC4N,EAAA,EAAD,CACEC,OAAO,OACPzL,KAAMiK,GACNyB,QAAStB,IAAa,GACtB5M,UAAWhB,GAAQgN,OACnBhN,QAAS,CACPmP,MAAOnP,GAAQiN,cAGjB,yBAAKjM,UAAWhB,GAAQ8M,UACxB,kBAACsC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAAC3Q,IAAKqB,GAAE,WAAY8B,QArJ1B,WACpByK,OAAOC,SAASC,KAAO,MAqJX,kBAAC8C,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAASzP,GAAE,gBAYnB,IAATsF,GACC,kBAAC,EAAD,CACEpF,aAAcA,EACdC,gBAAiBA,EACjBC,WAAYA,EACZC,cAAeA,EACfC,eAAgBA,EAChBC,kBAAmBA,EACnBC,WAAYA,EACZC,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChBC,YAlKM,WAIlB,IAHA,IAAMqD,EAjFU,SAACyL,EAAKC,GAGxB,IAFA,IAAIC,EAAO,CAACD,GACRE,EAAO,GACJH,EAAM,GACC,EAANA,IAASG,EAAOA,EAAKC,OAAOF,IAChCA,EAAOA,EAAKE,OAAOF,GACnBF,KAAS,EAEb,OAAOG,EAyEQE,CAAY7P,EAAc,MAG9B8P,EAAI,EAAIA,EAAI5P,EAAa4P,GAAK,EAAG,CAG7B,IAFX,IAAI5M,EAAQ,KAGVA,EAAQ0K,KACW,OAAhB7J,EAAKb,KAOVa,EAAKb,GAAS,CACZA,MAAOA,EAAQ,EACfjB,KAAMzD,GAKV,GAAI4B,EAAgB,CAGP,IAFX,IAAI8C,EAAQ,KAGVA,EAAQ0K,KACW,OAAhB7J,EAAKb,KAOVa,EAAKb,GAAS,CACZA,MAAOA,EAAQ,EACfjB,KAAMpD,GAKV,GAAIyB,EAAY,CAGH,IAFX,IAAI4C,EAAQ,KAGVA,EAAQ0K,KACW,OAAhB7J,EAAKb,KAOVa,EAAKb,GAAS,CACZA,MAAOA,EAAQ,EACfjB,KAAMlD,GAKV,GAAIyB,EAAa,CAGJ,IAFX,IAAI0C,EAAQ,KAGVA,EAAQ0K,KACW,OAAhB7J,EAAKb,KAOVa,EAAKb,GAAS,CACZA,MAAOA,EAAQ,EACfjB,KAAMjD,GAKV+E,EAAKqG,QAAQ,SAAC/H,EAAKa,GACL,OAARb,IACF0B,EAAKb,GAAS,CACZA,MAAOA,EAAQ,EACfjB,KAAMhD,MAKZoO,EAAQtJ,GACRsB,EAAQ,MA6EU,IAATD,GACC,kBAAC,GAAD,CACErB,KAAMA,EACNC,gBA7EU,WACtBqB,EAAQ,MAiFU,IAATD,GACC,kBAAC,GAAD,CACErB,KAAMA,EACN3D,eAAgBA,EAChBE,WAAYA,EACZE,YAAaA,EAEbN,WAAYA,Q,oCCnS5BsN,KACCuC,IAAIC,KACJC,KAAK,CAEJC,UAAW,CACT,QAAS,CACPC,aAAcC,IAEhB,QAAS,CACPD,aAAcE,KAGlBC,IAAKC,aAAaC,QAAQ,aAAe,QACzCC,YAAa,QACbC,OAAO,EAGPC,GAAI,CAAC,gBACLC,UAAW,eAIXC,cAAe,CACbC,aAAa,EACbC,gBAAiB,KAGnBC,MAAO,CACLC,MAAM,KAIKzD,GAAf,ECvBe0D,OARf,WACE,OACE,yBAAKrQ,UAAU,OACb,kBAAC,GAAD,QCAcsQ,QACW,cAA7B9E,OAAOC,SAAS8E,UAEe,UAA7B/E,OAAOC,SAAS8E,UAEhB/E,OAAOC,SAAS8E,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,mBEnInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.a8af8545.chunk.js","sourcesContent":["export const WOLF = {\n  key: 'wolf',\n  isDead: false,\n  isGood: false,\n  src: 'wolf.jpg',\n};\n\nexport const PREDICTOR = {\n  key: 'predictor',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'predictor.jpg',\n};\n\nexport const WITCH = {\n  key: 'witch',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'witch.jpg',\n};\n\nexport const HUNTER = {\n  key: 'hunter',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'hunter.jpg',\n};\n\nexport const VILLAGER = {\n  key: 'villager',\n  isDead: false,\n  isGood: true,\n  isGod: false,\n  src: 'villager.jpg',\n};\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst Setting = (props) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const {\n    playerNumber,\n    setPlayerNumber,\n    wolfNumber,\n    setWolfNumber,\n    isUsePredictor,\n    setIsUsePredictor,\n    isUseWitch,\n    setIsUseWitch,\n    isUseHunter,\n    setIsUseHunter,\n    handleStart,\n  } = props;\n\n  // console.log('wolfNumber', wolfNumber);\n\n  return (\n    <>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('player_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={playerNumber}\n            onChange={(e) => {setPlayerNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={6} control={<Radio />} label=\"6\" />\n            <FormControlLabel value={7} control={<Radio />} label=\"7\" />\n            <FormControlLabel value={8} control={<Radio />} label=\"8\" />\n            <FormControlLabel value={9} control={<Radio />} label=\"9\" />\n            <FormControlLabel value={10} control={<Radio />} label=\"10\" />\n            <FormControlLabel value={11} control={<Radio />} label=\"11\" />\n            <FormControlLabel value={12} control={<Radio />} label=\"12\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('wolf_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={wolfNumber}\n            onChange={(e) => {setWolfNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n            <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n            <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('predictor')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUsePredictor}\n            onChange={(e) => {setIsUsePredictor((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('witch')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseWitch}\n            onChange={(e) => {setIsUseWitch((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('hunter')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseHunter}\n            onChange={(e) => {setIsUseHunter((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Button style={{ marginBottom: '20px' }} onClick={handleStart} variant=\"contained\" color=\"secondary\">{t('finished')}</Button>\n    </>\n  );\n};\n\nexport default Setting;\n","/* eslint-disable jsx-a11y/alt-text */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport wolf from '../../static/images/wolf.jpg';\nimport predictor from '../../static/images/predictor.jpg';\nimport witch from '../../static/images/witch.jpg';\nimport hunter from '../../static/images/hunter.jpg';\nimport villager from '../../static/images/villager.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: '10px',\n  },\n  isChecked: {\n    color: 'red',\n  },\n  role: {\n    textAlign: 'center',\n    fontSize: '30px',\n  },\n}));\n\nconst RoleCard = (props) => {\n  const { sit } = props;\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [isWatch, setIsWatch] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (!isWatch) {\n      setIsOpen(true);\n    }\n  }\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsWatch(true);\n  }\n\n  let src = null;\n  switch(sit.role.key) {\n    case 'wolf':\n      src = wolf;\n      break;\n    case 'predictor':\n      src = predictor;\n      break;\n    case 'witch':\n      src = witch;\n      break;\n    case 'hunter':\n      src = hunter;\n      break;\n    case 'villager':\n      src = villager;\n      break;\n    default:\n      break;\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} onClick={handleClick}>\n        <Typography variant=\"h5\" component=\"h3\">\n          { t('sit_number', { index: sit.index }) }\n        </Typography>\n        <Typography component=\"p\">\n          { (isWatch) ? (\n            <span className={classes.isChecked}>\n              { t('is_checked') }\n            </span>\n          ) : t('check_role') }\n        </Typography>\n      </Paper>\n\n      <Dialog\n        fullWidth\n        open={isOpen}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('your_role')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img src={src} width=\"100%\" />\n            <div className={classes.role}>\n              { t(sit.role.key) }\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CheckRole = (props) => {\n  const { t } = useTranslation();\n  const { list, handleStartGame } = props;\n  // const classes = useStyles();\n\n  return (\n    <> \n      {\n        list.map((sit) => {\n          return (\n            <div>\n              <RoleCard\n                sit={sit}\n              />\n            </div>\n          )\n        })\n      }\n      <Button style={{ marginBottom: '20px' }} onClick={handleStartGame} variant=\"contained\" color=\"secondary\">{t('start')}</Button>\n    </>\n  );\n};\n\nexport default CheckRole;\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport Sound from 'react-sound';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n// import AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  // green,\n  pink,\n} from '@material-ui/core/colors';\n\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  // VILLAGER,\n} from '../../constants/Role';\n\nimport step1 from '../../static/audio/step_1.mp3'; // 天黑請閉眼\nimport step2 from '../../static/audio/step_2.mp3'; // 狼人現身請睜眼\nimport step3 from '../../static/audio/step_3.mp3'; // 狼人確認彼此的身份\nimport step4 from '../../static/audio/step_4.mp3'; // 狼人請殺人\nimport step5 from '../../static/audio/step_5.mp3'; // 狼人請閉眼\nimport step6 from '../../static/audio/step_6.mp3'; // 女巫請睜眼\nimport step7 from '../../static/audio/step_7.mp3'; // 這位玩家被殺死了\nimport step8 from '../../static/audio/step_8.mp3'; // 你要使用解藥嗎\nimport step9 from '../../static/audio/step_9.mp3'; // 你要使用毒藥嗎\nimport step10 from '../../static/audio/step_10.mp3'; // 你要毒誰呢\nimport step11 from '../../static/audio/step_11.mp3'; // 女巫請閉眼\nimport step12 from '../../static/audio/step_12.mp3'; // 預言家請睜眼\nimport step13 from '../../static/audio/step_13.mp3'; // 你要查驗的對象是\nimport step14 from '../../static/audio/step_14.mp3'; // 他的身份是\nimport step15 from '../../static/audio/step_15.mp3'; // 預言家請閉眼\nimport step16 from '../../static/audio/step_16.mp3'; // 獵人請睜眼\nimport step17 from '../../static/audio/step_17.mp3'; // 獵人請閉眼\nimport step18 from '../../static/audio/step_18.mp3'; // 天亮請睜眼\n\n/**\n * DAY_TYPE\n * 白天, 晚上\n * \n */\nconst DAY_TYPE = {\n  DAY: 'DAY',\n  NIGHT: 'NIGHT',\n}\n\nconst AudioSound = React.memo((props) => {\n  const {\n    url,\n    onFinishedPlaying,\n  } = props;\n\n  return (\n    <Sound\n      url={url}\n      playStatus={Sound.status.PLAYING}\n      // onLoading={this.handleSongLoading}\n      // onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={onFinishedPlaying}\n    />\n  );\n});\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#4DB6AC',\n  },\n  pinkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: pink[500],\n  },\n  dead: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#9E9E9E',\n  },\n  good: {\n    fontSize: '30px',\n  },\n  bad: {\n    fontSize: '30px',\n    color: 'red',\n  },\n  // greenAvatar: {\n  //   margin: 10,\n  //   color: '#fff',\n  //   backgroundColor: green[500],\n  // },\n});\n\nconst Game = (props) => {\n  const classes = useStyles();\n  const {\n    list,\n    isUsePredictor,\n    isUseWitch,\n    isUseHunter,\n    // playerNumber,\n    wolfNumber,\n  } = props;\n\n  const { t } = useTranslation();\n  const [step, setStep] = useState(1);\n  const [isOpenWolfKill, setIsOpenWolfKill] = useState(false);\n  const [deadNumber, setDeadNumber] = useState(null); // 狼人晚上殺人的\n  const [witchDeadNumber, setWitchDeadNumber] = useState(null); // 女巫毒的角色\n  const [isOpenWitchSave, setIsOpenWitchSave] = useState(false); // 解藥詢問 \b視窗\n  const [isOpenWitchPoison, setIsOpenWitchPoison] = useState(false); // 毒藥詢問 視窗\n  const [isUse, setIsUse] = useState(false); // 女巫一晚只能使用一種藥\n  const [isUseSave, setIsUseSave] = useState(false); // 是否已使用解藥\n  const [isUsePoison, setIsUsePoison] = useState(false); // 是否已使用毒藥\n  const [isOpenPredictor, setIsOpenPredictor] = useState(false); // 預言家選擇身份 視窗\n  const [predictorSelect, setPredictorSelect] = useState(null); // 預言家選擇查驗的身份\n  const [isOpenRole, setIsOpenRols] = useState(false); // 預言家查看身份 視窗\n  const [isOpenResult, setIsOpenResult] = useState(false); // 晚上結果\n  const [day, setDay] = useState(1); // 第幾天\n  const [dayType, setDayType] = useState(DAY_TYPE.NIGHT); // 白天晚上\n  const [messages, setMessages] = useState([]); // 遊戲訊息\n  const [isOpenVote, setIsOpenVote] = useState(false); // 投票視窗\n  const [selectVote, setSelectVote] = useState(null); // 選擇投票的人\n  const [dead, setDead] = useState([]); // 死亡的人\n  const [isOpenGameResult, setIsOpenGameResult] = useState(false); // 是否開啟遊戲結束畫面\n  const [gameResultMessage, setGameResultMessage] = useState(''); // 遊戲結束訊息\n  const [isUseHunterSkill, setIsUseHunterSkill] = useState(false); // 獵人是否已使用技能\n  const [hunterSelect, setHunterSelect] = useState(null); // 獵人選擇\n  const [isOpenHunter, setIsOpenHunter] = useState(false);\n\n  const handleSongFinishedPlaying = useCallback(() => {\n    // setStep(step + 1);\n    switch(step) {\n      case 1:\n        setStep(2);\n        break;\n      case 2:\n        setStep(3);\n        break;\n      case 3:\n        setStep(4);\n        break;\n      case 4:\n        // setStep(2);\n        setIsOpenWolfKill(true);\n        break;\n      case 5:\n        // 是否有使用女巫\n        if (isUseWitch) {\n          setStep(6);\n        } else {\n          // 是否使用預言家\n          if (isUsePredictor) {\n            setStep(12);\n          } else {\n            if (isUseHunter) {\n              // 是否使用獵人\n              setStep(16);\n            } else {\n              setStep(18);\n            }\n          }\n        }\n        break;\n      case 6:\n        setStep(7);\n        break;\n      case 7:\n        setIsOpenWitchSave(true);\n        setStep(8);\n        break;\n      case 8:\n        break;\n      case 9:\n        setIsOpenWitchPoison(true);\n        setStep(10);\n        break;\n      case 10:\n        break;\n      case 11:\n        // 是否使用預言家\n        if (isUsePredictor) {\n          setStep(12);\n        } else {\n          if (isUseHunter) {\n            // 是否使用獵人\n            setStep(16);\n          } else {\n            setStep(18);\n          }\n        }\n        // setStep(12);\n        break;\n      case 12:\n        setStep(13);\n        break;\n      case 13:\n        setIsOpenPredictor(true);\n        break;\n      case 14:\n        // setStep(15);\n        break;\n      case 15:\n        if (isUseHunter) {\n          // 是否使用獵人\n          setStep(16);\n        } else {\n          setStep(18);\n        }\n        break;\n      case 16:\n        setStep(17)\n        break;\n      case 17:\n        setStep(18);\n        break;\n      case 18:\n        setIsOpenResult(true);\n        break;\n      default:\n    }\n  }, [step]);\n\n  /**\n   * handleCloseWolfKill\n   * 狼人殺人視窗\n   * \n   */\n  const handleCloseWolfKill = () => {\n    setIsOpenWolfKill(false);\n    setStep(5);\n  }\n\n  /**\n   * handleWitchSave\n   * 女巫是否使用解藥\n   * \n   * @param {bool} isSave - true: 使用, false: 不使用\n   */\n  const handleWitchSave = (isSave) => {\n    if (isSave) {\n      // 使用解藥\n      setIsUse(true);\n      setIsUseSave(true);\n      setDeadNumber(null);\n    }\n    setIsOpenWitchSave(false);\n    setStep(9);\n  }\n\n  /**\n   * handleWitchPoison\n   * 關閉女巫是否使用毒藥\n   * \n   * @param {bool} isPoison - true: 使用, false: 不使用\n   */\n  const handleWitchPoison = (isPoison) => {\n    setIsUsePoison(isPoison);\n    if (!isPoison) {\n      setWitchDeadNumber(null);\n    }\n    setIsOpenWitchPoison(false);\n    setStep(11);\n  }\n\n  /**\n   * handlePredictor\n   * 關閉預言家詢問視窗\n   * \n   */\n  const handlePredictor = () => {\n    setIsOpenPredictor(false);\n    setIsOpenRols(true);\n    setStep(14);\n  }\n\n  /**\n   * handleCloseCheckRole\n   * 關閉預言家查驗身份結果\n   * \n   */\n  const handleCloseCheckRole = () => {\n    setIsOpenRols(false);\n    setStep(15);\n  }\n\n  /**\n   * audioSrc\n   * 取得音效檔\n   * \n   */\n  const audioSrc = useMemo(() => {\n    let returnSrc = null;\n\n    switch(step) {\n      case 1:\n        returnSrc = step1;\n        break;\n      case 2:\n        returnSrc = step2;\n        break;\n      case 3:\n        returnSrc = step3;\n        break;\n      case 4:\n        returnSrc = step4;\n        break;\n      case 5:\n        returnSrc = step5;\n        break;\n      case 6:\n        returnSrc = step6;\n        break;\n      case 7:\n        returnSrc = step7;\n        break;\n      case 8:\n        returnSrc = step8;\n        break;\n      case 9:\n        returnSrc = step9;\n        break;\n      case 10:\n        returnSrc = step10;\n        break;\n      case 11:\n        returnSrc = step11;\n        break;\n      case 12:\n        returnSrc = step12;\n        break;\n      case 13:\n        returnSrc = step13;\n        break;\n      case 14:\n        returnSrc = step14;\n        break;\n      case 15:\n        returnSrc = step15;\n        break;\n      case 16:\n        returnSrc = step16;\n        break;\n      case 17:\n        returnSrc = step17;\n        break;\n      case 18:\n        returnSrc = step18;\n        break;\n      default:\n        break;\n    }\n\n    return returnSrc;\n  }, [step]);\n\n  /**\n   * generateResultMessage\n   * 組出當晚死亡訊息\n   * \n   */\n  const generateResultMessage = () => {\n    let returnMessage = null;\n    if (deadNumber === null && witchDeadNumber === null) {\n      returnMessage = t('christmas_eve')\n    } else {\n      let tmp = [];\n      if (deadNumber !== null) {\n        tmp.push(deadNumber.index);\n      }\n      if (witchDeadNumber !== null) {\n        if (deadNumber !== null && witchDeadNumber.index !== deadNumber.index) {\n          tmp.push(witchDeadNumber.index);\n        } else {\n          tmp.push(witchDeadNumber.index);\n        }\n      }\n\n      // 重新排序\n      tmp.sort((a, b) => {\n        return a - b;\n      });\n      \n      // 每晚最多只會有兩位玩家死掉\n      tmp.forEach((number, index) => {\n        returnMessage += number;\n        if (tmp.length === 2 && index !== tmp.length - 1) {\n          returnMessage += ', ';\n        }\n      });\n    }\n\n    return returnMessage;\n  }\n\n  /**\n   * handleCloseResult\n   * 關閉晚上結果\n   * 判斷是否結束遊戲\n   * 判斷是否有獵人\n   * \n   */\n  const handleCloseResult = () => {\n    // 設定成白天\n    setDayType(DAY_TYPE.DAY);\n\n    // 關閉晚上結果\n    setIsOpenResult(false);\n    \n    // 更新遊戲訊息\n    setMessages([\n      ...messages,\n      `${t('n_night', { day })}${generateResultMessage()}`\n    ]);\n\n    const tmpArray = [];\n\n    // 狼人殺死的人\n    if (deadNumber !== null) {\n      tmpArray.push(deadNumber);\n      setDead([\n        ...dead,\n        deadNumber,\n      ]);\n    }\n\n    // 女巫毒的人\n    if (isUseWitch && witchDeadNumber !== null) {\n      tmpArray.push(witchDeadNumber);\n    }\n\n    // 更新已死亡的人\n    const tmpDead = [\n      ...dead,\n      ...tmpArray,\n    ];\n    if (tmpArray.length > 0) {\n      setDead(tmpDead);\n    }\n\n    const result = checkGameFinished(tmpDead);\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      // 檢查獵人是否死亡\n      const isHunter = checkHunter(tmpDead);\n\n      if (isHunter) {\n        setIsOpenHunter(true);\n      } else {\n        initSelect(false);\n      }\n    }\n  }\n\n  /**\n   * generateSelectPicker\n   * 組出選擇頭像 component\n   * \n   * @param {string} role - 角色\n   */\n  const generateSelectPicker = (role) => {\n    let returnComp = null;\n    let selectValue = null;\n    let selectFunc = null;\n\n    switch(role) {\n      // 狼人\n      case WOLF.key:\n        selectValue = deadNumber;\n        selectFunc = setDeadNumber;\n        break;\n      // 女巫\n      case WITCH.key:\n        selectValue = witchDeadNumber;\n        selectFunc = setWitchDeadNumber;\n        break;\n      // 預言家\n      case PREDICTOR.key:\n        selectValue = predictorSelect;\n        selectFunc = setPredictorSelect;\n        break;\n      // 獵人\n      case HUNTER.key:\n        selectValue = hunterSelect;\n        selectFunc = setHunterSelect;\n        break;\n      // 一般投票\n      default:\n        selectValue = selectVote;\n        selectFunc = setSelectVote;\n    }\n\n    returnComp = (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        {\n          <Grid container justify=\"center\" alignItems=\"center\">\n            {\n              list.map(sit => {\n                let className = classes.avatar;\n\n                if (selectValue) {\n                  if (selectValue.index === sit.index) {\n                    className = classes.pinkAvatar;\n                  };\n                }\n\n                // 判斷該玩家是否死亡\n                const idDead = dead.some(tmp => tmp.index === sit.index);\n\n                return (\n                  <>\n                    {\n                      (idDead) ? (\n                        <Avatar className={classes.dead}>\n                          { sit.index }\n                        </Avatar>\n                      ) : (\n                        <Avatar className={className} onClick={() => {selectFunc(sit)}}>\n                          { sit.index }\n                        </Avatar>\n                      )\n                    }\n                  </>\n                );\n              })\n            }\n          </Grid>\n        }\n      </Grid>\n    );\n\n    return returnComp;\n  }\n\n  /**\n   * handleVote\n   * 投票結果\n   * \n   * @param {bool} isVote - 是否有投票, false: 放棄\n   */\n  const handleVote = (isVote) => {\n    // 關閉投票視窗\n    setIsOpenVote(false);\n\n    const tmpDead = [\n      ...dead,\n      selectVote,\n    ]\n    if (isVote) {\n      setDead(tmpDead);\n\n      setMessages([\n        ...messages,\n        `${t('n_day', { day })}${selectVote.index}`,\n      ]);\n    } else {\n      setMessages([\n        ...messages,\n        `${t('n_day', { day })}${t('give_up_vote')}`,\n      ]);\n    }\n\n    const result = checkGameFinished(tmpDead);\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      // 檢查獵人是否死亡\n      const isHunter = checkHunter(tmpDead);\n\n      if (isHunter) {\n        setIsOpenHunter(true);\n      } else {\n        initSelect(true);\n      }\n    }\n  }\n\n  /**\n   * checkHunter\n   * 檢查獵人是否死亡\n   * \n   * @param {array} dead - 死掉的人\n   */\n  const checkHunter = (dead) => {\n    let isHunter = false;\n\n    // 有使用獵人並未發動技能\n    if (isUseHunter && !isUseHunterSkill) {\n      isHunter = dead.some(tmp => tmp.role.key === HUNTER.key);\n    }\n\n    return isHunter;\n  }\n\n  /**\n   * checkGameFinished\n   * 檢查遊戲是否結束\n   * \n   * @param {array} - 死亡的人\n   */\n  const checkGameFinished = (dead) => {\n    // 判斷好人是否獲勝\n    let deadWolf = 0;\n    dead.forEach((dead) => {\n      if (dead.role.key === WOLF.key) {\n        deadWolf += 1;\n      }\n    });\n\n    if (deadWolf === wolfNumber) {\n      return {\n        isFinished: true,\n        message: t('good_win'),\n      }\n    }\n\n    // 判斷壞人是否獲勝\n    let deadPerson = 0;\n    dead.forEach((dead) => {\n      if (dead.role.key !== WOLF.key) {\n        deadPerson += 1;\n      }\n    });\n\n    if (deadPerson >= wolfNumber) {\n      return {\n        isFinished: true,\n        message: t('bad_win'),\n      }\n    }\n\n    return {\n      isFinished: false,\n      message: '',\n    }\n  }\n\n  /**\n   * handleShoot\n   * 獵人射殺\n   * \n   * @param {bool} isShoot - 是否射殺\n   */\n  const handleShoot = (isShoot) => {\n    if (isShoot) {\n      const tmpDead = [\n        ...dead,\n        hunterSelect,\n      ];\n\n      setDead(tmpDead);\n      const result = checkGameFinished(tmpDead);\n\n      if (result.isFinished) {\n        setIsOpenGameResult(true);\n        setGameResultMessage(result.message);\n      } else {\n        console.log('TODO');\n      }\n    } else {\n      console.log('TODO');\n    }\n  }\n\n  /**\n   * initSelect\n   * 初始化選擇\n   * \n   * @param {bool} isNextDay - 是否進入下一天\n   */\n  const initSelect = (isNextDay) => {\n    // 清空全部選擇\n    setDeadNumber(null); // 狼人\n    setWitchDeadNumber(null); // 女巫毒殺\n    setPredictorSelect(null); // 預言家選擇\n    setSelectVote(null); // 投票選擇\n    setIsUse(false);\n    setHunterSelect(null); // 獵人選擇\n\n    if (isNextDay) {\n      // 進入下一天\n      setDay(day + 1);\n\n      // 進入晚上\n      setDayType(DAY_TYPE.NIGHT);\n\n      // 進入 Step 1\n      setStep(1);\n    }\n  }\n\n  /**\n   * handleGameOver\n   * 遊戲結束\n   * \n   */\n  const handleGameOver = () => {\n    window.location.href = '/';\n  }\n\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        { t('gaming') }\n      </div>\n\n      <div style={{ paddingTop: '20px' }}>\n        { t('dead_message') }\n      </div>\n\n      <div>\n        <ul>\n          {\n            messages.map(message => <li>{ message }</li>)\n          }\n        </ul>\n      </div>\n\n      <div>\n          {\n            (dayType === DAY_TYPE.DAY) && (\n              <Button onClick={() => (setIsOpenVote(true))} variant=\"contained\" color=\"secondary\">{ t('start_vote') }</Button>\n            )\n          }\n      </div>\n\n      <AudioSound\n        url={audioSrc}\n        onFinishedPlaying={handleSongFinishedPlaying}\n      />\n\n      { /* Wolf Kill Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWolfKill}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('wolf_kill')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(WOLF.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseWolfKill} color=\"primary\" disabled={deadNumber === null} variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Wolf Kill End */ }\n\n      { /* Witch Save Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWitchSave}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_save')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isUseSave) ? (\n                t('save_used')\n              ) : (\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  { t('dead_person', { index: (deadNumber) ? deadNumber.index : null }) }\n                </Grid>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchSave(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n          </Button>\n          <Button onClick={() => {handleWitchSave(true)}} color=\"primary\" variant=\"contained\" disabled={isUseSave}>\n            { t('yes') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Witch Save End */ }\n\n      {/* Witch Poison Start */}\n      <Dialog\n        fullWidth\n        open={isOpenWitchPoison}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_poison')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { \n              (isUsePoison) ? (\n                t('poison_used')\n              ) : (\n                generateSelectPicker(WITCH.key)\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchPoison(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n          </Button>\n          <Button disabled={(isUse || witchDeadNumber === null || isUsePoison)} onClick={() => {handleWitchPoison(true)}} color=\"primary\" variant=\"contained\">\n            { t('yes') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Witch Poison End */}\n\n      {/* Predictor Start */}\n      <Dialog\n        fullWidth\n        open={isOpenPredictor}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('predictor_select')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(PREDICTOR.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={predictorSelect === null} onClick={() => {handlePredictor()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Predictor End */}\n\n      {/* Check Role Start */}\n      <Dialog\n        fullWidth\n        open={isOpenRole}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('role_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (predictorSelect && predictorSelect.role.key === 'wolf') ? (\n                <span className={classes.bad}>{t('is_wolf')}</span>\n              ) : (\n                <span className={classes.good}>{t('not_wolf')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseCheckRole()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Check Role End */}\n\n      {/* Result Start*/}\n      <Dialog\n        fullWidth\n        open={isOpenResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('yesterday_dead')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              generateResultMessage()\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseResult} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Result End*/}\n\n      { /* Vote Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenVote}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('start_vote')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker('') }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleVote(false); }} color=\"primary\" variant=\"outlined\">\n            { t('give_up') }\n          </Button>\n          <Button onClick={() => { handleVote(true); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Vote End */ }\n\n      { /* Game Result Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenGameResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('game_over')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { gameResultMessage }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleGameOver(); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Game Result End */ }\n\n      { /* Hunter Select Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenHunter}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('huner_shoot')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          { generateSelectPicker(HUNTER.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleShoot(false); }} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n          </Button>\n          <Button onClick={() => { handleShoot(true); }} color=\"primary\" variant=\"contained\" disabled={hunterSelect !== null}>\n            { t('yes') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Hunter Select End */ }\n    </>\n  );\n};\n\nexport default Game;\n","/* eslint-disable no-extra-label */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Select from '@material-ui/core/Select';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  VILLAGER,\n} from '../../constants/Role';\nimport Setting from '../Setting/Setting';\nimport CheckRole from '../CheckRole/CheckRole';\nimport Game from '../Game/Game';\n\nconst drawerWidth = 240;\n\nconst createArray = (len, itm) => {\n  let arr1 = [itm],\n      arr2 = [];\n  while (len > 0) {\n      if (len & 1) arr2 = arr2.concat(arr1);\n      arr1 = arr1.concat(arr1);\n      len >>>= 1;\n  }\n  return arr2;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    height: '100vh',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Home = (props) => {\n  const [step, setStep] = useState(0);\n  const [list, setList] = useState([]);\n  const [playerNumber, setPlayerNumber] = useState(6);\n  const [wolfNumber, setWolfNumber] = useState(2);\n  const [isUsePredictor, setIsUsePredictor] = useState(false);\n  const [isUseWitch, setIsUseWitch] = useState(true);\n  const [isUseHunter, setIsUseHunter] = useState(false);\n\n  const [isOpenDrawer, setIsOpenDrawer] = useState(false);\n  const { t, i18n } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    i18n.changeLanguage(value);\n    // console.log('value', value);\n    // setLanguage(value);\n  }\n\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpenDrawer(isOpen);\n  };\n\n  const handleRestart = () => {\n    window.location.href = '/';\n    // setIsOpenDrawer(false);\n  }\n\n  // const handleReSetting = () => {\n  //   setIsOpenDrawer(false);\n  // }\n\n  const getRaddomIndex = () => {\n    return Math.floor(Math.random() * playerNumber);\n  }\n\n  const handleStart = () => {\n    const list = createArray(playerNumber, null);\n\n    // 狼人位置\n    for (let i = 0 ; i < wolfNumber ; i += 1) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WOLF,\n      };\n    }\n\n    // 預言家位置\n    if (isUsePredictor) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: PREDICTOR,\n      };\n    }\n\n    // 女巫位置\n    if (isUseWitch) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WITCH,\n      };\n    }\n\n    // 獵人位置\n    if (isUseHunter) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: HUNTER,\n      };\n    }\n\n    // 村民位置\n    list.forEach((sit, index) => {\n      if (sit === null) {\n        list[index] = {\n          index: index + 1,\n          role: VILLAGER,\n        };\n      }\n    })\n\n    setList(list);\n    setStep(1);\n  }\n\n  const handleStartGame = () => {\n    setStep(2);\n  }\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <Typography component=\"div\" >\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                { t('title') }\n              </Typography>\n              <Select\n                color=\"inherit\"\n                native\n                // value={language}\n                onChange={(e) => handleChange(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"zh-TW\">繁體中文</option>\n                <option value=\"en-US\">English</option>\n              </Select>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            anchor=\"left\"\n            open={isOpenDrawer}\n            onClose={toggleDrawer(false)}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n              <ListItem button key={t('restart')} onClick={handleRestart}>\n                <ListItemIcon><CachedIcon /></ListItemIcon>\n                <ListItemText primary={t('restart')} />\n              </ListItem>\n              {/*}\n              <ListItem button key={t('resetting')} onClick={handleReSetting}>\n                <ListItemIcon><AutorenewIcon /></ListItemIcon>\n                <ListItemText primary={t('resetting')} />\n              </ListItem>\n              {*/}\n            </List>\n          </Drawer>\n            \n          {\n            (step === 0) && (\n              <Setting\n                playerNumber={playerNumber}\n                setPlayerNumber={setPlayerNumber}\n                wolfNumber={wolfNumber}\n                setWolfNumber={setWolfNumber}\n                isUsePredictor={isUsePredictor}\n                setIsUsePredictor={setIsUsePredictor}\n                isUseWitch={isUseWitch}\n                setIsUseWitch={setIsUseWitch}\n                isUseHunter={isUseHunter}\n                setIsUseHunter={setIsUseHunter}\n                handleStart={handleStart}\n              />\n            )\n          }\n          {\n            (step === 1) && (\n              <CheckRole\n                list={list}\n                handleStartGame={handleStartGame}\n              />\n            )\n          }\n          {\n            (step === 2) && (\n              <Game\n                list={list}\n                isUsePredictor={isUsePredictor}\n                isUseWitch={isUseWitch}\n                isUseHunter={isUseHunter}\n                // playerNumber={playerNumber}\n                wolfNumber={wolfNumber}\n              />\n            )\n          }\n        </Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\nimport enUS from './languages/en-US.json';\nimport zhTW from './languages/zh-TW.json';\n\n// console.log('zhTW', zhTW);\n\ni18n\n.use(initReactI18next)\n.init({\n  // we init with resources\n  resources: {\n    'en-US': {\n      translations: enUS,\n    },\n    'zh-TW': {\n      translations: zhTW,\n    },\n  },\n  lng: localStorage.getItem('language') || 'zh-TW',\n  fallbackLng: 'zh-TW',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  // keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ',',\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport Home from './components/Home/Home';\n// import logo from './logo.svg';\nimport './App.css';\n// import './styles/styles.css';\n\nimport './locales/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wolf.9caa04d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/predictor.473d5f28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witch.4dc6d5d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5cf4e8f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/villager.fa735092.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step_1.6751b7d1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_2.264c120e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_3.3f6f4aa3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_4.a75253e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_5.2e36d3c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_6.dc038730.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_7.84ea5c11.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_8.4898a6d4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_9.83e9ca3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_10.b4e6486e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_11.9f00d56d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_12.b3d32d1f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_13.488a98a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_14.02591e0a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_15.5cf29b44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_16.99894c39.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_17.e7d96e3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_18.a7d9ef5f.mp3\";"],"sourceRoot":""}