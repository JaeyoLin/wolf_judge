{"version":3,"sources":["static/audio/step_22.mp3","constants/Role.js","components/Setting/Setting.js","components/CheckRole/CheckRole.js","components/Game/Game.js","components/Home/Home.js","locales/index.js","App.js","serviceWorker.js","index.js","static/images/wolf.jpg","static/images/predictor.jpg","static/images/witch.jpg","static/images/hunter.jpg","static/images/knight.jpg","static/images/idiet.jpg","static/images/villager.jpg","static/audio/step_1.mp3","static/audio/step_2.mp3","static/audio/step_3.mp3","static/audio/step_4.mp3","static/audio/step_5.mp3","static/audio/step_6.mp3","static/audio/step_7.mp3","static/audio/step_8.mp3","static/audio/step_9.mp3","static/audio/step_10.mp3","static/audio/step_11.mp3","static/audio/step_12.mp3","static/audio/step_13.mp3","static/audio/step_14.mp3","static/audio/step_15.mp3","static/audio/step_16.mp3","static/audio/step_17.mp3","static/audio/step_18.mp3","static/audio/step_19.mp3","static/audio/step_20.mp3","static/audio/step_21.mp3"],"names":["module","exports","WOLF","key","isGood","isGod","src","PREDICTOR","WITCH","HUNTER","KNIGHT","IDIET","VILLAGER","useStyles","makeStyles","theme","root","display","group","margin","spacing","formControl","minWidth","selectEmpty","marginTop","Setting","props","classes","t","useTranslation","playerNumber","setPlayerNumber","wolfNumber","setWolfNumber","isUsePredictor","setIsUsePredictor","isUseWitch","setIsUseWitch","isUseHunter","setIsUseHunter","handleStart","isKillKind","setIsKillKind","isUseKnight","setIsUseKnight","isUseIdiet","setIsUseIdiet","FormControl","className","InputLabel","htmlFor","NativeSelect","native","value","onChange","e","target","Divider","Button","style","marginBottom","onClick","variant","color","padding","isChecked","role","textAlign","fontSize","RoleCard","sit","useState","isWatch","setIsWatch","isOpen","setIsOpen","wolf","predictor","witch","hunter","knight","idiet","villager","Paper","Typography","component","index","Dialog","fullWidth","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","width","DialogActions","CheckRole","list","handleStartGame","map","DAY_TYPE","AudioSound","React","memo","url","onFinishedPlaying","playStatus","Sound","status","PLAYING","avatar","backgroundColor","height","pinkAvatar","pink","dead","number","good","bad","Game","console","log","forEach","tmp","step","setStep","isOpenWolfKill","setIsOpenWolfKill","deadNumber","setDeadNumber","witchDeadNumber","setWitchDeadNumber","isOpenWitchSave","setIsOpenWitchSave","isOpenWitchPoison","setIsOpenWitchPoison","isUse","setIsUse","isUseSave","setIsUseSave","isUsePoison","setIsUsePoison","isOpenPredictor","setIsOpenPredictor","predictorSelect","setPredictorSelect","isOpenRole","setIsOpenRols","isOpenResult","setIsOpenResult","day","setDay","dayType","setDayType","messages","setMessages","isOpenVote","setIsOpenVote","selectVote","setSelectVote","setDead","isOpenGameResult","setIsOpenGameResult","gameResultMessage","setGameResultMessage","isUseHunterSkill","setIsUseHunterSkill","hunterSelect","setHunterSelect","isOpenHunter","setIsOpenHunter","isKillByWitch","setIsKillByWitch","isOpenHunterShoot","setIsOpenHunterShoot","isPredictorDead","setIsPredictorDead","isWitchDead","setIsWitchDead","isHunterDead","setIsHunterDead","isOpenLastWords","setIsOpenLastWords","setIsKnightDead","setIsIdietDead","isUseKnightSkill","setIsUseKnightSkill","isOpenKnight","setIsOpenKnight","knightSelect","setKnightSelect","isOpenKnightResult","setIsOpenKnightResult","isOpenIdietResult","setIsOpenIdietResult","isUseIdietSkill","setIsUseIdietSkill","isShowMessage","setIsShowMessage","handleSongFinishedPlaying","useCallback","setTimeout","handleWitchSave","isSave","handleWitchPoison","isPoison","audioSrc","useMemo","returnSrc","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","step11","step12","step13","step14","step15","step16","step17","step18","step19","step20","step21","step22","generateResultMessage","returnMessage","push","sort","a","b","length","generateSelectPicker","selectValue","selectFunc","Grid","container","justify","alignItems","idDead","some","Avatar","handleVote","isVote","tmpDead","result","checkGameFinished","isFinished","message","checkHunter","isHunter","deadWolf","gods","villagers","deadGods","deadVillagers","handleShoot","isShoot","initSelect","isNextDay","paddingTop","marginLeft","disabled","FormControlLabel","control","Switch","checked","label","tmpArray","wolfsInfo","wolfs","filter","getWolfs","find","villagesInfo","villages","getVillages","window","location","reload","handleCloseFight","paddingLeft","paddingRight","toolbar","mixins","drawer","drawerPaper","flexGrow","menuButton","marginRight","title","fullList","Home","setList","isOpenDrawer","setIsOpenDrawer","i18n","toggleDrawer","event","type","getRaddomIndex","Math","floor","random","Container","maxWidth","AppBar","position","Toolbar","IconButton","edge","aria-label","Select","changeLanguage","inputProps","name","Drawer","anchor","onClose","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","len","itm","arr1","arr2","concat","createArray","i","use","initReactI18next","init","resources","translations","enUS","zhTW","lng","localStorage","getItem","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a4e8698f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/step_22.a7d9ef5f.mp3\";","export const WOLF = {\n  key: 'wolf',\n  isGood: false,\n  isGod: false,\n  src: 'wolf.jpg',\n};\n\nexport const PREDICTOR = {\n  key: 'predictor',\n  isGood: true,\n  isGod: true,\n  src: 'predictor.jpg',\n};\n\nexport const WITCH = {\n  key: 'witch',\n  isGood: true,\n  isGod: true,\n  src: 'witch.jpg',\n};\n\nexport const HUNTER = {\n  key: 'hunter',\n  isGood: true,\n  isGod: true,\n  src: 'hunter.jpg',\n};\n\nexport const KNIGHT = {\n  key: 'knight',\n  isGood: true,\n  isGod: true,\n  src: 'knight.jpg',\n};\n\nexport const IDIET = {\n  key: 'idiet',\n  isGood: true,\n  isGod: true,\n  src: 'idiet.jpg',\n};\n\nexport const VILLAGER = {\n  key: 'villager',\n  isGood: true,\n  isGod: false,\n  src: 'villager.jpg',\n};\n","import React, {\n  Fragment\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Setting = (props) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const {\n    playerNumber,\n    setPlayerNumber,\n    wolfNumber,\n    setWolfNumber,\n    isUsePredictor,\n    setIsUsePredictor,\n    isUseWitch,\n    setIsUseWitch,\n    isUseHunter,\n    setIsUseHunter,\n    handleStart,\n    isKillKind,\n    setIsKillKind,\n    isUseKnight,\n    setIsUseKnight,\n    isUseIdiet,\n    setIsUseIdiet,\n  } = props;\n\n  return (\n    <Fragment>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('player_number')}</InputLabel>\n          <NativeSelect\n            native\n            value={playerNumber}\n            onChange={(e) => {setPlayerNumber(e.target.value * 1)}}\n          >\n            <option value={6}>6</option>\n            <option value={7}>7</option>\n            <option value={8}>8</option>\n            <option value={9}>9</option>\n            <option value={10}>10</option>\n            <option value={11}>11</option>\n            <option value={12}>12</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('wolf_number')}</InputLabel>\n          <NativeSelect\n            native\n            value={wolfNumber}\n            onChange={(e) => {setWolfNumber(e.target.value * 1)}}\n          >\n            <option value={1}>1</option>\n            <option value={2}>2</option>\n            <option value={3}>3</option>\n            <option value={4}>4</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('is_kill_kind')}</InputLabel>\n          <NativeSelect\n            native\n            value={isKillKind}\n            onChange={(e) => {setIsKillKind(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('predictor')}</InputLabel>\n          <NativeSelect\n            native\n            value={isUsePredictor}\n            onChange={(e) => {setIsUsePredictor(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('witch')}</InputLabel>\n          <NativeSelect\n            native\n            value={isUseWitch}\n            onChange={(e) => {setIsUseWitch(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('hunter')}</InputLabel>\n          <NativeSelect\n            native\n            value={isUseHunter}\n            onChange={(e) => {setIsUseHunter(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('knight')}</InputLabel>\n          <NativeSelect\n            native\n            value={isUseKnight}\n            onChange={(e) => {setIsUseKnight(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">{t('idiet')}</InputLabel>\n          <NativeSelect\n            native\n            value={isUseIdiet}\n            onChange={(e) => {setIsUseIdiet(e.target.value === 'true')}}\n          >\n            <option value={true}>{t('yes')}</option>\n            <option value={false}>{t('no')}</option>\n          </NativeSelect>\n        </FormControl>\n      </div>\n\n      <Divider />\n      <Button style={{ marginTop: '20px', marginBottom: '20px' }} onClick={handleStart} variant=\"contained\" color=\"secondary\">{t('finished')}</Button>\n    </Fragment>\n  );\n};\n\nexport default Setting;\n","/* eslint-disable jsx-a11y/alt-text */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport wolf from '../../static/images/wolf.jpg';\nimport predictor from '../../static/images/predictor.jpg';\nimport witch from '../../static/images/witch.jpg';\nimport hunter from '../../static/images/hunter.jpg';\nimport knight from '../../static/images/knight.jpg';\nimport idiet from '../../static/images/idiet.jpg';\nimport villager from '../../static/images/villager.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: '10px',\n  },\n  isChecked: {\n    color: 'red',\n  },\n  role: {\n    textAlign: 'center',\n    fontSize: '30px',\n  },\n}));\n\nconst RoleCard = (props) => {\n  const { sit } = props;\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [isWatch, setIsWatch] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (!isWatch) {\n      setIsOpen(true);\n    }\n  }\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsWatch(true);\n  }\n\n  let src = null;\n  switch(sit.role.key) {\n    case 'wolf':\n      src = wolf;\n      break;\n    case 'predictor':\n      src = predictor;\n      break;\n    case 'witch':\n      src = witch;\n      break;\n    case 'hunter':\n      src = hunter;\n      break;\n    case 'knight':\n      src = knight;\n      break;\n    case 'idiet':\n      src = idiet;\n      break;\n    case 'villager':\n      src = villager;\n      break;\n    default:\n      break;\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} onClick={handleClick}>\n        <Typography variant=\"h5\" component=\"h3\">\n          { \n            t('sit_number', { index: sit.index }) \n            // sit.role.key\n          }\n        </Typography>\n        <Typography component=\"p\">\n          { (isWatch) ? (\n            <span className={classes.isChecked}>\n              { t('is_checked') }\n            </span>\n          ) : t('check_role') }\n        </Typography>\n      </Paper>\n\n      <Dialog\n        fullWidth\n        open={isOpen}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('your_role')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <div className={classes.role}>\n              { t(sit.role.key) }\n            </div>\n            <img src={src} width=\"100%\" />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CheckRole = (props) => {\n  const { t } = useTranslation();\n  const { list, handleStartGame } = props;\n  // const classes = useStyles();\n\n  return (\n    <> \n      {\n        list.map((sit) => {\n          return (\n            <div>\n              <RoleCard\n                sit={sit}\n              />\n            </div>\n          )\n        })\n      }\n      <Divider style={{ marginTop: '20px' }} />\n      <Button style={{ marginTop: '20px', marginBottom: '20px' }} onClick={handleStartGame} variant=\"contained\" color=\"secondary\">{t('start')}</Button>\n    </>\n  );\n};\n\nexport default CheckRole;\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport Sound from 'react-sound';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  pink,\n} from '@material-ui/core/colors';\nimport Divider from '@material-ui/core/Divider';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  KNIGHT,\n  IDIET,\n  VILLAGER,\n} from '../../constants/Role';\n\nimport step1 from '../../static/audio/step_1.mp3'; // 天黑請閉眼\nimport step2 from '../../static/audio/step_2.mp3'; // 狼人現身請睜眼\nimport step3 from '../../static/audio/step_3.mp3'; // 狼人確認彼此的身份\nimport step4 from '../../static/audio/step_4.mp3'; // 狼人請殺人\nimport step5 from '../../static/audio/step_5.mp3'; // 狼人請閉眼\nimport step6 from '../../static/audio/step_6.mp3'; // 女巫請睜眼\nimport step7 from '../../static/audio/step_7.mp3'; // 這位玩家被殺死了\nimport step8 from '../../static/audio/step_8.mp3'; // 你要使用解藥嗎\nimport step9 from '../../static/audio/step_9.mp3'; // 你要使用毒藥嗎\nimport step10 from '../../static/audio/step_10.mp3'; // 你要毒誰呢\nimport step11 from '../../static/audio/step_11.mp3'; // 女巫請閉眼\nimport step12 from '../../static/audio/step_12.mp3'; // 預言家請睜眼\nimport step13 from '../../static/audio/step_13.mp3'; // 你要查驗的對象是\nimport step14 from '../../static/audio/step_14.mp3'; // 他的身份是\nimport step15 from '../../static/audio/step_15.mp3'; // 預言家請閉眼\nimport step16 from '../../static/audio/step_16.mp3'; // 獵人請睜眼\nimport step17 from '../../static/audio/step_17.mp3'; // 獵人請閉眼\nimport step18 from '../../static/audio/step_18.mp3'; // 騎士請睜眼\nimport step19 from '../../static/audio/step_19.mp3'; // 騎士請閉眼\nimport step20 from '../../static/audio/step_20.mp3'; // 白癡請睜眼\nimport step21 from '../../static/audio/step_21.mp3'; // 白癡請閉眼\nimport step22 from '../../static/audio/step_22.mp3'; // 天亮請睜眼\n\n/**\n * IS_DEBUG\n * 是否開啟 console.log 資訊\n * \n */\nconst IS_DEBUG = true;\n\n/**\n * DAY_TYPE\n * 白天, 晚上\n * \n */\nconst DAY_TYPE = {\n  DAY: 'DAY',\n  NIGHT: 'NIGHT',\n}\n\nconst AudioSound = React.memo((props) => {\n  const {\n    url,\n    onFinishedPlaying,\n  } = props;\n\n  return (\n    <Sound\n      url={url}\n      playStatus={Sound.status.PLAYING}\n      // onLoading={this.handleSongLoading}\n      // onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={onFinishedPlaying}\n    />\n  );\n});\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#4DB6AC',\n    width: '50px',\n    height: '50px',\n  },\n  pinkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: pink[500],\n    width: '50px',\n    height: '50px',\n  },\n  dead: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#9E9E9E',\n    width: '50px',\n    height: '50px',\n  },\n  number: {\n    fontSize: '30px',\n  },\n  good: {\n    fontSize: '30px',\n  },\n  bad: {\n    fontSize: '30px',\n    color: 'red',\n  },\n  // greenAvatar: {\n  //   margin: 10,\n  //   color: '#fff',\n  //   backgroundColor: green[500],\n  // },\n});\n\nconst Game = (props) => {\n  const classes = useStyles();\n  const {\n    list,\n    isUsePredictor,\n    isUseWitch,\n    isUseHunter,\n    playerNumber,\n    wolfNumber,\n    isKillKind,\n    isUseKnight,\n    isUseIdiet,\n  } = props;\n\n  if (IS_DEBUG) {\n    // console.log('list', list);\n    console.log('===== Role List =====');\n    list.forEach(tmp => { console.log(`${tmp.index} - ${tmp.role.key}`); });\n    console.log('=====================');\n  }\n\n  const { t } = useTranslation();\n  const [step, setStep] = useState(1);\n  const [isOpenWolfKill, setIsOpenWolfKill] = useState(false);\n  const [deadNumber, setDeadNumber] = useState(null); // 狼人晚上殺人的\n  const [witchDeadNumber, setWitchDeadNumber] = useState(null); // 女巫毒的角色\n  const [isOpenWitchSave, setIsOpenWitchSave] = useState(false); // 解藥詢問 \b視窗\n  const [isOpenWitchPoison, setIsOpenWitchPoison] = useState(false); // 毒藥詢問 視窗\n  const [isUse, setIsUse] = useState(false); // 女巫一晚只能使用一種藥\n  const [isUseSave, setIsUseSave] = useState(false); // 是否已使用解藥\n  const [isUsePoison, setIsUsePoison] = useState(false); // 是否已使用毒藥\n  const [isOpenPredictor, setIsOpenPredictor] = useState(false); // 預言家選擇身份 視窗\n  const [predictorSelect, setPredictorSelect] = useState(null); // 預言家選擇查驗的身份\n  const [isOpenRole, setIsOpenRols] = useState(false); // 預言家查看身份 視窗\n  const [isOpenResult, setIsOpenResult] = useState(false); // 晚上結果\n  const [day, setDay] = useState(1); // 第幾天\n  const [dayType, setDayType] = useState(DAY_TYPE.NIGHT); // 白天晚上\n  const [messages, setMessages] = useState([]); // 遊戲訊息\n  const [isOpenVote, setIsOpenVote] = useState(false); // 投票視窗\n  const [selectVote, setSelectVote] = useState(null); // 選擇投票的人\n  const [dead, setDead] = useState([]); // 死亡的人\n  const [isOpenGameResult, setIsOpenGameResult] = useState(false); // 是否開啟遊戲結束畫面\n  const [gameResultMessage, setGameResultMessage] = useState(''); // 遊戲結束訊息\n  const [isUseHunterSkill, setIsUseHunterSkill] = useState(false); // 獵人是否已使用技能\n  const [hunterSelect, setHunterSelect] = useState(null); // 獵人選擇\n  const [isOpenHunter, setIsOpenHunter] = useState(false); // 是否開啟獵人視窗\n  const [isKillByWitch, setIsKillByWitch] = useState(false); // 獵人是否被毒殺\n  const [isOpenHunterShoot, setIsOpenHunterShoot] = useState(false); // 是否開啟獵人槍殺訊息\n  const [isPredictorDead, setIsPredictorDead] = useState(false); // 預言家是否死亡\n  const [isWitchDead, setIsWitchDead] = useState(false); // 女巫是否死亡\n  const [isHunterDead, setIsHunterDead] = useState(false); // 獵人是否死亡\n  const [isOpenLastWords, setIsOpenLastWords] = useState(false); // 遺言視窗\n  const [isKnightDead, setIsKnightDead] = useState(false); // 騎士是否死亡\n  const [isIdietDead, setIsIdietDead] = useState(false); // 白癡是否死亡\n\n  const [isUseKnightSkill, setIsUseKnightSkill] = useState(false); // 騎士是否已實用技能\n  const [isOpenKnight, setIsOpenKnight] = useState(false); // 開啟騎士選擇對象視窗\n  const [knightSelect, setKnightSelect] = useState(null); // 騎士選擇\n  const [isOpenKnightResult, setIsOpenKnightResult] = useState(false); // 騎士驗人結果\n  const [isOpenIdietResult, setIsOpenIdietResult] = useState(false); // 放逐白癡結果\n  const [isUseIdietSkill, setIsUseIdietSkill] = useState(false); // 白癡是否使用技能\n\n  const [isShowMessage, setIsShowMessage] = useState(false); // 是否顯示夜晚訊息\n\n  // console.log('isKillByWitch', isKillByWitch);\n  // console.log('isUsePoison', isUsePoison);\n\n  const handleSongFinishedPlaying = useCallback(() => {\n    // setStep(step + 1);\n    switch(step) {\n      case 1:\n        setStep(2);\n        break;\n      case 2:\n        setStep(3);\n        break;\n      case 3:\n        setStep(4);\n        break;\n      case 4:\n        // setStep(2);\n        setIsOpenWolfKill(true);\n        break;\n      case 5:\n        // 是否有使用女巫\n        if (isUseWitch) {\n          setStep(6);\n        } else {\n          // 是否使用預言家\n          if (isUsePredictor) {\n            setStep(12);\n          } else {\n            if (isUseHunter) {\n              // 是否使用獵人\n              setStep(16);\n            } else {\n              if (isUseKnight) {\n                setStep(18);\n              } else {\n                if (isUseIdiet) {\n                  setStep(20);\n                } else {\n                  setStep(22);\n                }\n              }\n            }\n          }\n        }\n        break;\n      case 6:\n        setStep(7);\n        break;\n      case 7:\n        if (!isWitchDead) {\n          setIsOpenWitchSave(true);\n        }\n        setStep(8);\n        break;\n      case 8:\n        if (isWitchDead) {\n          setTimeout(() => {\n            setStep(9)\n          }, 2000);\n        }\n        break;\n      case 9:\n        if (!isWitchDead) {\n          setIsOpenWitchPoison(true);\n        }\n        setStep(10);\n        break;\n      case 10:\n        if (isWitchDead) {\n          setTimeout(() => {\n            setStep(11)\n          }, 2000);\n        }\n        break;\n      case 11:\n        // 是否使用預言家\n        if (isUsePredictor) {\n          setStep(12);\n        } else {\n          if (isUseHunter) {\n            // 是否使用獵人\n            setStep(16);\n          } else {\n            if (isUseKnight) {\n              setStep(18);\n            } else {\n              if (isUseIdiet) {\n                setStep(20);\n              } else {\n                setStep(22);\n              }\n            }\n          }\n        }\n        // setStep(12);\n        break;\n      case 12:\n        setStep(13);\n        break;\n      case 13:\n        if (!isPredictorDead) {\n          setIsOpenPredictor(true);\n        } else {\n          setTimeout(() => {\n            setStep(14)\n          }, 2000);\n        }\n        break;\n      case 14:\n        // setStep(15);\n        if (isPredictorDead) {\n          setTimeout(() => {\n            setStep(15)\n          }, 2000);\n        }\n        break;\n      case 15:\n        if (isUseHunter) {\n          // 是否使用獵人\n          setStep(16);\n        } else {\n          if (isUseKnight) {\n            setStep(18);\n          } else {\n            if (isUseIdiet) {\n              setStep(20);\n            } else {\n              setStep(22);\n            }\n          }\n        }\n        break;\n      case 16:\n        if (!isHunterDead) {\n          setIsOpenHunterShoot(true);\n        } else {\n          setTimeout(() => {\n            setStep(17)\n          }, 2000);\n        }\n        break;\n      case 17:\n        if (isUseKnight) {\n          setStep(18);\n        } else {\n          if (isUseIdiet) {\n            setStep(20);\n          } else {\n            setStep(22);\n          }\n        }\n        break;\n      case 18:\n        setStep(19);\n        break;\n      case 19:\n        if (isUseIdiet) {\n          setStep(20);\n        } else {\n          setStep(22);\n        }\n        break;\n      case 20:\n        setStep(21);\n        break;\n      case 21:\n          setStep(22);\n        break;\n      case 22:\n        setIsOpenResult(true);\n        break;\n      default:\n    }\n  }, [step]);\n\n  /**\n   * handleCloseWolfKill\n   * 狼人殺人視窗\n   * \n   */\n  const handleCloseWolfKill = () => {\n    setIsOpenWolfKill(false);\n    setStep(5);\n  }\n\n  /**\n   * handleWitchSave\n   * 女巫是否使用解藥\n   * \n   * @param {bool} isSave - true: 使用, false: 不使用\n   */\n  const handleWitchSave = (isSave) => {\n    setIsOpenWitchSave(false);\n    setStep(9);\n\n    if (isSave) {\n      // 使用解藥\n      setTimeout(() => {\n        setIsUse(true);\n        setIsUseSave(true);\n        setDeadNumber(null);\n      }, 500);\n    }\n  }\n\n  /**\n   * handleWitchPoison\n   * 關閉女巫是否使用毒藥\n   * \n   * @param {bool} isPoison - true: 使用, false: 不使用\n   */\n  const handleWitchPoison = (isPoison) => {\n    setIsOpenWitchPoison(false);\n    setStep(11);\n\n    if (!isUsePoison) {\n      setTimeout(() => {\n        setIsUsePoison(isPoison);\n      }, 500);\n    }\n\n    if (!isPoison) {\n      setWitchDeadNumber(null);\n    } else {\n      // 使用毒藥, 判斷是不是毒到獵人\n      if (IS_DEBUG) {\n        console.log('witchDeadNumber.role.key', witchDeadNumber.role.key);\n      }\n      if (witchDeadNumber !== null && witchDeadNumber.role.key === HUNTER.key) {\n        setIsKillByWitch(true);\n      }\n    }\n  }\n\n  /**\n   * handlePredictor\n   * 關閉預言家詢問視窗\n   * \n   */\n  const handlePredictor = () => {\n    setIsOpenPredictor(false);\n    setIsOpenRols(true);\n    setStep(14);\n  }\n\n  /**\n   * handleCloseCheckRole\n   * 關閉預言家查驗身份結果\n   * \n   */\n  const handleCloseCheckRole = () => {\n    setIsOpenRols(false);\n    setStep(15);\n  }\n\n  /**\n   * audioSrc\n   * 取得音效檔\n   * \n   */\n  const audioSrc = useMemo(() => {\n    let returnSrc = null;\n\n    switch(step) {\n      case 1:\n        returnSrc = step1;\n        break;\n      case 2:\n        returnSrc = step2;\n        break;\n      case 3:\n        returnSrc = step3;\n        break;\n      case 4:\n        returnSrc = step4;\n        break;\n      case 5:\n        returnSrc = step5;\n        break;\n      case 6:\n        returnSrc = step6;\n        break;\n      case 7:\n        returnSrc = step7;\n        break;\n      case 8:\n        returnSrc = step8;\n        break;\n      case 9:\n        returnSrc = step9;\n        break;\n      case 10:\n        returnSrc = step10;\n        break;\n      case 11:\n        returnSrc = step11;\n        break;\n      case 12:\n        returnSrc = step12;\n        break;\n      case 13:\n        returnSrc = step13;\n        break;\n      case 14:\n        returnSrc = step14;\n        break;\n      case 15:\n        returnSrc = step15;\n        break;\n      case 16:\n        returnSrc = step16;\n        break;\n      case 17:\n        returnSrc = step17;\n        break;\n      case 18:\n        returnSrc = step18;\n        break;\n      case 19:\n          returnSrc = step19;\n          break;\n      case 20:\n        returnSrc = step20;\n        break;\n      case 21:\n        returnSrc = step21;\n        break;\n      case 22:\n        returnSrc = step22;\n        break;\n      default:\n        break;\n    }\n\n    return returnSrc;\n  }, [step]);\n\n  /**\n   * generateResultMessage\n   * 組出當晚死亡訊息\n   * \n   */\n  const generateResultMessage = () => {\n    let returnMessage = null;\n    if (deadNumber === null && witchDeadNumber === null) {\n      returnMessage = t('christmas_eve');\n      return returnMessage;\n    } else {\n      let tmp = [];\n      if (deadNumber !== null) {\n        tmp.push(deadNumber.index);\n      }\n      if (witchDeadNumber !== null && deadNumber !== null && witchDeadNumber.index !== deadNumber.index) {\n        tmp.push(witchDeadNumber.index);\n      }\n\n      // 重新排序\n      tmp.sort((a, b) => {\n        return a - b;\n      });\n      \n      // 每晚最多只會有兩位玩家死掉\n      tmp.forEach((number, index) => {\n        returnMessage += number;\n        if (tmp.length === 2 && index !== tmp.length - 1) {\n          returnMessage += ', ';\n        }\n      });\n    }\n\n    return t('dead_player', { returnMessage });\n  }\n\n  /**\n   * handleCloseResult\n   * 關閉晚上結果\n   * 判斷是否結束遊戲\n   * 判斷是否有獵人\n   * \n   */\n  const handleCloseResult = () => {\n    // 設定成白天\n    // setDayType(DAY_TYPE.DAY);\n\n    // 關閉晚上結果\n    setIsOpenResult(false);\n    \n    // 更新遊戲訊息\n    setMessages([\n      ...messages,\n      `${t('n_night', { day })}${generateResultMessage()}`\n    ]);\n\n    const tmpArray = [];\n\n    // 狼人殺死的人\n    if (deadNumber !== null) {\n      tmpArray.push(deadNumber);\n      // setDead([\n      //   ...dead,\n      //   deadNumber,\n      // ]);\n    }\n\n    // 女巫毒的人\n    if (isUseWitch && witchDeadNumber !== null && deadNumber.index !== witchDeadNumber.index) {\n      tmpArray.push(witchDeadNumber);\n    }\n\n    // 更新已死亡的人\n    const tmpDead = [\n      ...dead,\n      ...tmpArray,\n    ];\n    if (tmpArray.length > 0) {\n      setDead(tmpDead);\n    }\n\n    const result = checkGameFinished(tmpDead);\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      // 檢查獵人是否死亡\n      const isHunter = checkHunter(tmpDead);\n\n      if (isHunter) {\n        setIsOpenHunter(true);\n      } else {\n        setTimeout(() => {\n          initSelect(false);\n        }, 500);\n      }\n    }\n  }\n\n  /**\n   * generateSelectPicker\n   * 組出選擇頭像 component\n   * \n   * @param {string} role - 角色\n   */\n  const generateSelectPicker = (role) => {\n    let returnComp = null;\n    let selectValue = null;\n    let selectFunc = null;\n\n    switch(role) {\n      // 狼人\n      case WOLF.key:\n        selectValue = deadNumber;\n        selectFunc = setDeadNumber;\n        break;\n      // 女巫\n      case WITCH.key:\n        selectValue = witchDeadNumber;\n        selectFunc = setWitchDeadNumber;\n        break;\n      // 預言家\n      case PREDICTOR.key:\n        selectValue = predictorSelect;\n        selectFunc = setPredictorSelect;\n        break;\n      // 獵人\n      case HUNTER.key:\n        selectValue = hunterSelect;\n        selectFunc = setHunterSelect;\n        break;\n      // 騎士\n      case KNIGHT.key:\n        selectValue = knightSelect;\n        selectFunc = setKnightSelect;\n        break;\n      // 一般投票\n      default:\n        selectValue = selectVote;\n        selectFunc = setSelectVote;\n    }\n\n    returnComp = (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        {\n          <Grid container justify=\"center\" alignItems=\"center\">\n            {\n              list.map(sit => {\n                let className = classes.avatar;\n\n                if (selectValue) {\n                  if (selectValue.index === sit.index) {\n                    className = classes.pinkAvatar;\n                  };\n                }\n\n                // 判斷該玩家是否死亡\n                const idDead = dead.some(tmp => tmp.index === sit.index);\n\n                return (\n                  <>\n                    {\n                      (idDead) ? (\n                        <Avatar className={classes.dead}>\n                          <span className={classes.number}>\n                            { sit.index }\n                          </span>\n                        </Avatar>\n                      ) : (\n                        <Avatar className={className} onClick={() => {selectFunc(sit)}}>\n                          <span className={classes.number}>\n                            { sit.index }\n                          </span>\n                        </Avatar>\n                      )\n                    }\n                  </>\n                );\n              })\n            }\n          </Grid>\n        }\n      </Grid>\n    );\n\n    return returnComp;\n  }\n\n  /**\n   * handleVote\n   * 投票結果\n   * \n   * @param {bool} isVote - 是否有投票, false: 放棄\n   */\n  const handleVote = (isVote) => {\n    setDayType(DAY_TYPE.DAY);\n\n    // 關閉投票視窗\n    setIsOpenVote(false);\n\n    if (isVote) {\n      // 判斷被放逐的是不是白癡\n      if (selectVote.role.key === IDIET.key && isUseIdietSkill === false) {\n        setMessages([\n          ...messages,\n          `${t('n_day', { day })}${t('no_is_idiet', { index: selectVote.index })}, ${t('idiet_result')}`,\n        ]);\n\n        setIsUseIdietSkill(true);\n        setIsOpenIdietResult(true);\n      } else {\n        const tmpDead = [\n          ...dead,\n          selectVote,\n        ]\n        if (isVote) {\n          setDead(tmpDead);\n    \n          setMessages([\n            ...messages,\n            `${t('n_day', { day })}${selectVote.index}`,\n          ]);\n        } else {\n          setMessages([\n            ...messages,\n            `${t('n_day', { day })}${t('give_up_vote')}`,\n          ]);\n        }\n    \n        const result = checkGameFinished(tmpDead);\n        if (result.isFinished) {\n          setIsOpenGameResult(true);\n          setGameResultMessage(result.message);\n        } else {\n          // 檢查獵人是否死亡\n          const isHunter = checkHunter(tmpDead);\n    \n          if (isHunter) {\n            setIsOpenHunter(true);\n          } else {\n            // initSelect(true);\n            setIsOpenLastWords(true);\n          }\n        }\n      }\n    } else {\n      // initSelect(true);\n      setIsOpenLastWords(true);\n    }\n  }\n\n  /**\n   * checkHunter\n   * 檢查獵人是否死亡\n   * \n   * @param {array} dead - 死掉的人\n   */\n  const checkHunter = (dead) => {\n    let isHunter = false;\n\n    // 有使用獵人並未發動技能\n    // console.log('isUseHunter', isUseHunter);\n    // console.log('isUseHunterSkill', isUseHunterSkill);\n    // console.log('isKillByWitch', isKillByWitch);\n    if (isUseHunter && !isUseHunterSkill && !isKillByWitch && !isHunterDead) {\n      isHunter = dead.some(tmp => tmp.role.key === HUNTER.key);\n    }\n    // console.log('isHunter', isHunter);\n    return isHunter;\n  }\n\n  /**\n   * checkGameFinished\n   * 檢查遊戲是否結束\n   * \n   * @param {array} - 死亡的人\n   */\n  const checkGameFinished = (dead) => {\n    if (isUsePredictor) {\n      if (dead.some(tmp => tmp.role.key === PREDICTOR.key)) {\n        setIsPredictorDead(true);\n      }\n    }\n\n    if (isUseWitch) {\n      if (dead.some(tmp => tmp.role.key === WITCH.key)) {\n        setIsWitchDead(true);\n      }\n    }\n\n    if (isUseHunter) {\n      if (dead.some(tmp => tmp.role.key === HUNTER.key)) {\n        setIsHunterDead(true);\n      }\n    }\n\n    if (isUseKnight) {\n      if (dead.some(tmp => tmp.role.key === KNIGHT.key)) {\n        setIsKnightDead(true);\n      }\n    }\n    \n    if (isUseIdiet) {\n      if (dead.some(tmp => tmp.role.key === IDIET.key)) {\n        setIsIdietDead(true);\n      }\n    }\n\n    if (IS_DEBUG) {\n      console.log('dead', dead);\n      console.log('wolfNumber', wolfNumber);\n    }\n\n    // 判斷好人是否獲勝\n    let deadWolf = 0;\n    dead.forEach((dead) => {\n      if (dead.role.key === WOLF.key) {\n        deadWolf += 1;\n      }\n    });\n\n    if (IS_DEBUG) {\n      console.log('deadWolf', deadWolf);\n    }\n\n    if (deadWolf === wolfNumber) {\n      return {\n        isFinished: true,\n        message: t('good_win'),\n      }\n    }\n\n    // 判斷壞人是否獲勝\n    if (IS_DEBUG) {\n      console.log('playerNumber', playerNumber);\n    }\n\n    if ((playerNumber - dead.length) === (wolfNumber - deadWolf)) {\n      return {\n        isFinished: true,\n        message: t('bad_win'),\n      }\n    }\n\n    // if ((playerNumber - dead.length) <= (wolfNumber - deadWolf) * 2) {\n    //   return {\n    //     isFinished: true,\n    //     message: t('bad_win'),\n    //   }\n    // }\n\n    // 判斷是否有屠邊局, 壞人是否屠邊成功\n    if (IS_DEBUG) {\n      console.log('isKillKind', isKillKind);\n    }\n    if (isKillKind) {\n      let gods = 0; // 神\n      let villagers = 0; // 民\n      let deadGods = 0; // 死掉的神\n      let deadVillagers = 0; // 死掉的民\n\n      // 玩家\n      list.forEach((tmp) => {\n        if (tmp.role.isGood) {\n          if (tmp.role.isGod) {\n            gods += 1;\n          } else {\n            villagers += 1;\n          }\n        }\n      });\n\n      // 死掉的人\n      dead.forEach((tmp) => {\n        if (tmp.role.isGood) {\n          if (tmp.role.isGod) {\n            deadGods += 1;\n          } else {\n            deadVillagers += 1;\n          }\n        }\n      });\n\n      if (IS_DEBUG) {\n        console.log('gods', gods);\n        console.log('villagers', villagers);\n        console.log('deadGods', deadGods);\n        console.log('deadVillagers', deadVillagers);\n      }\n\n      if ((deadGods !== 0 && gods === deadGods) || (deadVillagers !== 0 && villagers === deadVillagers)) {\n        return {\n          isFinished: true,\n          message: t('bad_win_kind'),\n        }\n      }\n    }\n\n    return {\n      isFinished: false,\n      message: '',\n    }\n  }\n\n  /**\n   * handleShoot\n   * 獵人射殺\n   * \n   * @param {bool} isShoot - 是否射殺\n   */\n  const handleShoot = (isShoot) => {\n    setIsOpenHunter(false);\n    setIsUseHunterSkill(true);\n    // console.log('isShoot', isShoot);\n    if (isShoot) {\n      const tmpDead = [\n        ...dead,\n        hunterSelect,\n      ];\n\n      setDead(tmpDead);\n      setMessages([\n        ...messages,\n        t('hunter_shoot_player', { index: hunterSelect.index })\n      ]);\n      const result = checkGameFinished(tmpDead);\n\n      if (result.isFinished) {\n        setIsOpenGameResult(true);\n        setGameResultMessage(result.message);\n      } else {\n        // console.log('11', dayType);\n        if (dayType === DAY_TYPE.DAY) {\n          initSelect(true);\n        } else {\n          initSelect(false);\n        }\n      }\n    } else {\n      // console.log('22', dayType);\n      if (dayType === DAY_TYPE.DAY) {\n        initSelect(true);\n      } else {\n        initSelect(false);\n      }\n    }\n  }\n\n  /**\n   * initSelect\n   * 初始化選擇\n   * \n   * @param {bool} isNextDay - 是否進入下一天\n   */\n  const initSelect = (isNextDay) => {\n    // 清空全部選擇\n    setDeadNumber(null); // 狼人\n    setWitchDeadNumber(null); // 女巫毒殺\n    setPredictorSelect(null); // 預言家選擇\n    setSelectVote(null); // 投票選擇\n    setIsUse(false);\n    setHunterSelect(null); // 獵人選擇\n    setKnightSelect(null); // 騎士選擇\n    setIsShowMessage(false);\n\n    if (isNextDay) {\n      // 進入下一天\n      setDay(day + 1);\n\n      // 進入晚上\n      setDayType(DAY_TYPE.NIGHT);\n\n      // 進入 Step 1\n      setStep(1);\n    } else {\n      setDayType(DAY_TYPE.DAY);\n    }\n  }\n\n  /**\n   * handleGameOver\n   * 遊戲結束\n   * \n   */\n  const handleGameOver = () => {\n    // window.location.href = '/';\n    window.location.reload();\n  }\n\n  /**\n   * handleCloseHunter\n   * 關閉獵人視窗\n   * \n   */\n  const handleCloseHunter = () => {\n    setIsOpenHunterShoot(false);\n    setStep(17);\n  }\n\n  const getWolfs = () => {\n    //list.filter(role => role.role.key === WOLF.key)\n    let wolfsInfo = '';\n    const wolfs = list.filter(role => role.role.key === WOLF.key);\n    wolfs.forEach((tmp, index) => {\n      wolfsInfo += tmp.index;\n      if (wolfs.length - 1 !== index) {\n        wolfsInfo += ', ';\n      }\n    });\n    return wolfsInfo;\n  };\n\n  const getVillages = () => {\n    let villagesInfo = '';\n    const villages = list.filter(role => role.role.key === VILLAGER.key);\n    villages.forEach((tmp, index) => {\n      villagesInfo += tmp.index;\n      if (villages.length - 1 !== index) {\n        villagesInfo += ', ';\n      }\n    });\n    return villagesInfo;\n  };\n\n  /**\n   * handleCloseLastWords\n   * 關閉遺言視窗\n   * \n   */\n  const handleCloseLastWords = () => {\n    setIsOpenLastWords(false);\n    initSelect(true);\n  };\n\n  /**\n   * handleFight\n   * 決鬥結果\n   * \n   */\n  const handleFight = () => {\n    setIsOpenKnight(false);\n    setIsOpenKnightResult(true);\n  }\n\n  /**\n   * handleCloseFight\n   * 關閉決鬥結果\n   * \n   */\n  const handleCloseFight = () => {\n    setIsUseKnightSkill(true);\n    setIsOpenKnightResult(false);\n    let tmpDead = [];\n\n    if (knightSelect !== null && knightSelect.role.key === WOLF.key) {\n      tmpDead = [\n        ...dead,\n        knightSelect,\n      ];\n\n      setMessages([\n        ...messages,\n        t('no_is_wolf', { index: knightSelect.index })\n      ]);\n    } else {\n      tmpDead = [\n        ...dead,\n        list.find(tmp => tmp.role.key === KNIGHT.key),\n      ];\n\n      setMessages([\n        ...messages,\n        t('no_is_not_wolf', { index: knightSelect.index })\n      ]);\n    }\n\n    if (IS_DEBUG) {\n      console.log('handleCloseFight tmpDead', tmpDead);\n    }\n\n    setDead(tmpDead);\n    const result = checkGameFinished(tmpDead);\n\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      initSelect(true);\n    }\n  }\n\n  /**\n   * handleCloseIdiet\n   * 關閉白癡結果\n   * \n   */\n  const handleCloseIdiet =() => {\n    setIsOpenIdietResult(false);\n    initSelect(true);\n  }\n\n  /**\n   * React - render\n   * \n   */\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        { t('gaming') }\n      </div>\n\n      <div style={{ paddingTop: '20px' }}>\n        { t('dead_message') }\n      </div>\n\n      <div style={{ textAlign: 'left', marginLeft: '10%' }}>\n        <ul>\n          {\n            messages.map(message => <li>{ message }</li>)\n          }\n        </ul>\n      </div>\n\n      <div>\n          {\n            (dayType === DAY_TYPE.DAY) && (\n              <>\n                <Divider style={{ marginBottom: '20px' }} />\n                <Button\n                  disabled={(!isUseKnight || isUseKnightSkill)}\n                  onClick={() => (setIsOpenKnight(true))}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  { t('knight_fight') }\n                </Button>\n                <Divider style={{ marginTop: '20px', marginBottom: '20px' }} />\n                <Button onClick={() => (setIsOpenVote(true))} variant=\"contained\" color=\"secondary\">{ t('start_vote') }</Button>\n              </>\n            )\n          }\n      </div>\n\n      <AudioSound\n        url={audioSrc}\n        onFinishedPlaying={handleSongFinishedPlaying}\n      />\n\n      { /* Wolf Kill Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWolfKill}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('wolf_kill')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(WOLF.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseWolfKill} color=\"primary\" disabled={deadNumber === null} variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Wolf Kill End */ }\n\n      { /* Witch Save Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWitchSave}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_save')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isUseSave) ? (\n                <span className={classes.good}>{t('save_used')}</span>\n              ) : (\n                <span className={classes.good}>\n                  { t('dead_person', { index: (deadNumber) ? deadNumber.index : null }) }\n                </span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchSave(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button onClick={() => {handleWitchSave(true)}} color=\"primary\" variant=\"contained\" disabled={isUseSave}>\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Witch Save End */ }\n\n      {/* Witch Poison Start */}\n      <Dialog\n        fullWidth\n        open={isOpenWitchPoison}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_poison')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { \n              (isUsePoison) ? (\n                // 你已使用毒藥\n                <span className={classes.good}>{t('poison_used')}</span>\n              ) : (\n                (isUse) ? (\n                  // 此回合已使用解藥, 不能使用毒藥\n                  <span className={classes.good}>{t('is_use_save')}</span>\n                ) : (\n                  generateSelectPicker(WITCH.key)\n                )\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchPoison(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button disabled={(isUse || witchDeadNumber === null || isUsePoison)} onClick={() => {handleWitchPoison(true)}} color=\"primary\" variant=\"contained\">\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Witch Poison End */}\n\n      {/* Predictor Start */}\n      <Dialog\n        fullWidth\n        open={isOpenPredictor}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('predictor_select')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(PREDICTOR.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={predictorSelect === null} onClick={() => {handlePredictor()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Predictor End */}\n\n      {/* Check Role Start */}\n      <Dialog\n        fullWidth\n        open={isOpenRole}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('role_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (predictorSelect && predictorSelect.role.key === 'wolf') ? (\n                <span className={classes.bad}>{t('is_wolf')}</span>\n              ) : (\n                <span className={classes.good}>{t('not_wolf')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseCheckRole()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Check Role End */}\n\n      {/* Result Start*/}\n      <Dialog\n        fullWidth\n        open={isOpenResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('yesterday_dead')}</DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isShowMessage} \n                onChange={(e) => {\n                  setIsShowMessage(e.target.checked);\n                }}\n              />\n            }\n            label={t('is_show_message')}\n          />\n          {\n            (isShowMessage) && (\n              <DialogContentText id=\"alert-dialog-description\">\n                <span className={classes.bad}>\n                  { generateResultMessage() }\n                </span>\n              </DialogContentText>\n            )\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseResult} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Result End*/}\n\n      { /* Vote Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenVote}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('start_vote')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker('') }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleVote(false); }} color=\"primary\" variant=\"outlined\">\n            { t('give_up') }\n            <CloseIcon />\n          </Button>\n          <Button disabled={selectVote === null} onClick={() => { handleVote(true); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Vote End */ }\n\n      { /* Game Result Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenGameResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('game_over')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { \n              <span className={classes.good}>{gameResultMessage}</span>\n            }\n            <ul>\n              <li>{`${t('wolf')}: ${getWolfs()}`}</li>\n              {\n                (isUsePredictor) && (<li>{`${t('predictor')}: ${list.find(role => role.role.key === PREDICTOR.key).index}`}</li>)\n              }\n              {\n                (isUseWitch) && (<li>{`${t('witch')}: ${list.find(role => role.role.key === WITCH.key).index}`}</li>)\n              }\n              {\n                (isUseHunter) && (<li>{`${t('hunter')}: ${list.find(role => role.role.key === HUNTER.key).index}`}</li>)\n              }\n              {\n                (isUseKnight) && (<li>{`${t('knight')}: ${list.find(role => role.role.key === KNIGHT.key).index}`}</li>)\n              }\n              {\n                (isUseIdiet) && (<li>{`${t('idiet')}: ${list.find(role => role.role.key === IDIET.key).index}`}</li>)\n              }\n              <li>{`${t('villager')}: ${getVillages()}`}</li>\n            </ul>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleGameOver(); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Game Result End */ }\n\n      { /* Hunter Select Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenHunter}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('huner_shoot')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          { generateSelectPicker(HUNTER.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleShoot(false); }} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button onClick={() => { handleShoot(true); }} color=\"primary\" variant=\"contained\" disabled={hunterSelect === null}>\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Hunter Select End */ }\n\n      {/* Hunter Could Shoot Start */}\n      <Dialog\n        fullWidth\n        open={isOpenHunterShoot}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('could_shoot')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isKillByWitch) ? (\n                <span className={classes.bad}>{t('cant_shoot')}</span>\n              ) : (\n                <span className={classes.good}>{t('can_shoot')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleCloseHunter(); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Hunter Could Shoot End */}\n\n      {/* Last Words Start */}\n      <Dialog\n        fullWidth\n        open={isOpenLastWords}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('last_words')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ...\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleCloseLastWords(); }} color=\"primary\" variant=\"contained\">\n            { t('to_night') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Last Words End */}\n\n      {/* Knight Start */}\n      <Dialog\n        fullWidth\n        open={isOpenKnight}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('knight_fight')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isUseKnight) && (<li>{`${t('knight')}: ${list.find(role => role.role.key === KNIGHT.key).index}`}</li>)\n            }\n            { generateSelectPicker(KNIGHT.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={knightSelect === null} onClick={() => {handleFight()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Knight End */}\n\n      {/* Knight Result Start */}\n      <Dialog\n        fullWidth\n        open={isOpenKnightResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('fight_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (knightSelect !== null) ? (\n                (knightSelect.role.key === WOLF.key) ? (\n                  <span className={classes.bad}>{t('no_is_wolf', { index: knightSelect.index })}</span>\n                ) : (\n                  <span className={classes.good}>{t('no_is_not_wolf', { index: knightSelect.index })}</span>\n                )\n              ) : (\n                null\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseFight()}} color=\"primary\" variant=\"contained\">\n            { t('to_night') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Knight Result End */}\n\n      {/* Idiet Result Start */}\n      <Dialog\n        fullWidth\n        open={isOpenIdietResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('idiet_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (selectVote !== null) ? (\n                t('no_is_idiet', { index: selectVote.index })\n              ) : (\n                null\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseIdiet()}} color=\"primary\" variant=\"contained\">\n            { t('to_night') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Idiet Result End */}\n    </>\n  );\n};\n\nexport default Game;\n","/* eslint-disable no-extra-label */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Select from '@material-ui/core/Select';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  KNIGHT,\n  IDIET,\n  VILLAGER,\n} from '../../constants/Role';\nimport Setting from '../Setting/Setting';\nimport CheckRole from '../CheckRole/CheckRole';\nimport Game from '../Game/Game';\n\nconst drawerWidth = 240;\n\nconst createArray = (len, itm) => {\n  let arr1 = [itm],\n      arr2 = [];\n  while (len > 0) {\n      if (len & 1) arr2 = arr2.concat(arr1);\n      arr1 = arr1.concat(arr1);\n      len >>>= 1;\n  }\n  return arr2;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    height: '100vh',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Home = (props) => {\n  const [step, setStep] = useState(0);\n  const [list, setList] = useState([]);\n  const [playerNumber, setPlayerNumber] = useState(6);\n  const [wolfNumber, setWolfNumber] = useState(2);\n  const [isUsePredictor, setIsUsePredictor] = useState(false);\n  const [isUseWitch, setIsUseWitch] = useState(true);\n  const [isUseHunter, setIsUseHunter] = useState(false);\n  const [isUseKnight, setIsUseKnight] = useState(false);\n  const [isUseIdiet, setIsUseIdiet] = useState(false);\n  const [isKillKind, setIsKillKind] = useState(false); // 屠邊局判斷\n\n  const [isOpenDrawer, setIsOpenDrawer] = useState(false);\n  const { t, i18n } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    i18n.changeLanguage(value);\n  }\n\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpenDrawer(isOpen);\n  };\n\n  const handleRestart = () => {\n    window.location.reload();\n  }\n\n  const getRaddomIndex = () => {\n    return Math.floor(Math.random() * playerNumber);\n  }\n\n  const handleStart = () => {\n    const list = createArray(playerNumber, null);\n\n    // 狼人位置\n    for (let i = 0 ; i < wolfNumber ; i += 1) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WOLF,\n      };\n    }\n\n    // 預言家位置\n    if (isUsePredictor) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: PREDICTOR,\n      };\n    }\n\n    // 女巫位置\n    if (isUseWitch) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WITCH,\n      };\n    }\n\n    // 獵人位置\n    if (isUseHunter) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: HUNTER,\n      };\n    }\n\n    // 騎士位置\n    if (isUseKnight) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: KNIGHT,\n      };\n    }\n\n    // 白癡位置\n    if (isUseIdiet) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: IDIET,\n      };\n    }\n\n    // 村民位置\n    list.forEach((sit, index) => {\n      if (sit === null) {\n        list[index] = {\n          index: index + 1,\n          role: VILLAGER,\n        };\n      }\n    })\n\n    setList(list);\n    setStep(1);\n  }\n\n  const handleStartGame = () => {\n    setStep(2);\n  }\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <Container maxWidth={false} className={classes.container}>\n        <Typography component=\"div\" >\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                { t('title') }\n              </Typography>\n              <Select\n                color=\"inherit\"\n                native\n                // value={language}\n                onChange={(e) => handleChange(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"zh-TW\">繁體中文</option>\n                <option value=\"en-US\">English</option>\n              </Select>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            anchor=\"left\"\n            open={isOpenDrawer}\n            onClose={toggleDrawer(false)}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n              <ListItem button key={t('restart')} onClick={handleRestart}>\n                <ListItemIcon><CachedIcon /></ListItemIcon>\n                <ListItemText primary={t('restart')} />\n              </ListItem>\n              {/*}\n              <ListItem button key={t('resetting')} onClick={handleReSetting}>\n                <ListItemIcon><AutorenewIcon /></ListItemIcon>\n                <ListItemText primary={t('resetting')} />\n              </ListItem>\n              {*/}\n            </List>\n          </Drawer>\n            \n          {\n            (step === 0) && (\n              <Setting\n                playerNumber={playerNumber}\n                setPlayerNumber={setPlayerNumber}\n                wolfNumber={wolfNumber}\n                setWolfNumber={setWolfNumber}\n                isUsePredictor={isUsePredictor}\n                setIsUsePredictor={setIsUsePredictor}\n                isUseWitch={isUseWitch}\n                setIsUseWitch={setIsUseWitch}\n                isUseHunter={isUseHunter}\n                setIsUseHunter={setIsUseHunter}\n                handleStart={handleStart}\n                isKillKind={isKillKind}\n                setIsKillKind={setIsKillKind}\n                isUseKnight={isUseKnight}\n                setIsUseKnight={setIsUseKnight}\n                isUseIdiet={isUseIdiet}\n                setIsUseIdiet={setIsUseIdiet}\n              />\n            )\n          }\n          {\n            (step === 1) && (\n              <CheckRole\n                list={list}\n                handleStartGame={handleStartGame}\n              />\n            )\n          }\n          {\n            (step === 2) && (\n              <Game\n                list={list}\n                isUsePredictor={isUsePredictor}\n                isUseWitch={isUseWitch}\n                isUseHunter={isUseHunter}\n                playerNumber={playerNumber}\n                wolfNumber={wolfNumber}\n                isKillKind={isKillKind}\n                setIsKillKind={setIsKillKind}\n                isUseKnight={isUseKnight}\n                isUseIdiet={isUseIdiet}\n                setIsUseIdiet={setIsUseIdiet}\n              />\n            )\n          }\n        </Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\nimport enUS from './languages/en-US.json';\nimport zhTW from './languages/zh-TW.json';\n\n// console.log('zhTW', zhTW);\n\ni18n\n.use(initReactI18next)\n.init({\n  // we init with resources\n  resources: {\n    'en-US': {\n      translations: enUS,\n    },\n    'zh-TW': {\n      translations: zhTW,\n    },\n  },\n  lng: localStorage.getItem('language') || 'zh-TW',\n  fallbackLng: 'zh-TW',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  // keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ',',\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport Home from './components/Home/Home';\nimport './App.css';\n\nimport './locales/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/wolf.9caa04d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/predictor.473d5f28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witch.4dc6d5d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5cf4e8f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/knight.998fe9ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/idiet.4beb90c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/villager.fa735092.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step_1.6751b7d1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_2.264c120e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_3.3f6f4aa3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_4.a75253e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_5.2e36d3c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_6.dc038730.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_7.84ea5c11.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_8.4898a6d4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_9.83e9ca3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_10.b4e6486e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_11.9f00d56d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_12.b3d32d1f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_13.488a98a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_14.02591e0a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_15.5cf29b44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_16.99894c39.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_17.e7d96e3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_18.527b59e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_19.75d0a097.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_20.6c44e2a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_21.05bbb86f.mp3\";"],"sourceRoot":""}