{"version":3,"sources":["constants/Role.js","components/Setting/Setting.js","components/CheckRole/CheckRole.js","components/Game/Game.js","components/Home/Home.js","locales/index.js","App.js","serviceWorker.js","index.js","static/images/wolf.jpg","static/images/predictor.jpg","static/images/witch.jpg","static/images/hunter.jpg","static/images/villager.jpg","static/audio/step_1.mp3","static/audio/step_2.mp3","static/audio/step_3.mp3","static/audio/step_4.mp3","static/audio/step_5.mp3","static/audio/step_6.mp3","static/audio/step_7.mp3","static/audio/step_8.mp3","static/audio/step_9.mp3","static/audio/step_10.mp3","static/audio/step_11.mp3","static/audio/step_12.mp3","static/audio/step_13.mp3","static/audio/step_14.mp3","static/audio/step_15.mp3","static/audio/step_16.mp3","static/audio/step_17.mp3","static/audio/step_18.mp3"],"names":["WOLF","key","isDead","isGood","src","PREDICTOR","isGod","WITCH","HUNTER","VILLAGER","useStyles","makeStyles","theme","root","display","formControl","margin","spacing","group","Setting","props","classes","t","useTranslation","playerNumber","setPlayerNumber","wolfNumber","setWolfNumber","isUsePredictor","setIsUsePredictor","isUseWitch","setIsUseWitch","isUseHunter","setIsUseHunter","handleStart","FormControl","component","className","FormLabel","RadioGroup","row","value","onChange","e","target","FormControlLabel","control","Radio","label","Button","style","marginBottom","onClick","variant","color","padding","isChecked","role","textAlign","fontSize","RoleCard","sit","useState","isWatch","setIsWatch","isOpen","setIsOpen","handleClose","wolf","predictor","witch","hunter","villager","Paper","Typography","index","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","width","DialogActions","CheckRole","list","handleStartGame","map","AudioSound","React","memo","url","onFinishedPlaying","playStatus","Sound","status","PLAYING","avatar","pinkAvatar","backgroundColor","pink","good","bad","Game","step","setStep","isOpenWolfKill","setIsOpenWolfKill","deadNumber","setDeadNumber","witchDeadNumber","setWitchDeadNumber","isOpenWitchSave","setIsOpenWitchSave","isOpenWitchPoison","setIsOpenWitchPoison","isUse","setIsUse","isOpenPredictor","setIsOpenPredictor","predictorSelect","setPredictorSelect","isOpenRole","setIsOpenRols","isOpenResult","setIsOpenResult","handleSongFinishedPlaying","useCallback","handleWitchSave","isSave","handleWitchPoison","isPoison","audioSrc","useMemo","returnSrc","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","step11","step12","step13","step14","step15","step16","step17","step18","paddingTop","Grid","container","justify","alignItems","Avatar","disabled","paddingLeft","paddingRight","height","toolbar","mixins","drawer","drawerPaper","flexGrow","menuButton","marginRight","title","fullList","Home","setList","isOpenDrawer","setIsOpenDrawer","i18n","toggleDrawer","event","type","getRaddomIndex","Math","floor","random","Container","maxWidth","AppBar","position","Toolbar","IconButton","edge","aria-label","Select","native","changeLanguage","inputProps","name","Drawer","anchor","paper","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","len","itm","arr1","arr2","concat","createArray","i","forEach","use","initReactI18next","init","resources","translations","enUS","zhTW","lng","localStorage","getItem","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5715b2ff.chunk.js","sourcesContent":["export const WOLF = {\n  key: 'wolf',\n  isDead: false,\n  isGood: false,\n  src: 'wolf.jpg',\n};\n\nexport const PREDICTOR = {\n  key: 'predictor',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'predictor.jpg',\n};\n\nexport const WITCH = {\n  key: 'witch',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'witch.jpg',\n};\n\nexport const HUNTER = {\n  key: 'hunter',\n  isDead: false,\n  isGood: true,\n  isGod: true,\n  src: 'hunter.jpg',\n};\n\nexport const VILLAGER = {\n  key: 'villager',\n  isDead: false,\n  isGood: true,\n  isGod: false,\n  src: 'villager.jpg',\n};\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst Setting = (props) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const {\n    playerNumber,\n    setPlayerNumber,\n    wolfNumber,\n    setWolfNumber,\n    isUsePredictor,\n    setIsUsePredictor,\n    isUseWitch,\n    setIsUseWitch,\n    isUseHunter,\n    setIsUseHunter,\n    handleStart,\n  } = props;\n\n  // console.log('wolfNumber', wolfNumber);\n\n  return (\n    <>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('player_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={playerNumber}\n            onChange={(e) => {setPlayerNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={6} control={<Radio />} label=\"6\" />\n            <FormControlLabel value={7} control={<Radio />} label=\"7\" />\n            <FormControlLabel value={8} control={<Radio />} label=\"8\" />\n            <FormControlLabel value={9} control={<Radio />} label=\"9\" />\n            <FormControlLabel value={10} control={<Radio />} label=\"10\" />\n            <FormControlLabel value={11} control={<Radio />} label=\"11\" />\n            <FormControlLabel value={12} control={<Radio />} label=\"12\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('wolf_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={wolfNumber}\n            onChange={(e) => {setWolfNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n            <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n            <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('predictor')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUsePredictor}\n            onChange={(e) => {setIsUsePredictor((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('witch')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseWitch}\n            onChange={(e) => {setIsUseWitch((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('hunter')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseHunter}\n            onChange={(e) => {setIsUseHunter((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Button style={{ marginBottom: '20px' }} onClick={handleStart} variant=\"contained\" color=\"secondary\">{t('finished')}</Button>\n    </>\n  );\n};\n\nexport default Setting;\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport wolf from '../../static/images/wolf.jpg';\nimport predictor from '../../static/images/predictor.jpg';\nimport witch from '../../static/images/witch.jpg';\nimport hunter from '../../static/images/hunter.jpg';\nimport villager from '../../static/images/villager.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: '10px',\n  },\n  isChecked: {\n    color: 'red',\n  },\n  role: {\n    textAlign: 'center',\n    fontSize: '30px',\n  },\n}));\n\nconst RoleCard = (props) => {\n  const { sit } = props;\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [isWatch, setIsWatch] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (!isWatch) {\n      setIsOpen(true);\n    }\n  }\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsWatch(true);\n  }\n\n  let src = null;\n  switch(sit.role.key) {\n    case 'wolf':\n      src = wolf;\n      break;\n    case 'predictor':\n      src = predictor;\n      break;\n    case 'witch':\n      src = witch;\n      break;\n    case 'hunter':\n      src = hunter;\n      break;\n    case 'villager':\n      src = villager;\n      break;\n    default:\n      break;\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} onClick={handleClick}>\n        <Typography variant=\"h5\" component=\"h3\">\n          { t('sit_number', { index: sit.index }) }\n        </Typography>\n        <Typography component=\"p\">\n          { (isWatch) ? (\n            <span className={classes.isChecked}>\n              { t('is_checked') }\n            </span>\n          ) : t('check_role') }\n        </Typography>\n      </Paper>\n\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('your_role')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <img src={src} width=\"100vh\" />\n            <div className={classes.role}>\n              { t(sit.role.key) }\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CheckRole = (props) => {\n  const { t } = useTranslation();\n  const { list, handleStartGame } = props;\n  const classes = useStyles();\n\n  return (\n    <> \n      {\n        list.map((sit) => {\n          return (\n            <div>\n              <RoleCard\n                sit={sit}\n              />\n            </div>\n          )\n        })\n      }\n      <Button style={{ marginBottom: '20px' }} onClick={handleStartGame} variant=\"contained\" color=\"secondary\">{t('start')}</Button>\n    </>\n  );\n};\n\nexport default CheckRole;\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport Sound from 'react-sound';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n// import AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, pink } from '@material-ui/core/colors';\n\nimport { useTranslation } from \"react-i18next\";\n\nimport step1 from '../../static/audio/step_1.mp3'; // 天黑請閉眼\nimport step2 from '../../static/audio/step_2.mp3'; // 狼人現身請睜眼\nimport step3 from '../../static/audio/step_3.mp3'; // 狼人確認彼此的身份\nimport step4 from '../../static/audio/step_4.mp3'; // 狼人請殺人\nimport step5 from '../../static/audio/step_5.mp3'; // 狼人請閉眼\nimport step6 from '../../static/audio/step_6.mp3'; // 女巫請睜眼\nimport step7 from '../../static/audio/step_7.mp3'; // 這位玩家被殺死了\nimport step8 from '../../static/audio/step_8.mp3'; // 你要使用解藥嗎\nimport step9 from '../../static/audio/step_9.mp3'; // 你要使用毒藥嗎\nimport step10 from '../../static/audio/step_10.mp3'; // 你要毒誰呢\nimport step11 from '../../static/audio/step_11.mp3'; // 女巫請閉眼\nimport step12 from '../../static/audio/step_12.mp3'; // 預言家請睜眼\nimport step13 from '../../static/audio/step_13.mp3'; // 你要查驗的對象是\nimport step14 from '../../static/audio/step_14.mp3'; // 他的身份是\nimport step15 from '../../static/audio/step_15.mp3'; // 預言家請閉眼\nimport step16 from '../../static/audio/step_16.mp3'; // 獵人請睜眼\nimport step17 from '../../static/audio/step_17.mp3'; // 獵人請閉眼\nimport step18 from '../../static/audio/step_18.mp3'; // 天亮請睜眼\n\nconst AudioSound = React.memo((props) => {\n  const {\n    url,\n    onFinishedPlaying,\n  } = props;\n\n  return (\n    <Sound\n      url={url}\n      playStatus={Sound.status.PLAYING}\n      // onLoading={this.handleSongLoading}\n      // onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={onFinishedPlaying}\n    />\n  );\n});\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 10,\n  },\n  pinkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: pink[500],\n  },\n  good: {\n    fontSize: '30px',\n  },\n  bad: {\n    fontSize: '30px',\n    color: 'red',\n  },\n  // greenAvatar: {\n  //   margin: 10,\n  //   color: '#fff',\n  //   backgroundColor: green[500],\n  // },\n});\n\nconst Game = (props) => {\n  const classes = useStyles();\n  const { list } = props;\n  const { t } = useTranslation();\n  const [step, setStep] = useState(1);\n  const [isOpenWolfKill, setIsOpenWolfKill] = useState(false);\n  const [deadNumber, setDeadNumber] = useState(null); // 狼人晚上殺人的\n  const [witchDeadNumber, setWitchDeadNumber] = useState(null); // 女巫毒的\n  const [isOpenWitchSave, setIsOpenWitchSave] = useState(false); // 解藥詢問\n  const [isOpenWitchPoison, setIsOpenWitchPoison] = useState(false); // 毒藥詢問\n  const [isUse, setIsUse] = useState(false); // 女巫一晚只能使用一種藥\n  const [isOpenPredictor, setIsOpenPredictor] = useState(false); // 預言家選擇身份\n  const [predictorSelect, setPredictorSelect] = useState(null); // 預言家選擇\n  const [isOpenRole, setIsOpenRols] = useState(false); // 預言家查看身份\n  const [isOpenResult, setIsOpenResult] = useState(false); // 晚上結果\n\n  const [dead, setDead] = useState([]); // 死亡的人\n\n  const handleSongFinishedPlaying = useCallback(() => {\n    // setStep(step + 1);\n    switch(step) {\n      case 1:\n        setStep(2);\n        break;\n      case 2:\n        setStep(3);\n        break;\n      case 3:\n        setStep(4);\n        break;\n      case 4:\n        // setStep(2);\n        setIsOpenWolfKill(true);\n        break;\n      case 5:\n        setStep(6);\n        break;\n      case 6:\n        setStep(7);\n        break;\n      case 7:\n        setIsOpenWitchSave(true);\n        setStep(8);\n        break;\n      case 8:\n        break;\n      case 9:\n        setIsOpenWitchPoison(true);\n        setStep(10);\n        break;\n      case 10:\n        break;\n      case 11:\n        setStep(12);\n        break;\n      case 12:\n        setStep(13);\n        break;\n      case 13:\n        setIsOpenPredictor(true);\n        break;\n      case 14:\n        // setStep(15);\n        break;\n      case 15:\n        setStep(16);\n        break;\n      case 16:\n        setStep(17);\n        break;\n      case 17:\n        setStep(18);\n        break;\n      case 18:\n        setIsOpenResult(true);\n        break;\n      default:\n    }\n  }, [step]);\n\n  const handleCloseWolfKill = () => {\n    setIsOpenWolfKill(false);\n    setStep(5);\n  }\n\n  const handleWitchSave = (isSave) => {\n    if (isSave) {\n      // 使用解藥\n      setIsUse(true);\n      setDeadNumber(null);\n    }\n    setIsOpenWitchSave(false);\n    setStep(9);\n  }\n\n  const handleWitchPoison = (isPoison) => {\n    if (!isPoison) {\n      setWitchDeadNumber(null);\n    }\n    setIsOpenWitchPoison(false);\n    setStep(11);\n  }\n\n  const handlePredictor = () => {\n    setIsOpenPredictor(false);\n    setIsOpenRols(true);\n    setStep(14);\n  }\n\n  const handleCloseCheckRole = () => {\n    setIsOpenRols(false);\n    setStep(15);\n  }\n\n  const audioSrc = useMemo(() => {\n    let returnSrc = null;\n\n    switch(step) {\n      case 1:\n        returnSrc = step1;\n        break;\n      case 2:\n        returnSrc = step2;\n        break;\n      case 3:\n        returnSrc = step3;\n        break;\n      case 4:\n        returnSrc = step4;\n        break;\n      case 5:\n        returnSrc = step5;\n        break;\n      case 6:\n        returnSrc = step6;\n        break;\n      case 7:\n        returnSrc = step7;\n        break;\n      case 8:\n        returnSrc = step8;\n        break;\n      case 9:\n        returnSrc = step9;\n        break;\n      case 10:\n        returnSrc = step10;\n        break;\n      case 11:\n        returnSrc = step11;\n        break;\n      case 12:\n        returnSrc = step12;\n        break;\n      case 13:\n        returnSrc = step13;\n        break;\n      case 14:\n        returnSrc = step14;\n        break;\n      case 15:\n        returnSrc = step15;\n        break;\n      case 16:\n        returnSrc = step16;\n        break;\n      case 17:\n        returnSrc = step17;\n        break;\n      case 18:\n        returnSrc = step18;\n        break;\n      default:\n        break;\n    }\n\n    return returnSrc;\n  }, [step]);\n\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        { t('gaming') }\n      </div>\n\n      <AudioSound\n        url={audioSrc}\n        onFinishedPlaying={handleSongFinishedPlaying}\n      />\n\n      { /* Wolf Kill Start */ }\n      <Dialog\n        open={isOpenWolfKill}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('wolf_kill')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              {\n                list.map(sit => {\n                  let className = classes.avatar;\n\n                  if (deadNumber) {\n                    if (deadNumber.index === sit.index) {\n                      className = classes.pinkAvatar;\n                    };\n                  }\n\n                  return (\n                    <>\n                      <Avatar className={className} onClick={() => {setDeadNumber(sit)}}>\n                        { sit.index }\n                      </Avatar>\n                    </>\n                  );\n                })\n              }\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseWolfKill} color=\"primary\" disabled={deadNumber === null}>\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Wolf Kill End */ }\n\n      { /* Witch Save Start */ }\n      <Dialog\n        open={isOpenWitchSave}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_save')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              { t('dead_person', { index: (deadNumber) ? deadNumber.index : null }) }\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchSave(true)}} color=\"primary\">\n            { t('yes') }\n          </Button>\n          <Button onClick={() => {handleWitchSave(false)}} color=\"primary\">\n            { t('no') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Witch Save End */ }\n\n      {/* Witch Poison Start */}\n      <Dialog\n        open={isOpenWitchPoison}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_poison')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              {\n                (isUse) ? (\n                  t('is_use_save')\n                ) : (\n                  <Grid container justify=\"center\" alignItems=\"center\">\n                    {\n                      list.map(sit => {\n                        let className = classes.avatar;\n\n                        if (witchDeadNumber) {\n                          if (witchDeadNumber.index === sit.index) {\n                            className = classes.pinkAvatar;\n                          };\n                        }\n\n                        return (\n                          <>\n                            <Avatar className={className} onClick={() => {setWitchDeadNumber(sit)}}>\n                              { sit.index }\n                            </Avatar>\n                          </>\n                        );\n                      })\n                    }\n                  </Grid>\n                )\n              }\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={(isUse || witchDeadNumber === null)} onClick={() => {handleWitchPoison(true)}} color=\"primary\">\n            { t('yes') }\n          </Button>\n          <Button onClick={() => {handleWitchPoison(false)}} color=\"primary\">\n            { t('no') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Witch Poison End */}\n\n      {/* Predictor Start */}\n      <Dialog\n        open={isOpenPredictor}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('predictor_select')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              {\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  {\n                    list.map(sit => {\n                      let className = classes.avatar;\n\n                      if (predictorSelect) {\n                        if (predictorSelect.index === sit.index) {\n                          className = classes.pinkAvatar;\n                        };\n                      }\n\n                      return (\n                        <>\n                          <Avatar className={className} onClick={() => {setPredictorSelect(sit)}}>\n                            { sit.index }\n                          </Avatar>\n                        </>\n                      );\n                    })\n                  }\n                </Grid>\n              }\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={predictorSelect === null} onClick={() => {handlePredictor()}} color=\"primary\">\n            { t('yes') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Predictor End */}\n\n      {/* Check Role Start */}\n      <Dialog\n        open={isOpenRole}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('role_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (predictorSelect && predictorSelect.role.key === 'wolf') ? (\n                <span className={classes.bad}>{t('is_wolf')}</span>\n              ) : (\n                <span className={classes.good}>{t('not_wolf')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseCheckRole()}} color=\"primary\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Check Role End */}\n\n      {/* Result Start*/}\n      <Dialog\n        open={isOpenResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('yesterday_dead')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (deadNumber === null && witchDeadNumber === null) ? (\n                t('christmas_eve')\n              ) : (\n                <>\n                  { deadNumber.index }\n                  {\n                    (witchDeadNumber !== null && witchDeadNumber.index !== deadNumber.index) && `, ${witchDeadNumber.index}`\n                  }\n                </>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {setIsOpenResult(false)}} color=\"primary\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Result End*/}\n\n    </>\n  );\n};\n\nexport default Game;\n","import React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Select from '@material-ui/core/Select';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  VILLAGER,\n} from '../../constants/Role';\nimport Setting from '../Setting/Setting';\nimport CheckRole from '../CheckRole/CheckRole';\nimport Game from '../Game/Game';\n\nconst drawerWidth = 240;\n\nconst createArray = (len, itm) => {\n  let arr1 = [itm],\n      arr2 = [];\n  while (len > 0) {\n      if (len & 1) arr2 = arr2.concat(arr1);\n      arr1 = arr1.concat(arr1);\n      len >>>= 1;\n  }\n  return arr2;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    height: '100vh',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Home = (props) => {\n  const [step, setStep] = useState(0);\n  const [list, setList] = useState([]);\n  const [playerNumber, setPlayerNumber] = useState(6);\n  const [wolfNumber, setWolfNumber] = useState(2);\n  const [isUsePredictor, setIsUsePredictor] = useState(false);\n  const [isUseWitch, setIsUseWitch] = useState(true);\n  const [isUseHunter, setIsUseHunter] = useState(false);\n\n  const [isOpenDrawer, setIsOpenDrawer] = useState(false);\n  const { t, i18n } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    i18n.changeLanguage(value);\n    // console.log('value', value);\n    // setLanguage(value);\n  }\n\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpenDrawer(isOpen);\n  };\n\n  const handleRestart = () => {\n    setIsOpenDrawer(false);\n  }\n\n  const handleReSetting = () => {\n    setIsOpenDrawer(false);\n  }\n\n  const getRaddomIndex = () => {\n    return Math.floor(Math.random() * playerNumber);\n  }\n\n  const handleStart = () => {\n    const list = createArray(playerNumber, null);\n\n    // 狼人位置\n    for (let i = 0 ; i < wolfNumber ; i += 1) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WOLF,\n      };\n    }\n\n    // 預言家位置\n    if (isUsePredictor) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: PREDICTOR,\n      };\n    }\n\n    // 女巫位置\n    if (isUseWitch) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WITCH,\n      };\n    }\n\n    // 獵人位置\n    if (isUseHunter) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: HUNTER,\n      };\n    }\n\n    // 村民位置\n    list.forEach((sit, index) => {\n      if (sit === null) {\n        list[index] = {\n          index: index + 1,\n          role: VILLAGER,\n        };\n      }\n    })\n\n    setList(list);\n    setStep(1);\n  }\n\n  const handleStartGame = () => {\n    setStep(2);\n  }\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <Typography component=\"div\" >\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                { t('title') }\n              </Typography>\n              <Select\n                color=\"inherit\"\n                native\n                // value={language}\n                onChange={(e) => handleChange(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"zh-TW\">繁體中文</option>\n                <option value=\"en-US\">English</option>\n              </Select>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            anchor=\"left\"\n            open={isOpenDrawer}\n            onClose={toggleDrawer(false)}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n              <ListItem button key={t('restart')} onClick={handleRestart}>\n                <ListItemIcon><CachedIcon /></ListItemIcon>\n                <ListItemText primary={t('restart')} />\n              </ListItem>\n              <ListItem button key={t('resetting')} onClick={handleReSetting}>\n                <ListItemIcon><AutorenewIcon /></ListItemIcon>\n                <ListItemText primary={t('resetting')} />\n              </ListItem>\n            </List>\n          </Drawer>\n            \n          {\n            (step === 0) && (\n              <Setting\n                playerNumber={playerNumber}\n                setPlayerNumber={setPlayerNumber}\n                wolfNumber={wolfNumber}\n                setWolfNumber={setWolfNumber}\n                isUsePredictor={isUsePredictor}\n                setIsUsePredictor={setIsUsePredictor}\n                isUseWitch={isUseWitch}\n                setIsUseWitch={setIsUseWitch}\n                isUseHunter={isUseHunter}\n                setIsUseHunter={setIsUseHunter}\n                handleStart={handleStart}\n              />\n            )\n          }\n          {\n            (step === 1) && (\n              <CheckRole\n                list={list}\n                handleStartGame={handleStartGame}\n              />\n            )\n          }\n          {\n            (step === 2) && (\n              <Game\n                list={list}\n              />\n            )\n          }\n        </Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\nimport enUS from './languages/en-US.json';\nimport zhTW from './languages/zh-TW.json';\n\n// console.log('zhTW', zhTW);\n\ni18n\n.use(initReactI18next)\n.init({\n  // we init with resources\n  resources: {\n    'en-US': {\n      translations: enUS,\n    },\n    'zh-TW': {\n      translations: zhTW,\n    },\n  },\n  lng: localStorage.getItem('language') || 'zh-TW',\n  fallbackLng: 'zh-TW',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  // keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ',',\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport Home from './components/Home/Home';\n// import logo from './logo.svg';\nimport './App.css';\n// import './styles/styles.css';\n\nimport './locales/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wolf.9caa04d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/predictor.473d5f28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witch.4dc6d5d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5cf4e8f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/villager.fa735092.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step_1.6751b7d1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_2.264c120e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_3.3f6f4aa3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_4.a75253e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_5.2e36d3c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_6.dc038730.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_7.84ea5c11.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_8.4898a6d4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_9.83e9ca3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_10.b4e6486e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_11.9f00d56d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_12.b3d32d1f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_13.488a98a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_14.02591e0a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_15.5cf29b44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_16.99894c39.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_17.e7d96e3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_18.a7d9ef5f.mp3\";"],"sourceRoot":""}