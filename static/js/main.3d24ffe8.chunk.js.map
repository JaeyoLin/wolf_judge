{"version":3,"sources":["constants/Role.js","components/Setting/Setting.js","components/CheckRole/CheckRole.js","components/Game/Game.js","components/Home/Home.js","locales/index.js","App.js","serviceWorker.js","index.js","static/images/wolf.jpg","static/images/predictor.jpg","static/images/witch.jpg","static/images/hunter.jpg","static/images/knight.jpg","static/images/villager.jpg","static/audio/step_1.mp3","static/audio/step_2.mp3","static/audio/step_3.mp3","static/audio/step_4.mp3","static/audio/step_5.mp3","static/audio/step_6.mp3","static/audio/step_7.mp3","static/audio/step_8.mp3","static/audio/step_9.mp3","static/audio/step_10.mp3","static/audio/step_11.mp3","static/audio/step_12.mp3","static/audio/step_13.mp3","static/audio/step_14.mp3","static/audio/step_15.mp3","static/audio/step_16.mp3","static/audio/step_17.mp3","static/audio/step_18.mp3","static/audio/step_19.mp3","static/audio/step_20.mp3"],"names":["WOLF","key","isGood","isGod","src","PREDICTOR","WITCH","HUNTER","KNIGHT","VILLAGER","useStyles","makeStyles","theme","root","display","formControl","margin","spacing","group","Setting","props","classes","t","useTranslation","playerNumber","setPlayerNumber","wolfNumber","setWolfNumber","isUsePredictor","setIsUsePredictor","isUseWitch","setIsUseWitch","isUseHunter","setIsUseHunter","handleStart","isKillKind","setIsKillKind","isUseKnight","setIsUseKnight","FormControl","component","className","FormLabel","RadioGroup","row","value","onChange","e","target","FormControlLabel","control","Radio","label","Divider","Button","style","marginTop","marginBottom","onClick","variant","color","padding","isChecked","role","textAlign","fontSize","RoleCard","sit","useState","isWatch","setIsWatch","isOpen","setIsOpen","wolf","predictor","witch","hunter","knight","villager","Paper","Typography","index","Dialog","fullWidth","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","width","DialogActions","CheckRole","list","handleStartGame","map","DAY_TYPE","AudioSound","React","memo","url","onFinishedPlaying","playStatus","Sound","status","PLAYING","avatar","backgroundColor","pinkAvatar","pink","dead","good","bad","Game","console","log","forEach","tmp","step","setStep","isOpenWolfKill","setIsOpenWolfKill","deadNumber","setDeadNumber","witchDeadNumber","setWitchDeadNumber","isOpenWitchSave","setIsOpenWitchSave","isOpenWitchPoison","setIsOpenWitchPoison","isUse","setIsUse","isUseSave","setIsUseSave","isUsePoison","setIsUsePoison","isOpenPredictor","setIsOpenPredictor","predictorSelect","setPredictorSelect","isOpenRole","setIsOpenRols","isOpenResult","setIsOpenResult","day","setDay","dayType","setDayType","messages","setMessages","isOpenVote","setIsOpenVote","selectVote","setSelectVote","setDead","isOpenGameResult","setIsOpenGameResult","gameResultMessage","setGameResultMessage","isUseHunterSkill","setIsUseHunterSkill","hunterSelect","setHunterSelect","isOpenHunter","setIsOpenHunter","isKillByWitch","setIsKillByWitch","isOpenHunterShoot","setIsOpenHunterShoot","isPredictorDead","setIsPredictorDead","isWitchDead","setIsWitchDead","isHunterDead","setIsHunterDead","isOpenLastWords","setIsOpenLastWords","setIsKnightDead","isUseKnightSkill","setIsUseKnightSkill","isOpenKnight","setIsOpenKnight","knightSelect","setKnightSelect","isOpenKnightResult","setIsOpenKnightResult","handleSongFinishedPlaying","useCallback","setTimeout","handleWitchSave","isSave","handleWitchPoison","isPoison","audioSrc","useMemo","returnSrc","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","step11","step12","step13","step14","step15","step16","step17","step18","step19","step20","generateResultMessage","returnMessage","push","sort","a","b","number","length","generateSelectPicker","selectValue","selectFunc","Grid","container","justify","alignItems","idDead","some","Avatar","handleVote","isVote","tmpDead","result","checkGameFinished","isFinished","message","checkHunter","isHunter","deadWolf","gods","villagers","deadGods","deadVillagers","handleShoot","isShoot","initSelect","isNextDay","paddingTop","marginLeft","disabled","tmpArray","wolfsInfo","wolfs","filter","getWolfs","find","villagesInfo","villages","getVillages","window","location","reload","handleCloseFight","paddingLeft","paddingRight","height","toolbar","mixins","drawer","drawerPaper","flexGrow","menuButton","marginRight","title","fullList","Home","setList","isOpenDrawer","setIsOpenDrawer","i18n","toggleDrawer","event","type","getRaddomIndex","Math","floor","random","Container","maxWidth","AppBar","position","Toolbar","IconButton","edge","aria-label","Select","native","changeLanguage","inputProps","name","Drawer","anchor","onClose","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","len","itm","arr1","arr2","concat","createArray","i","use","initReactI18next","init","resources","translations","enUS","zhTW","lng","localStorage","getItem","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.3d24ffe8.chunk.js","sourcesContent":["export const WOLF = {\n  key: 'wolf',\n  isGood: false,\n  isGod: false,\n  src: 'wolf.jpg',\n};\n\nexport const PREDICTOR = {\n  key: 'predictor',\n  isGood: true,\n  isGod: true,\n  src: 'predictor.jpg',\n};\n\nexport const WITCH = {\n  key: 'witch',\n  isGood: true,\n  isGod: true,\n  src: 'witch.jpg',\n};\n\nexport const HUNTER = {\n  key: 'hunter',\n  isGood: true,\n  isGod: true,\n  src: 'hunter.jpg',\n};\n\nexport const KNIGHT = {\n  key: 'knight',\n  isGood: true,\n  isGod: true,\n  src: 'knight.jpg',\n};\n\nexport const VILLAGER = {\n  key: 'villager',\n  isGood: true,\n  isGod: false,\n  src: 'villager.jpg',\n};\n","import React, {\n  // useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\n// import Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst Setting = (props) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const {\n    playerNumber,\n    setPlayerNumber,\n    wolfNumber,\n    setWolfNumber,\n    isUsePredictor,\n    setIsUsePredictor,\n    isUseWitch,\n    setIsUseWitch,\n    isUseHunter,\n    setIsUseHunter,\n    handleStart,\n    isKillKind,\n    setIsKillKind,\n    isUseKnight,\n    setIsUseKnight,\n  } = props;\n\n  // console.log('wolfNumber', wolfNumber);\n\n  return (\n    <>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('player_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={playerNumber}\n            onChange={(e) => {setPlayerNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={6} control={<Radio />} label=\"6\" />\n            <FormControlLabel value={7} control={<Radio />} label=\"7\" />\n            <FormControlLabel value={8} control={<Radio />} label=\"8\" />\n            <FormControlLabel value={9} control={<Radio />} label=\"9\" />\n            <FormControlLabel value={10} control={<Radio />} label=\"10\" />\n            <FormControlLabel value={11} control={<Radio />} label=\"11\" />\n            <FormControlLabel value={12} control={<Radio />} label=\"12\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('wolf_number')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={wolfNumber}\n            onChange={(e) => {setWolfNumber(e.target.value * 1)}}\n          >\n            <FormControlLabel value={1} control={<Radio />} label=\"1\" />\n            <FormControlLabel value={2} control={<Radio />} label=\"2\" />\n            <FormControlLabel value={3} control={<Radio />} label=\"3\" />\n            <FormControlLabel value={4} control={<Radio />} label=\"4\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('is_kill_kind')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isKillKind}\n            onChange={(e) => {setIsKillKind((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Divider />\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('predictor')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUsePredictor}\n            onChange={(e) => {setIsUsePredictor((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('witch')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseWitch}\n            onChange={(e) => {setIsUseWitch((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('hunter')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseHunter}\n            onChange={(e) => {setIsUseHunter((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">{t('knight')}</FormLabel>\n          <RadioGroup\n            row\n            className={classes.group}\n            value={isUseKnight}\n            onChange={(e) => {setIsUseKnight((e.target.value === 'true'))}}\n          >\n            <FormControlLabel value={true} control={<Radio />} label={t('yes')} />\n            <FormControlLabel value={false} control={<Radio />} label={t('no')} />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Divider />\n      <Button style={{ marginTop: '20px', marginBottom: '20px' }} onClick={handleStart} variant=\"contained\" color=\"secondary\">{t('finished')}</Button>\n    </>\n  );\n};\n\nexport default Setting;\n","/* eslint-disable jsx-a11y/alt-text */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport wolf from '../../static/images/wolf.jpg';\nimport predictor from '../../static/images/predictor.jpg';\nimport witch from '../../static/images/witch.jpg';\nimport hunter from '../../static/images/hunter.jpg';\nimport knight from '../../static/images/knight.jpg';\nimport villager from '../../static/images/villager.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: '10px',\n  },\n  isChecked: {\n    color: 'red',\n  },\n  role: {\n    textAlign: 'center',\n    fontSize: '30px',\n  },\n}));\n\nconst RoleCard = (props) => {\n  const { sit } = props;\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [isWatch, setIsWatch] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (!isWatch) {\n      setIsOpen(true);\n    }\n  }\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsWatch(true);\n  }\n\n  let src = null;\n  switch(sit.role.key) {\n    case 'wolf':\n      src = wolf;\n      break;\n    case 'predictor':\n      src = predictor;\n      break;\n    case 'witch':\n      src = witch;\n      break;\n    case 'hunter':\n      src = hunter;\n      break;\n    case 'knight':\n      src = knight;\n      break;\n    case 'villager':\n      src = villager;\n      break;\n    default:\n      break;\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} onClick={handleClick}>\n        <Typography variant=\"h5\" component=\"h3\">\n          { \n            t('sit_number', { index: sit.index }) \n            // sit.role.key\n          }\n        </Typography>\n        <Typography component=\"p\">\n          { (isWatch) ? (\n            <span className={classes.isChecked}>\n              { t('is_checked') }\n            </span>\n          ) : t('check_role') }\n        </Typography>\n      </Paper>\n\n      <Dialog\n        fullWidth\n        open={isOpen}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('your_role')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <div className={classes.role}>\n              { t(sit.role.key) }\n            </div>\n            <img src={src} width=\"100%\" />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CheckRole = (props) => {\n  const { t } = useTranslation();\n  const { list, handleStartGame } = props;\n  // const classes = useStyles();\n\n  return (\n    <> \n      {\n        list.map((sit) => {\n          return (\n            <div>\n              <RoleCard\n                sit={sit}\n              />\n            </div>\n          )\n        })\n      }\n      <Divider style={{ marginTop: '20px' }} />\n      <Button style={{ marginTop: '20px', marginBottom: '20px' }} onClick={handleStartGame} variant=\"contained\" color=\"secondary\">{t('start')}</Button>\n    </>\n  );\n};\n\nexport default CheckRole;\n","import React, {\n  // useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport Sound from 'react-sound';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n// import AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  // green,\n  pink,\n} from '@material-ui/core/colors';\nimport Divider from '@material-ui/core/Divider';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  KNIGHT,\n  VILLAGER,\n} from '../../constants/Role';\n\nimport step1 from '../../static/audio/step_1.mp3'; // 天黑請閉眼\nimport step2 from '../../static/audio/step_2.mp3'; // 狼人現身請睜眼\nimport step3 from '../../static/audio/step_3.mp3'; // 狼人確認彼此的身份\nimport step4 from '../../static/audio/step_4.mp3'; // 狼人請殺人\nimport step5 from '../../static/audio/step_5.mp3'; // 狼人請閉眼\nimport step6 from '../../static/audio/step_6.mp3'; // 女巫請睜眼\nimport step7 from '../../static/audio/step_7.mp3'; // 這位玩家被殺死了\nimport step8 from '../../static/audio/step_8.mp3'; // 你要使用解藥嗎\nimport step9 from '../../static/audio/step_9.mp3'; // 你要使用毒藥嗎\nimport step10 from '../../static/audio/step_10.mp3'; // 你要毒誰呢\nimport step11 from '../../static/audio/step_11.mp3'; // 女巫請閉眼\nimport step12 from '../../static/audio/step_12.mp3'; // 預言家請睜眼\nimport step13 from '../../static/audio/step_13.mp3'; // 你要查驗的對象是\nimport step14 from '../../static/audio/step_14.mp3'; // 他的身份是\nimport step15 from '../../static/audio/step_15.mp3'; // 預言家請閉眼\nimport step16 from '../../static/audio/step_16.mp3'; // 獵人請睜眼\nimport step17 from '../../static/audio/step_17.mp3'; // 獵人請閉眼\nimport step18 from '../../static/audio/step_18.mp3'; // 騎士請睜眼\nimport step19 from '../../static/audio/step_19.mp3'; // 騎士請閉眼\nimport step20 from '../../static/audio/step_20.mp3'; // 天亮請睜眼\n\n/**\n * IS_DEBUG\n * 是否開啟 console.log 資訊\n * \n */\nconst IS_DEBUG = true;\n\n/**\n * DAY_TYPE\n * 白天, 晚上\n * \n */\nconst DAY_TYPE = {\n  DAY: 'DAY',\n  NIGHT: 'NIGHT',\n}\n\nconst AudioSound = React.memo((props) => {\n  const {\n    url,\n    onFinishedPlaying,\n  } = props;\n\n  return (\n    <Sound\n      url={url}\n      playStatus={Sound.status.PLAYING}\n      // onLoading={this.handleSongLoading}\n      // onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={onFinishedPlaying}\n    />\n  );\n});\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#4DB6AC',\n  },\n  pinkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: pink[500],\n  },\n  dead: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#9E9E9E',\n  },\n  good: {\n    fontSize: '30px',\n  },\n  bad: {\n    fontSize: '30px',\n    color: 'red',\n  },\n  // greenAvatar: {\n  //   margin: 10,\n  //   color: '#fff',\n  //   backgroundColor: green[500],\n  // },\n});\n\nconst Game = (props) => {\n  const classes = useStyles();\n  const {\n    list,\n    isUsePredictor,\n    isUseWitch,\n    isUseHunter,\n    playerNumber,\n    wolfNumber,\n    isKillKind,\n    isUseKnight,\n  } = props;\n\n  if (IS_DEBUG) {\n    // console.log('list', list);\n    console.log('===== Role List =====');\n    list.forEach(tmp => { console.log(`${tmp.index} - ${tmp.role.key}`); });\n    console.log('=====================');\n  }\n\n  const { t } = useTranslation();\n  const [step, setStep] = useState(1);\n  const [isOpenWolfKill, setIsOpenWolfKill] = useState(false);\n  const [deadNumber, setDeadNumber] = useState(null); // 狼人晚上殺人的\n  const [witchDeadNumber, setWitchDeadNumber] = useState(null); // 女巫毒的角色\n  const [isOpenWitchSave, setIsOpenWitchSave] = useState(false); // 解藥詢問 \b視窗\n  const [isOpenWitchPoison, setIsOpenWitchPoison] = useState(false); // 毒藥詢問 視窗\n  const [isUse, setIsUse] = useState(false); // 女巫一晚只能使用一種藥\n  const [isUseSave, setIsUseSave] = useState(false); // 是否已使用解藥\n  const [isUsePoison, setIsUsePoison] = useState(false); // 是否已使用毒藥\n  const [isOpenPredictor, setIsOpenPredictor] = useState(false); // 預言家選擇身份 視窗\n  const [predictorSelect, setPredictorSelect] = useState(null); // 預言家選擇查驗的身份\n  const [isOpenRole, setIsOpenRols] = useState(false); // 預言家查看身份 視窗\n  const [isOpenResult, setIsOpenResult] = useState(false); // 晚上結果\n  const [day, setDay] = useState(1); // 第幾天\n  const [dayType, setDayType] = useState(DAY_TYPE.NIGHT); // 白天晚上\n  const [messages, setMessages] = useState([]); // 遊戲訊息\n  const [isOpenVote, setIsOpenVote] = useState(false); // 投票視窗\n  const [selectVote, setSelectVote] = useState(null); // 選擇投票的人\n  const [dead, setDead] = useState([]); // 死亡的人\n  const [isOpenGameResult, setIsOpenGameResult] = useState(false); // 是否開啟遊戲結束畫面\n  const [gameResultMessage, setGameResultMessage] = useState(''); // 遊戲結束訊息\n  const [isUseHunterSkill, setIsUseHunterSkill] = useState(false); // 獵人是否已使用技能\n  const [hunterSelect, setHunterSelect] = useState(null); // 獵人選擇\n  const [isOpenHunter, setIsOpenHunter] = useState(false); // 是否開啟獵人視窗\n  const [isKillByWitch, setIsKillByWitch] = useState(false); // 獵人是否被毒殺\n  const [isOpenHunterShoot, setIsOpenHunterShoot] = useState(false); // 是否開啟獵人槍殺訊息\n  const [isPredictorDead, setIsPredictorDead] = useState(false); // 預言家是否死亡\n  const [isWitchDead, setIsWitchDead] = useState(false); // 女巫是否死亡\n  const [isHunterDead, setIsHunterDead] = useState(false); // 獵人是否死亡\n  const [isOpenLastWords, setIsOpenLastWords] = useState(false); // 遺言視窗\n  const [isKnightDead, setIsKnightDead] = useState(false); //  騎士是否死亡\n\n  const [isUseKnightSkill, setIsUseKnightSkill] = useState(false); // 騎士是否已實用技能\n  const [isOpenKnight, setIsOpenKnight] = useState(false); // 開啟騎士選擇對象視窗\n  const [knightSelect, setKnightSelect] = useState(null); // 騎士選擇\n  const [isOpenKnightResult, setIsOpenKnightResult] = useState(false); // 騎士驗人結果\n\n  // console.log('isKillByWitch', isKillByWitch);\n  // console.log('isUsePoison', isUsePoison);\n\n  const handleSongFinishedPlaying = useCallback(() => {\n    // setStep(step + 1);\n    switch(step) {\n      case 1:\n        setStep(2);\n        break;\n      case 2:\n        setStep(3);\n        break;\n      case 3:\n        setStep(4);\n        break;\n      case 4:\n        // setStep(2);\n        setIsOpenWolfKill(true);\n        break;\n      case 5:\n        // 是否有使用女巫\n        if (isUseWitch) {\n          setStep(6);\n        } else {\n          // 是否使用預言家\n          if (isUsePredictor) {\n            setStep(12);\n          } else {\n            if (isUseHunter) {\n              // 是否使用獵人\n              setStep(16);\n            } else {\n              if (isUseKnight) {\n                setStep(18);\n              } else {\n                setStep(20);\n              }\n            }\n          }\n        }\n        break;\n      case 6:\n        setStep(7);\n        break;\n      case 7:\n        if (!isWitchDead) {\n          setIsOpenWitchSave(true);\n        }\n        setStep(8);\n        break;\n      case 8:\n        if (isWitchDead) {\n          setTimeout(() => {\n            setStep(9)\n          }, 2000);\n        }\n        break;\n      case 9:\n        if (!isWitchDead) {\n          setIsOpenWitchPoison(true);\n        }\n        setStep(10);\n        break;\n      case 10:\n        if (isWitchDead) {\n          setTimeout(() => {\n            setStep(11)\n          }, 2000);\n        }\n        break;\n      case 11:\n        // 是否使用預言家\n        if (isUsePredictor) {\n          setStep(12);\n        } else {\n          if (isUseHunter) {\n            // 是否使用獵人\n            setStep(16);\n          } else {\n            if (isUseKnight) {\n              setStep(18);\n            } else {\n              setStep(20);\n            }\n          }\n        }\n        // setStep(12);\n        break;\n      case 12:\n        setStep(13);\n        break;\n      case 13:\n        if (!isPredictorDead) {\n          setIsOpenPredictor(true);\n        } else {\n          setTimeout(() => {\n            setStep(14)\n          }, 2000);\n        }\n        break;\n      case 14:\n        // setStep(15);\n        if (isPredictorDead) {\n          setTimeout(() => {\n            setStep(15)\n          }, 2000);\n        }\n        break;\n      case 15:\n        if (isUseHunter) {\n          // 是否使用獵人\n          setStep(16);\n        } else {\n          if (isUseKnight) {\n            setStep(18);\n          } else {\n            setStep(20);\n          }\n        }\n        break;\n      case 16:\n        if (!isHunterDead) {\n          setIsOpenHunterShoot(true);\n        } else {\n          setTimeout(() => {\n            setStep(17)\n          }, 2000);\n        }\n        break;\n      case 17:\n        if (isUseKnight) {\n          setStep(18);\n        } else {\n          setStep(20);\n        }\n        break;\n      case 18:\n        setStep(19);\n        break;\n      case 19:\n        setStep(20);\n        break;\n      case 20:\n        setIsOpenResult(true);\n        break;\n      default:\n    }\n  }, [step]);\n\n  /**\n   * handleCloseWolfKill\n   * 狼人殺人視窗\n   * \n   */\n  const handleCloseWolfKill = () => {\n    setIsOpenWolfKill(false);\n    setStep(5);\n  }\n\n  /**\n   * handleWitchSave\n   * 女巫是否使用解藥\n   * \n   * @param {bool} isSave - true: 使用, false: 不使用\n   */\n  const handleWitchSave = (isSave) => {\n    setIsOpenWitchSave(false);\n    setStep(9);\n\n    if (isSave) {\n      // 使用解藥\n      setTimeout(() => {\n        setIsUse(true);\n        setIsUseSave(true);\n        setDeadNumber(null);\n      }, 500);\n    }\n  }\n\n  /**\n   * handleWitchPoison\n   * 關閉女巫是否使用毒藥\n   * \n   * @param {bool} isPoison - true: 使用, false: 不使用\n   */\n  const handleWitchPoison = (isPoison) => {\n    setIsOpenWitchPoison(false);\n    setStep(11);\n\n    if (!isUsePoison) {\n      setTimeout(() => {\n        setIsUsePoison(isPoison);\n      }, 500);\n    }\n\n    if (!isPoison) {\n      setWitchDeadNumber(null);\n    } else {\n      // 使用毒藥, 判斷是不是毒到獵人\n      if (IS_DEBUG) {\n        console.log('witchDeadNumber.role.key', witchDeadNumber.role.key);\n      }\n      if (witchDeadNumber !== null && witchDeadNumber.role.key === HUNTER.key) {\n        setIsKillByWitch(true);\n      }\n    }\n  }\n\n  /**\n   * handlePredictor\n   * 關閉預言家詢問視窗\n   * \n   */\n  const handlePredictor = () => {\n    setIsOpenPredictor(false);\n    setIsOpenRols(true);\n    setStep(14);\n  }\n\n  /**\n   * handleCloseCheckRole\n   * 關閉預言家查驗身份結果\n   * \n   */\n  const handleCloseCheckRole = () => {\n    setIsOpenRols(false);\n    setStep(15);\n  }\n\n  /**\n   * audioSrc\n   * 取得音效檔\n   * \n   */\n  const audioSrc = useMemo(() => {\n    let returnSrc = null;\n\n    switch(step) {\n      case 1:\n        returnSrc = step1;\n        break;\n      case 2:\n        returnSrc = step2;\n        break;\n      case 3:\n        returnSrc = step3;\n        break;\n      case 4:\n        returnSrc = step4;\n        break;\n      case 5:\n        returnSrc = step5;\n        break;\n      case 6:\n        returnSrc = step6;\n        break;\n      case 7:\n        returnSrc = step7;\n        break;\n      case 8:\n        returnSrc = step8;\n        break;\n      case 9:\n        returnSrc = step9;\n        break;\n      case 10:\n        returnSrc = step10;\n        break;\n      case 11:\n        returnSrc = step11;\n        break;\n      case 12:\n        returnSrc = step12;\n        break;\n      case 13:\n        returnSrc = step13;\n        break;\n      case 14:\n        returnSrc = step14;\n        break;\n      case 15:\n        returnSrc = step15;\n        break;\n      case 16:\n        returnSrc = step16;\n        break;\n      case 17:\n        returnSrc = step17;\n        break;\n      case 18:\n        returnSrc = step18;\n        break;\n      case 19:\n          returnSrc = step19;\n          break;\n      case 20:\n        returnSrc = step20;\n        break;\n      default:\n        break;\n    }\n\n    return returnSrc;\n  }, [step]);\n\n  /**\n   * generateResultMessage\n   * 組出當晚死亡訊息\n   * \n   */\n  const generateResultMessage = () => {\n    let returnMessage = null;\n    if (deadNumber === null && witchDeadNumber === null) {\n      returnMessage = t('christmas_eve');\n      return returnMessage;\n    } else {\n      let tmp = [];\n      if (deadNumber !== null) {\n        tmp.push(deadNumber.index);\n      }\n      if (witchDeadNumber !== null && deadNumber !== null && witchDeadNumber.index !== deadNumber.index) {\n        tmp.push(witchDeadNumber.index);\n      }\n\n      // 重新排序\n      tmp.sort((a, b) => {\n        return a - b;\n      });\n      \n      // 每晚最多只會有兩位玩家死掉\n      tmp.forEach((number, index) => {\n        returnMessage += number;\n        if (tmp.length === 2 && index !== tmp.length - 1) {\n          returnMessage += ', ';\n        }\n      });\n    }\n\n    return t('dead_player', { returnMessage });\n  }\n\n  /**\n   * handleCloseResult\n   * 關閉晚上結果\n   * 判斷是否結束遊戲\n   * 判斷是否有獵人\n   * \n   */\n  const handleCloseResult = () => {\n    // 設定成白天\n    // setDayType(DAY_TYPE.DAY);\n\n    // 關閉晚上結果\n    setIsOpenResult(false);\n    \n    // 更新遊戲訊息\n    setMessages([\n      ...messages,\n      `${t('n_night', { day })}${generateResultMessage()}`\n    ]);\n\n    const tmpArray = [];\n\n    // 狼人殺死的人\n    if (deadNumber !== null) {\n      tmpArray.push(deadNumber);\n      // setDead([\n      //   ...dead,\n      //   deadNumber,\n      // ]);\n    }\n\n    // 女巫毒的人\n    if (isUseWitch && witchDeadNumber !== null && deadNumber.index !== witchDeadNumber.index) {\n      tmpArray.push(witchDeadNumber);\n    }\n\n    // 更新已死亡的人\n    const tmpDead = [\n      ...dead,\n      ...tmpArray,\n    ];\n    if (tmpArray.length > 0) {\n      setDead(tmpDead);\n    }\n\n    const result = checkGameFinished(tmpDead);\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      // 檢查獵人是否死亡\n      const isHunter = checkHunter(tmpDead);\n\n      if (isHunter) {\n        setIsOpenHunter(true);\n      } else {\n        setTimeout(() => {\n          initSelect(false);\n        }, 500);\n      }\n    }\n  }\n\n  /**\n   * generateSelectPicker\n   * 組出選擇頭像 component\n   * \n   * @param {string} role - 角色\n   */\n  const generateSelectPicker = (role) => {\n    let returnComp = null;\n    let selectValue = null;\n    let selectFunc = null;\n\n    switch(role) {\n      // 狼人\n      case WOLF.key:\n        selectValue = deadNumber;\n        selectFunc = setDeadNumber;\n        break;\n      // 女巫\n      case WITCH.key:\n        selectValue = witchDeadNumber;\n        selectFunc = setWitchDeadNumber;\n        break;\n      // 預言家\n      case PREDICTOR.key:\n        selectValue = predictorSelect;\n        selectFunc = setPredictorSelect;\n        break;\n      // 獵人\n      case HUNTER.key:\n        selectValue = hunterSelect;\n        selectFunc = setHunterSelect;\n        break;\n      // 騎士\n      case KNIGHT.key:\n        selectValue = knightSelect;\n        selectFunc = setKnightSelect;\n        break;\n      // 一般投票\n      default:\n        selectValue = selectVote;\n        selectFunc = setSelectVote;\n    }\n\n    returnComp = (\n      <Grid container justify=\"center\" alignItems=\"center\">\n        {\n          <Grid container justify=\"center\" alignItems=\"center\">\n            {\n              list.map(sit => {\n                let className = classes.avatar;\n\n                if (selectValue) {\n                  if (selectValue.index === sit.index) {\n                    className = classes.pinkAvatar;\n                  };\n                }\n\n                // 判斷該玩家是否死亡\n                const idDead = dead.some(tmp => tmp.index === sit.index);\n\n                return (\n                  <>\n                    {\n                      (idDead) ? (\n                        <Avatar className={classes.dead}>\n                          { sit.index }\n                        </Avatar>\n                      ) : (\n                        <Avatar className={className} onClick={() => {selectFunc(sit)}}>\n                          { sit.index }\n                        </Avatar>\n                      )\n                    }\n                  </>\n                );\n              })\n            }\n          </Grid>\n        }\n      </Grid>\n    );\n\n    return returnComp;\n  }\n\n  /**\n   * handleVote\n   * 投票結果\n   * \n   * @param {bool} isVote - 是否有投票, false: 放棄\n   */\n  const handleVote = (isVote) => {\n    setDayType(DAY_TYPE.DAY);\n\n    // 關閉投票視窗\n    setIsOpenVote(false);\n\n    if (isVote) {\n      const tmpDead = [\n        ...dead,\n        selectVote,\n      ]\n      if (isVote) {\n        setDead(tmpDead);\n  \n        setMessages([\n          ...messages,\n          `${t('n_day', { day })}${selectVote.index}`,\n        ]);\n      } else {\n        setMessages([\n          ...messages,\n          `${t('n_day', { day })}${t('give_up_vote')}`,\n        ]);\n      }\n  \n      const result = checkGameFinished(tmpDead);\n      if (result.isFinished) {\n        setIsOpenGameResult(true);\n        setGameResultMessage(result.message);\n      } else {\n        // 檢查獵人是否死亡\n        const isHunter = checkHunter(tmpDead);\n  \n        if (isHunter) {\n          setIsOpenHunter(true);\n        } else {\n          // initSelect(true);\n          setIsOpenLastWords(true);\n        }\n      }\n    } else {\n      // initSelect(true);\n      setIsOpenLastWords(true);\n    }\n  }\n\n  /**\n   * checkHunter\n   * 檢查獵人是否死亡\n   * \n   * @param {array} dead - 死掉的人\n   */\n  const checkHunter = (dead) => {\n    let isHunter = false;\n\n    // 有使用獵人並未發動技能\n    // console.log('isUseHunter', isUseHunter);\n    // console.log('isUseHunterSkill', isUseHunterSkill);\n    // console.log('isKillByWitch', isKillByWitch);\n    if (isUseHunter && !isUseHunterSkill && !isKillByWitch && !isHunterDead) {\n      isHunter = dead.some(tmp => tmp.role.key === HUNTER.key);\n    }\n    // console.log('isHunter', isHunter);\n    return isHunter;\n  }\n\n  /**\n   * checkGameFinished\n   * 檢查遊戲是否結束\n   * \n   * @param {array} - 死亡的人\n   */\n  const checkGameFinished = (dead) => {\n    if (isUsePredictor) {\n      if (dead.some(tmp => tmp.role.key === PREDICTOR.key)) {\n        setIsPredictorDead(true);\n      }\n    }\n\n    if (isUseWitch) {\n      if (dead.some(tmp => tmp.role.key === WITCH.key)) {\n        setIsWitchDead(true);\n      }\n    }\n\n    if (isUseHunter) {\n      if (dead.some(tmp => tmp.role.key === HUNTER.key)) {\n        setIsHunterDead(true);\n      }\n    }\n\n    if (isUseKnight) {\n      if (dead.some(tmp => tmp.role.key === KNIGHT.key)) {\n        setIsKnightDead(true);\n      }\n    }\n\n    if (IS_DEBUG) {\n      console.log('dead', dead);\n      console.log('wolfNumber', wolfNumber);\n    }\n\n    // 判斷好人是否獲勝\n    let deadWolf = 0;\n    dead.forEach((dead) => {\n      if (dead.role.key === WOLF.key) {\n        deadWolf += 1;\n      }\n    });\n\n    if (IS_DEBUG) {\n      console.log('deadWolf', deadWolf);\n    }\n\n    if (deadWolf === wolfNumber) {\n      return {\n        isFinished: true,\n        message: t('good_win'),\n      }\n    }\n\n    // 判斷壞人是否獲勝\n    if (IS_DEBUG) {\n      console.log('playerNumber', playerNumber);\n    }\n\n    if ((playerNumber - dead.length) === (wolfNumber - deadWolf)) {\n      return {\n        isFinished: true,\n        message: t('bad_win'),\n      }\n    }\n\n    // if ((playerNumber - dead.length) <= (wolfNumber - deadWolf) * 2) {\n    //   return {\n    //     isFinished: true,\n    //     message: t('bad_win'),\n    //   }\n    // }\n\n    // 判斷是否有屠邊局, 壞人是否屠邊成功\n    if (IS_DEBUG) {\n      console.log('isKillKind', isKillKind);\n    }\n    if (isKillKind) {\n      let gods = 0; // 神\n      let villagers = 0; // 民\n      let deadGods = 0; // 死掉的神\n      let deadVillagers = 0; // 死掉的民\n\n      // 玩家\n      list.forEach((tmp) => {\n        if (tmp.role.isGood) {\n          if (tmp.role.isGod) {\n            gods += 1;\n          } else {\n            villagers += 1;\n          }\n        }\n      });\n\n      // 死掉的人\n      dead.forEach((tmp) => {\n        if (tmp.role.isGood) {\n          if (tmp.role.isGod) {\n            deadGods += 1;\n          } else {\n            deadVillagers += 1;\n          }\n        }\n      });\n\n      if (IS_DEBUG) {\n        console.log('gods', gods);\n        console.log('villagers', villagers);\n        console.log('deadGods', deadGods);\n        console.log('deadVillagers', deadVillagers);\n      }\n\n      if ((deadGods !== 0 && gods === deadGods) || (deadVillagers !== 0 && villagers === deadVillagers)) {\n        return {\n          isFinished: true,\n          message: t('bad_win_kind'),\n        }\n      }\n    }\n\n    return {\n      isFinished: false,\n      message: '',\n    }\n  }\n\n  /**\n   * handleShoot\n   * 獵人射殺\n   * \n   * @param {bool} isShoot - 是否射殺\n   */\n  const handleShoot = (isShoot) => {\n    setIsOpenHunter(false);\n    setIsUseHunterSkill(true);\n    // console.log('isShoot', isShoot);\n    if (isShoot) {\n      const tmpDead = [\n        ...dead,\n        hunterSelect,\n      ];\n\n      setDead(tmpDead);\n      setMessages([\n        ...messages,\n        t('hunter_shoot_player', { index: hunterSelect.index })\n      ]);\n      const result = checkGameFinished(tmpDead);\n\n      if (result.isFinished) {\n        setIsOpenGameResult(true);\n        setGameResultMessage(result.message);\n      } else {\n        // console.log('11', dayType);\n        if (dayType === DAY_TYPE.DAY) {\n          initSelect(true);\n        } else {\n          initSelect(false);\n        }\n      }\n    } else {\n      // console.log('22', dayType);\n      if (dayType === DAY_TYPE.DAY) {\n        initSelect(true);\n      } else {\n        initSelect(false);\n      }\n    }\n  }\n\n  /**\n   * initSelect\n   * 初始化選擇\n   * \n   * @param {bool} isNextDay - 是否進入下一天\n   */\n  const initSelect = (isNextDay) => {\n    // 清空全部選擇\n    setDeadNumber(null); // 狼人\n    setWitchDeadNumber(null); // 女巫毒殺\n    setPredictorSelect(null); // 預言家選擇\n    setSelectVote(null); // 投票選擇\n    setIsUse(false);\n    setHunterSelect(null); // 獵人選擇\n    setKnightSelect(null); // 騎士選擇\n\n    if (isNextDay) {\n      // 進入下一天\n      setDay(day + 1);\n\n      // 進入晚上\n      setDayType(DAY_TYPE.NIGHT);\n\n      // 進入 Step 1\n      setStep(1);\n    } else {\n      setDayType(DAY_TYPE.DAY);\n    }\n  }\n\n  /**\n   * handleGameOver\n   * 遊戲結束\n   * \n   */\n  const handleGameOver = () => {\n    // window.location.href = '/';\n    window.location.reload();\n  }\n\n  /**\n   * handleCloseHunter\n   * 關閉獵人視窗\n   * \n   */\n  const handleCloseHunter = () => {\n    setIsOpenHunterShoot(false);\n    setStep(17);\n  }\n\n  const getWolfs = () => {\n    //list.filter(role => role.role.key === WOLF.key)\n    let wolfsInfo = '';\n    const wolfs = list.filter(role => role.role.key === WOLF.key);\n    wolfs.forEach((tmp, index) => {\n      wolfsInfo += tmp.index;\n      if (wolfs.length - 1 !== index) {\n        wolfsInfo += ', ';\n      }\n    });\n    return wolfsInfo;\n  };\n\n  const getVillages = () => {\n    let villagesInfo = '';\n    const villages = list.filter(role => role.role.key === VILLAGER.key);\n    villages.forEach((tmp, index) => {\n      villagesInfo += tmp.index;\n      if (villages.length - 1 !== index) {\n        villagesInfo += ', ';\n      }\n    });\n    return villagesInfo;\n  };\n\n  /**\n   * handleCloseLastWords\n   * 關閉遺言視窗\n   * \n   */\n  const handleCloseLastWords = () => {\n    setIsOpenLastWords(false);\n    initSelect(true);\n  };\n\n  /**\n   * handleFight\n   * 決鬥結果\n   * \n   */\n  const handleFight = () => {\n    setIsOpenKnight(false);\n    setIsOpenKnightResult(true);\n  }\n\n  /**\n   * handleCloseFight\n   * 關閉決鬥結果\n   * \n   */\n  const handleCloseFight = () => {\n    setIsUseKnightSkill(true);\n    setIsOpenKnightResult(false);\n    let tmpDead = [];\n\n    if (knightSelect !== null && knightSelect.role.key === WOLF.key) {\n      tmpDead = [\n        ...dead,\n        knightSelect,\n      ];\n\n      setMessages([\n        ...messages,\n        t('no_is_wolf', { index: knightSelect.index })\n      ]);\n    } else {\n      tmpDead = [\n        ...dead,\n        list.find(tmp => tmp.role.key === KNIGHT.key),\n      ];\n\n      setMessages([\n        ...messages,\n        t('no_is_not_wolf', { index: knightSelect.index })\n      ]);\n    }\n\n    if (IS_DEBUG) {\n      console.log('handleCloseFight tmpDead', tmpDead);\n    }\n\n    setDead(tmpDead);\n    const result = checkGameFinished(tmpDead);\n\n    if (result.isFinished) {\n      setIsOpenGameResult(true);\n      setGameResultMessage(result.message);\n    } else {\n      initSelect(true);\n    }\n  }\n\n  /**\n   * React - render\n   * \n   */\n  return (\n    <>\n      <div style={{ paddingTop: '20px' }}>\n        { t('gaming') }\n      </div>\n\n      <div style={{ paddingTop: '20px' }}>\n        { t('dead_message') }\n      </div>\n\n      <div style={{ textAlign: 'left', marginLeft: '10%' }}>\n        <ul>\n          {\n            messages.map(message => <li>{ message }</li>)\n          }\n        </ul>\n      </div>\n\n      <div>\n          {\n            (dayType === DAY_TYPE.DAY) && (\n              <>\n                <Divider style={{ marginBottom: '20px' }} />\n                <Button\n                  disabled={(!isUseKnight || isUseKnightSkill)}\n                  onClick={() => (setIsOpenKnight(true))}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  { t('knight_fight') }\n                </Button>\n                <Divider style={{ marginTop: '20px', marginBottom: '20px' }} />\n                <Button onClick={() => (setIsOpenVote(true))} variant=\"contained\" color=\"secondary\">{ t('start_vote') }</Button>\n              </>\n            )\n          }\n      </div>\n\n      <AudioSound\n        url={audioSrc}\n        onFinishedPlaying={handleSongFinishedPlaying}\n      />\n\n      { /* Wolf Kill Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWolfKill}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('wolf_kill')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(WOLF.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseWolfKill} color=\"primary\" disabled={deadNumber === null} variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Wolf Kill End */ }\n\n      { /* Witch Save Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenWitchSave}\n        // onClose={handleCloseWolfKill}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_save')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isUseSave) ? (\n                <span className={classes.good}>{t('save_used')}</span>\n              ) : (\n                <span className={classes.good}>\n                  { t('dead_person', { index: (deadNumber) ? deadNumber.index : null }) }\n                </span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchSave(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button onClick={() => {handleWitchSave(true)}} color=\"primary\" variant=\"contained\" disabled={isUseSave}>\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Witch Save End */ }\n\n      {/* Witch Poison Start */}\n      <Dialog\n        fullWidth\n        open={isOpenWitchPoison}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('witch_poison')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { \n              (isUsePoison) ? (\n                // 你已使用毒藥\n                <span className={classes.good}>{t('poison_used')}</span>\n              ) : (\n                (isUse) ? (\n                  // 此回合已使用解藥, 不能使用毒藥\n                  <span className={classes.good}>{t('is_use_save')}</span>\n                ) : (\n                  generateSelectPicker(WITCH.key)\n                )\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleWitchPoison(false)}} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button disabled={(isUse || witchDeadNumber === null || isUsePoison)} onClick={() => {handleWitchPoison(true)}} color=\"primary\" variant=\"contained\">\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Witch Poison End */}\n\n      {/* Predictor Start */}\n      <Dialog\n        fullWidth\n        open={isOpenPredictor}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('predictor_select')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker(PREDICTOR.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={predictorSelect === null} onClick={() => {handlePredictor()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Predictor End */}\n\n      {/* Check Role Start */}\n      <Dialog\n        fullWidth\n        open={isOpenRole}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('role_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (predictorSelect && predictorSelect.role.key === 'wolf') ? (\n                <span className={classes.bad}>{t('is_wolf')}</span>\n              ) : (\n                <span className={classes.good}>{t('not_wolf')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseCheckRole()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Check Role End */}\n\n      {/* Result Start*/}\n      <Dialog\n        fullWidth\n        open={isOpenResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('yesterday_dead')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span className={classes.bad}>\n              { generateResultMessage() }\n            </span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseResult} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Result End*/}\n\n      { /* Vote Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenVote}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('start_vote')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { generateSelectPicker('') }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleVote(false); }} color=\"primary\" variant=\"outlined\">\n            { t('give_up') }\n            <CloseIcon />\n          </Button>\n          <Button disabled={selectVote === null} onClick={() => { handleVote(true); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Vote End */ }\n\n      { /* Game Result Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenGameResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('game_over')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            { \n              <span className={classes.good}>{gameResultMessage}</span>\n            }\n            <ul>\n              <li>{`${t('wolf')}: ${getWolfs()}`}</li>\n              {\n                (isUsePredictor) && (<li>{`${t('predictor')}: ${list.find(role => role.role.key === PREDICTOR.key).index}`}</li>)\n              }\n              {\n                (isUseWitch) && (<li>{`${t('witch')}: ${list.find(role => role.role.key === WITCH.key).index}`}</li>)\n              }\n              {\n                (isUseHunter) && (<li>{`${t('hunter')}: ${list.find(role => role.role.key === HUNTER.key).index}`}</li>)\n              }\n              {\n                (isUseKnight) && (<li>{`${t('knight')}: ${list.find(role => role.role.key === KNIGHT.key).index}`}</li>)\n              }\n              <li>{`${t('villager')}: ${getVillages()}`}</li>\n            </ul>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleGameOver(); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Game Result End */ }\n\n      { /* Hunter Select Start */ }\n      <Dialog\n        fullWidth\n        open={isOpenHunter}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('huner_shoot')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          { generateSelectPicker(HUNTER.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleShoot(false); }} color=\"primary\" variant=\"outlined\">\n            { t('no') }\n            <CloseIcon />\n          </Button>\n          <Button onClick={() => { handleShoot(true); }} color=\"primary\" variant=\"contained\" disabled={hunterSelect === null}>\n            { t('yes') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { /* Hunter Select End */ }\n\n      {/* Hunter Could Shoot Start */}\n      <Dialog\n        fullWidth\n        open={isOpenHunterShoot}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('could_shoot')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isKillByWitch) ? (\n                <span className={classes.bad}>{t('cant_shoot')}</span>\n              ) : (\n                <span className={classes.good}>{t('can_shoot')}</span>\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleCloseHunter(); }} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Hunter Could Shoot End */}\n\n      {/* Last Words Start */}\n      <Dialog\n        fullWidth\n        open={isOpenLastWords}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('last_words')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ...\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleCloseLastWords(); }} color=\"primary\" variant=\"contained\">\n            { t('to_night') }\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Last Words End */}\n\n      {/* Knight Start */}\n      <Dialog\n        fullWidth\n        open={isOpenKnight}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('knight_fight')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (isUseKnight) && (<li>{`${t('knight')}: ${list.find(role => role.role.key === KNIGHT.key).index}`}</li>)\n            }\n            { generateSelectPicker(KNIGHT.key) }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={knightSelect === null} onClick={() => {handleFight()}} color=\"primary\" variant=\"contained\">\n            { t('confirm') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Knight End */}\n\n      {/* Knight Result Start */}\n      <Dialog\n        fullWidth\n        open={isOpenKnightResult}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t('fight_result')}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\n              (knightSelect !== null) ? (\n                (knightSelect.role.key === WOLF.key) ? (\n                  <span className={classes.bad}>{t('no_is_wolf', { index: knightSelect.index })}</span>\n                ) : (\n                  <span className={classes.good}>{t('no_is_not_wolf', { index: knightSelect.index })}</span>\n                )\n              ) : (\n                null\n              )\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {handleCloseFight()}} color=\"primary\" variant=\"contained\">\n            { t('to_night') }\n            <CheckIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Knight Result End */}\n    </>\n  );\n};\n\nexport default Game;\n","/* eslint-disable no-extra-label */\nimport React, {\n  useState,\n} from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Select from '@material-ui/core/Select';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CachedIcon from '@material-ui/icons/Cached';\n\nimport {\n  WOLF,\n  PREDICTOR,\n  WITCH,\n  HUNTER,\n  KNIGHT,\n  VILLAGER,\n} from '../../constants/Role';\nimport Setting from '../Setting/Setting';\nimport CheckRole from '../CheckRole/CheckRole';\nimport Game from '../Game/Game';\n\nconst drawerWidth = 240;\n\nconst createArray = (len, itm) => {\n  let arr1 = [itm],\n      arr2 = [];\n  while (len > 0) {\n      if (len & 1) arr2 = arr2.concat(arr1);\n      arr1 = arr1.concat(arr1);\n      len >>>= 1;\n  }\n  return arr2;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    height: '100vh',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst Home = (props) => {\n  const [step, setStep] = useState(0);\n  const [list, setList] = useState([]);\n  const [playerNumber, setPlayerNumber] = useState(6);\n  const [wolfNumber, setWolfNumber] = useState(2);\n  const [isUsePredictor, setIsUsePredictor] = useState(false);\n  const [isUseWitch, setIsUseWitch] = useState(true);\n  const [isUseHunter, setIsUseHunter] = useState(false);\n  const [isUseKnight, setIsUseKnight] = useState(false);\n  const [isKillKind, setIsKillKind] = useState(false); // 屠邊局判斷\n\n  const [isOpenDrawer, setIsOpenDrawer] = useState(false);\n  const { t, i18n } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    i18n.changeLanguage(value);\n    // console.log('value', value);\n    // setLanguage(value);\n  }\n\n  const toggleDrawer = (isOpen) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpenDrawer(isOpen);\n  };\n\n  const handleRestart = () => {\n    // window.location.href = '/';\n    window.location.reload();\n    // setIsOpenDrawer(false);\n  }\n\n  // const handleReSetting = () => {\n  //   setIsOpenDrawer(false);\n  // }\n\n  const getRaddomIndex = () => {\n    return Math.floor(Math.random() * playerNumber);\n  }\n\n  const handleStart = () => {\n    const list = createArray(playerNumber, null);\n\n    // 狼人位置\n    for (let i = 0 ; i < wolfNumber ; i += 1) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WOLF,\n      };\n    }\n\n    // 預言家位置\n    if (isUsePredictor) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: PREDICTOR,\n      };\n    }\n\n    // 女巫位置\n    if (isUseWitch) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: WITCH,\n      };\n    }\n\n    // 獵人位置\n    if (isUseHunter) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: HUNTER,\n      };\n    }\n\n    // 騎士位置\n    if (isUseKnight) {\n      let index = null;\n\n      beginning: while(true) {\n        index = getRaddomIndex();\n        if(list[index] !== null) {\n          continue beginning;\n        } else {\n          break;\n        }\n      }\n\n      list[index] = {\n        index: index + 1,\n        role: KNIGHT,\n      };\n    }\n\n    // 村民位置\n    list.forEach((sit, index) => {\n      if (sit === null) {\n        list[index] = {\n          index: index + 1,\n          role: VILLAGER,\n        };\n      }\n    })\n\n    setList(list);\n    setStep(1);\n  }\n\n  const handleStartGame = () => {\n    setStep(2);\n  }\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <Container maxWidth={false} className={classes.container}>\n        <Typography component=\"div\" >\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                { t('title') }\n              </Typography>\n              <Select\n                color=\"inherit\"\n                native\n                // value={language}\n                onChange={(e) => handleChange(e.target.value)}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value=\"zh-TW\">繁體中文</option>\n                <option value=\"en-US\">English</option>\n              </Select>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            anchor=\"left\"\n            open={isOpenDrawer}\n            onClose={toggleDrawer(false)}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n              <ListItem button key={t('restart')} onClick={handleRestart}>\n                <ListItemIcon><CachedIcon /></ListItemIcon>\n                <ListItemText primary={t('restart')} />\n              </ListItem>\n              {/*}\n              <ListItem button key={t('resetting')} onClick={handleReSetting}>\n                <ListItemIcon><AutorenewIcon /></ListItemIcon>\n                <ListItemText primary={t('resetting')} />\n              </ListItem>\n              {*/}\n            </List>\n          </Drawer>\n            \n          {\n            (step === 0) && (\n              <Setting\n                playerNumber={playerNumber}\n                setPlayerNumber={setPlayerNumber}\n                wolfNumber={wolfNumber}\n                setWolfNumber={setWolfNumber}\n                isUsePredictor={isUsePredictor}\n                setIsUsePredictor={setIsUsePredictor}\n                isUseWitch={isUseWitch}\n                setIsUseWitch={setIsUseWitch}\n                isUseHunter={isUseHunter}\n                setIsUseHunter={setIsUseHunter}\n                handleStart={handleStart}\n                isKillKind={isKillKind}\n                setIsKillKind={setIsKillKind}\n                isUseKnight={isUseKnight}\n                setIsUseKnight={setIsUseKnight}\n              />\n            )\n          }\n          {\n            (step === 1) && (\n              <CheckRole\n                list={list}\n                handleStartGame={handleStartGame}\n              />\n            )\n          }\n          {\n            (step === 2) && (\n              <Game\n                list={list}\n                isUsePredictor={isUsePredictor}\n                isUseWitch={isUseWitch}\n                isUseHunter={isUseHunter}\n                playerNumber={playerNumber}\n                wolfNumber={wolfNumber}\n                isKillKind={isKillKind}\n                setIsKillKind={setIsKillKind}\n                isUseKnight={isUseKnight}\n              />\n            )\n          }\n        </Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\n\nimport enUS from './languages/en-US.json';\nimport zhTW from './languages/zh-TW.json';\n\n// console.log('zhTW', zhTW);\n\ni18n\n.use(initReactI18next)\n.init({\n  // we init with resources\n  resources: {\n    'en-US': {\n      translations: enUS,\n    },\n    'zh-TW': {\n      translations: zhTW,\n    },\n  },\n  lng: localStorage.getItem('language') || 'zh-TW',\n  fallbackLng: 'zh-TW',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  // keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ',',\n  },\n\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport Home from './components/Home/Home';\n// import logo from './logo.svg';\nimport './App.css';\n// import './styles/styles.css';\n\nimport './locales/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/wolf.9caa04d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/predictor.473d5f28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/witch.4dc6d5d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5cf4e8f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/knight.998fe9ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/villager.fa735092.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step_1.6751b7d1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_2.264c120e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_3.3f6f4aa3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_4.a75253e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_5.2e36d3c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_6.dc038730.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_7.84ea5c11.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_8.4898a6d4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_9.83e9ca3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_10.b4e6486e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_11.9f00d56d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_12.b3d32d1f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_13.488a98a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_14.02591e0a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_15.5cf29b44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_16.99894c39.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_17.e7d96e3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_18.527b59e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_19.75d0a097.mp3\";","module.exports = __webpack_public_path__ + \"static/media/step_20.a7d9ef5f.mp3\";"],"sourceRoot":""}